[
    {
        "workspaceId": "ba1cd7b8-1357-4cce-833a-1a11cf089dbd",
        "workspaceName": "Admin monitoring",
        "scanResult": {
            "workspaces": [
                {
                    "id": "ba1cd7b8-1357-4cce-833a-1a11cf089dbd",
                    "name": "Admin monitoring",
                    "description": "Admin monitoring",
                    "type": "AdminWorkspace",
                    "state": "Active",
                    "isOnDedicatedCapacity": false,
                    "reports": [
                        {
                            "reportType": "PowerBIReport",
                            "id": "241af62d-ac83-41da-b96b-250fd5446042",
                            "name": "Feature Usage and Adoption",
                            "datasetId": "55862c95-f7fe-4093-9322-893cbda1c2c2",
                            "createdDateTime": "2024-03-22T03:52:23.533",
                            "modifiedDateTime": "2025-10-06T11:30:36.327",
                            "modifiedBy": "AdminInsights-08571310-c17a-4ecc-920c-71dd345df36e",
                            "createdBy": "AdminInsights-08571310-c17a-4ecc-920c-71dd345df36e",
                            "modifiedById": "08571310-c17a-4ecc-920c-71dd345df36e",
                            "createdById": "08571310-c17a-4ecc-920c-71dd345df36e",
                            "tags": []
                        },
                        {
                            "reportType": "PowerBIReport",
                            "id": "44d93a8e-ae25-4986-903a-8cca0b35e1be",
                            "name": "Purview Hub",
                            "datasetId": "9e5116b4-5aec-4ae2-aae0-df59a3e180f0",
                            "createdDateTime": "2024-03-22T03:52:31.61",
                            "modifiedDateTime": "2025-10-06T11:30:47.02",
                            "modifiedBy": "AdminInsights-08571310-c17a-4ecc-920c-71dd345df36e",
                            "createdBy": "AdminInsights-08571310-c17a-4ecc-920c-71dd345df36e",
                            "modifiedById": "08571310-c17a-4ecc-920c-71dd345df36e",
                            "createdById": "08571310-c17a-4ecc-920c-71dd345df36e",
                            "tags": []
                        },
                        {
                            "reportType": "PowerBIReport",
                            "id": "67b801d0-033d-45de-a262-d3b01cc4695b",
                            "name": "Content Sharing",
                            "datasetId": "3a4d1a62-ed45-4a15-b1e9-cba3d23b8175",
                            "createdDateTime": "2025-10-06T11:30:17.58",
                            "modifiedDateTime": "2025-10-06T11:30:17.58",
                            "modifiedBy": "AdminInsights-08571310-c17a-4ecc-920c-71dd345df36e",
                            "createdBy": "AdminInsights-08571310-c17a-4ecc-920c-71dd345df36e",
                            "modifiedById": "08571310-c17a-4ecc-920c-71dd345df36e",
                            "createdById": "08571310-c17a-4ecc-920c-71dd345df36e",
                            "tags": []
                        }
                    ],
                    "dashboards": [],
                    "datasets": [
                        {
                            "id": "55862c95-f7fe-4093-9322-893cbda1c2c2",
                            "name": "Feature Usage and Adoption",
                            "tables": [
                                {
                                    "name": "Refresh Stats",
                                    "isHidden": true,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Last refresh datetime",
                                            "dataType": "DateTime",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n    Source = DateTime.LocalNow(),\n    #\"Converted To Table\" = #table(1, {{Source}}),\n    #\"Renamed Column\" = Table.RenameColumns(#\"Converted To Table\", {{\"Column1\", \"Last refresh datetime\"}}),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Renamed Column\", {{\"Last refresh datetime\", type datetime}})\nin\n    #\"Changed Type\""
                                        }
                                    ]
                                },
                                {
                                    "name": "Date",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Date",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "CalculatedTableColumn"
                                        },
                                        {
                                            "name": "Date (no year)",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "CalculatedTableColumn"
                                        },
                                        {
                                            "name": "Day",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "CalculatedTableColumn"
                                        },
                                        {
                                            "name": "Year",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "CalculatedTableColumn"
                                        },
                                        {
                                            "name": "Quarter",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "CalculatedTableColumn"
                                        },
                                        {
                                            "name": "Week number",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "CalculatedTableColumn"
                                        },
                                        {
                                            "name": "Year month",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "CalculatedTableColumn"
                                        },
                                        {
                                            "name": "Month number",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "CalculatedTableColumn"
                                        },
                                        {
                                            "name": "Month name",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "CalculatedTableColumn"
                                        },
                                        {
                                            "name": "Day of year",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "CalculatedTableColumn"
                                        },
                                        {
                                            "name": "Day of week",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "CalculatedTableColumn"
                                        },
                                        {
                                            "name": "Day name",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "CalculatedTableColumn"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "VAR startDate =\n    MIN ( 'Audit'[Creation time] )\nVAR lastRefreshDate =\n    MAX ( 'Audit'[Creation time] )\nRETURN\n    ADDCOLUMNS (\n        CALENDAR (\n            startDate,\n            lastRefreshDate\n        ),\n        \"Date (no year)\", [Date],\n        \"Day\", DAY ( [Date] ),\n        \"Year\", YEAR ( [Date] ),\n        \"Quarter\",\n            CONCATENATE (\n                \"Q\",\n                QUARTER ( [Date] )\n            ),\n        \"Week number\",\n            WEEKNUM (\n                [Date],\n                1\n            ),\n        \"Year month\",\n            YEAR ( [Date] ) & \"-\"\n                & MONTH ( [Date] ),\n        \"Month number\", MONTH ( [Date] ),\n        \"Month name\",\n            FORMAT (\n                [Date],\n                \"MMMM\"\n            ),\n        \"Day of year\",\n            DATEDIFF (\n                DATE ( YEAR ( [Date] ), 1, 1 ),\n                [Date],\n                DAY\n            ) + 1,\n        \"Day of week\",\n            WEEKDAY (\n                [Date],\n                1\n            ),\n        \"Day name\",\n            FORMAT (\n                [Date],\n                \"DDD\"\n            )\n    )"
                                        }
                                    ]
                                },
                                {
                                    "name": "Changelog",
                                    "isHidden": true,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Version",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Change type",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Page",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Comment",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Release",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"rVhNbyI5EP0rFqcZKYuyCcmes0GzE2mjjTKb3cMwB9MuwIrb7rHdzPDvt8r9QdOA28BKHJAbXn29qnrur19HN7fj65vR1egVCmO91Ev8/qAUK/gSHH0XAgR7yLxcS79hf63BriX8uNoeTcFzqRyeaK42TjrGtWCfQRUtyEs5VzJjLxbov6NvV6l2OZ74FTAL30tp8WAhlQfrmNTt14JrYA7QHaMvs4VwmntgHn56xxbGBvtr6UpO8Xk+Z8YKsnmJnRVlxhujvCwcfmkMhLTNS++Nvihnr+DAN0CEXx1QGpuUkSW3Mj/CoYAFL5Vna65KCFHTKWHGvZhyz1luBKhjngiZg3ZYFiba3x7HvE3C/MTnVmZItqIIYUy5W80Ntx1rkewN2XiF3Ky7fH/mBdVdRXJxG6nIW4GRI17Lod3iUwC7tDvf9cbUQymkrxKOtZc6U6WgIiugpxkveCa9BBd+ctzcpB9Vr907yRLYmZlnmq/lklMXkuH+7wcINUkqfuUQ+3tTEJdBieOAd0mAbw5sMly87XpQlIOq3cKAinCyD92M2Bjys3G+SjGEx65m2AkB1MM6ZkVAZvLCOFkV1QIMmrk/oYnZk4fcscxoHDp5d16cj99wUmqB9BPoa9JcuE/vYcaRy5iq7XDLVlxH99z9+NektPxr7LvD/oQkSlaocVIeQkxn5gELfdYcM3AOdcZDW2VnxF2xx2qWbcIY3ToSxnU0qlQ7j9thmQN3pY0MsPvxSQP6Au/7k5mUVge+FV5DGDFfP0sRVMDL29O0LurCmjychUER24mT8fUOb0gtPek1aG/spmVOe8JejjtbQw23zlQ6byWKHqLbM/iVEdH+IeA9du87GWKlArXV2rZ9gHfnkP1/Nd5p5ePm0vRaJ6KhmTlJUaIHnYwg9pUU7YeO3qh50zmM8Xyyr2F6eE3H7CAGYtflawJIt3BiL07293KNUMU6q4qmOG57CwsLbgViNkLC1c6SuFc4moBp42EoH31bB/ObdedSSRSsszDn2TtZPJAuvgjVBbtAEetq9IgTw1ScjZ5cI1ox4IXiSxQKqsw1Xf129MPAKEoKWtKhRB1yVLrOyuvrm9+SrMWiewxaga4tnodbmWFfIOfay+yZ/sE+7MT2S5VtT7u1Dj9c0z6e70HDzTBdvpeAA5gEJXfvIIKUPJOr/1Qt8wm4x0Xpmhs5w09KGwxKpB2/K9oF749jDmnF8xAj7U7bMSHWVL9mo1rhby9t2ApxJXLAyUPQtrpIocP5CUidm0nPx+6rIfSRzOF9MAei1my0fRKxtbcQQyY//AEaLFcfD6W5fTiU8P1le2gIvL3+WTdZmKxk5oRlMywr29cz9Lbli8c+cVGNctfTUT2438sl/v3n0YV6l7KiXTn30qvq5QNF3XnjdQlumKUyq99AxUG//Qc=\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Version = _t, #\"Change type\" = _t, Page = _t, Comment = _t, Release = _t]),\n    #\"Changed Data Types\" = Table.TransformColumnTypes(Source, {{\"Change type\", type text}, {\"Page\", type text}, {\"Comment\", type text}, {\"Release\", type text}})\nin\n    #\"Changed Data Types\""
                                        }
                                    ]
                                },
                                {
                                    "name": "_Measures",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Value",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "CalculatedTableColumn"
                                        }
                                    ],
                                    "measures": [
                                        {
                                            "name": "Active capacities",
                                            "expression": "CALCULATE(\n    DISTINCTCOUNT(Audit[CapacityKeyIndex]), FILTER(Capacity,\n        Capacity[Capacity SKU] <> \"PPU\" &&\n        Capacity[Capacity SKU] <> \"Pro\" &&\n        Capacity[CapacityKeyIndex] <> BLANK() &&\n        Capacity[CapacityKeyIndex] <> 0\n        )\n    ) + 0",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Active users",
                                            "expression": "\n CALCULATE(\n        DISTINCTCOUNT ( Audit[UserKeyIndex] ) ,\n        User[UserKeyIndex] <> BLANK() &&\n        User[UserKeyIndex] <> 0\n         ) + 0",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Active workspaces",
                                            "expression": "\nCALCULATE(\n    DISTINCTCOUNT(Audit[WorkspaceKeyIndex]),\n        Workspace[WorkspaceKeyIndex] <> BLANK() &&\n        Workspace[WorkspaceKeyIndex] <> 0\n        ) + 0",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Activities",
                                            "expression": "COUNTROWS(Audit)",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Items",
                                            "expression": "CALCULATE(DISTINCTCOUNT('Fabric Items'[Item Id]), USERELATIONSHIP(Workspace[Workspace Id],'Fabric Items'[Workspace Id]),USERELATIONSHIP(Capacity[CapacityKeyIndex],Workspace[CapacityKeyIndex]))",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Total activities",
                                            "expression": "[Activities] + 0",
                                            "isHidden": true
                                        },
                                        {
                                            "name": "Total items",
                                            "expression": "CALCULATE(DISTINCTCOUNT('Fabric Items'[Item Id]), USERELATIONSHIP(Workspace[Workspace Id],'Fabric Items'[Workspace Id]),USERELATIONSHIP(Capacity[CapacityKeyIndex],Workspace[CapacityKeyIndex])) + 0 ",
                                            "isHidden": true
                                        },
                                        {
                                            "name": "Total active items alt text",
                                            "expression": "\"Card visual shows Total active items\" & [Total items]",
                                            "isHidden": true
                                        },
                                        {
                                            "name": "Total activities alt text",
                                            "expression": "\"Card visual shows Total activities\" & [Total activities] ",
                                            "isHidden": true
                                        },
                                        {
                                            "name": "Total capacities alt text",
                                            "expression": "\"Card visual shows Total active capacities\" & [Active capacities]",
                                            "isHidden": true
                                        },
                                        {
                                            "name": "Total inactive items alt text",
                                            "expression": "\"Card visual shows Total inactive items\" & [Total items]",
                                            "isHidden": true
                                        },
                                        {
                                            "name": "Total items alt text",
                                            "expression": "\"Card visual shows Total items\" & [Total items]",
                                            "isHidden": true
                                        },
                                        {
                                            "name": "Total users alt text",
                                            "expression": "\"Card visual shows Total active users\" & [Active users]",
                                            "isHidden": true
                                        },
                                        {
                                            "name": "Total workspaces alt text",
                                            "expression": "\"Card visual shows Total active workspaces\" & [Active workspaces]",
                                            "isHidden": true
                                        },
                                        {
                                            "name": "Report last refreshed alt text",
                                            "expression": "\"Report last refreshed\" & FORMAT(MAX('Refresh Stats'[Last refresh datetime]), \"DD-MMM-YYYY HH:MM:SS\") & \" UTC\"",
                                            "isHidden": true
                                        }
                                    ],
                                    "source": [
                                        {
                                            "expression": "{0}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Workspace",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Workspace name",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Workspace type",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Workspace Id",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "WorkspaceKeyIndex",
                                            "dataType": "Int64",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Domain Id",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Capacity Id",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "CapacityKeyIndex",
                                            "dataType": "Int64",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Url",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n    Source = Table.FromValue(AdminInsights.GetAzureBlobContents(\"admin-metadata\", \"Workspace\", \"v2\", RangeStart, RangeEnd, #\"BlobUrl\")),\n    #\"Removed Duplicates\" = Table.Distinct(Source, {\"WorkspaceKeyIndex\"}),\n    #\"Removed Columns\" = Table.SelectColumns(#\"Removed Duplicates\", {\"DisplayName\", \"Type\", \"ArtifactId\", \"WorkspaceKeyIndex\", \"CapacityObjectId\", \"DataDomainObjectId\", \"Url\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\", {{\"DisplayName\", \"Workspace name\"}, {\"ArtifactId\", \"Workspace Id\"}, {\"CapacityObjectId\", \"CapacityId\"}, {\"Type\", \"Workspace type\"}, {\"DataDomainObjectId\", \"Domain Id\"}}),\n    #\"Replaced Values (Type)\" = Table.ReplaceValue(#\"Renamed Columns\", each [Workspace type], each if [Workspace type] = \"0\" then \"Personal\" else if [Workspace type] = \"1\" then \"Regular\" else if [Workspace type] = \"2\" then \"Admin Monitoring\" else if [Workspace type] = \"NA\" then \"NA\" else null, Replacer.ReplaceValue, {\"Workspace type\"}),\n    #\"Lowercased CapacityObjectId\" = Table.TransformColumns(#\"Replaced Values (Type)\", {{\"CapacityId\", Text.Lower, type text}}),    \n    #\"Source (Capacity)\" = #\"Capacities function\"(RangeStart, RangeEnd, BlobUrl),\n    #\"Removed Columns (Capacity)\" = Table.RemoveColumns(#\"Source (Capacity)\", {\"Capacity name\"}),    \n    #\"Merged Query\" = Table.Join(#\"Lowercased CapacityObjectId\", {\"CapacityId\"}, #\"Removed Columns (Capacity)\", {\"Capacity Id\"}, JoinKind.LeftOuter),\n    #\"Replaced Values (Capacity)\" = Table.ReplaceValue(#\"Merged Query\", each [Capacity Id], each if [Capacity SKU] = \"PP3\" then \"-2\" else if [Capacity SKU] = \"SharedOnPremium\" then \"-3\" else [Capacity Id], Replacer.ReplaceText, {\"Capacity Id\"}),\n    #\"Removed Duplicate Columns (Capacity)\" = Table.RemoveColumns(#\"Replaced Values (Capacity)\", {\"Capacity SKU\", \"CapacityId\"}),\n    #\"Changed Data Types\" = Table.TransformColumnTypes(#\"Removed Duplicate Columns (Capacity)\", {{\"Workspace name\", type text}, {\"Workspace Id\", type text}, {\"WorkspaceKeyIndex\", Int64.Type}, {\"Workspace type\", type text}, {\"Domain Id\", type text}, {\"Url\", type text}}),\n    #\"Replaced Values (Info)\" = Table.ReplaceValue(#\"Changed Data Types\", each [Workspace name], each if [WorkspaceKeyIndex] = 0 then \"Workspace Info Not Available\" else [Workspace name], Replacer.ReplaceText, {\"Workspace name\"})\nin\n    #\"Replaced Values (Info)\""
                                        }
                                    ]
                                },
                                {
                                    "name": "Audit",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Incremental_Refresh_DateTime_Column",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Creation time",
                                            "dataType": "DateTime",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "CapacityKeyIndex",
                                            "dataType": "Int64",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Consumption method",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "DatasetKeyIndex",
                                            "dataType": "Int64",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "ObjectKeyIndex",
                                            "dataType": "Int64",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Operation",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "ReportKeyIndex",
                                            "dataType": "Int64",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "UserKeyIndex",
                                            "dataType": "Int64",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "WorkspaceKeyIndex",
                                            "dataType": "Int64",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "AppKeyIndex",
                                            "dataType": "Int64",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "DashboardKeyIndex",
                                            "dataType": "Int64",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Distribution method",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Creation date",
                                            "dataType": "DateTime",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Result status",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n    Source = Table.FromValue(AdminInsights.GetAzureBlobContents(\"audit\", \"structured\", \"V3\", RangeStart, RangeEnd, BlobUrl)),\n    #\"Removed Columns\" = Table.SelectColumns(Source, {\"Incremental_Refresh_DateTime_Column\", \"CreationTime\", \"CapacityKeyIndex\", \"ConsumptionMethod\", \"DatasetKeyIndex\", \"ObjectKeyIndex\", \"Operation\", \"ReportKeyIndex\", \"UserKeyIndex\", \"WorkspaceKeyIndex\", \"AppKeyIndex\", \"DashboardKeyIndex\", \"DistributionMethod\", \"ResultStatus\"}),\n    #\"Duplicated Column\" = Table.DuplicateColumn(#\"Removed Columns\", \"CreationTime\", \"Creation date\"),\n    #\"Changed Data Types\" = Table.TransformColumnTypes(#\"Duplicated Column\", {{\"Creation date\", type date}}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Changed Data Types\", {{\"CreationTime\", \"Creation time\"}, {\"ConsumptionMethod\", \"Consumption method\"}, {\"DistributionMethod\", \"Distribution method\"}, {\"ResultStatus\", \"Result status\"}})\nin\n    #\"Renamed Columns\""
                                        }
                                    ]
                                },
                                {
                                    "name": "Capacity",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Capacity name",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Capacity SKU",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Capacity Id",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "CapacityKeyIndex",
                                            "dataType": "Int64",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n     Source = #\"Capacities function\"(RangeStart, RangeEnd, BlobUrl),\n    #\"Removed Duplicates\" = Table.Distinct(Source, {\"CapacityKeyIndex\"}),\n    #\"Replaced Values (Capacity Id)\" = Table.ReplaceValue(#\"Removed Duplicates\", each [Capacity Id], each if [Capacity SKU] = \"PP3\" then \"-2\" else if [Capacity SKU] = \"SharedOnPremium\" then \"-3\" else [Capacity Id], Replacer.ReplaceText, {\"Capacity Id\"}),\n    #\"Replaced Values (Capacity name)\" = Table.ReplaceValue(#\"Replaced Values (Capacity Id)\", each [Capacity name], each if [Capacity SKU] = \"PP3\" then \"Reserved Capacity for Premium Per User Workspaces\" else if [Capacity SKU] = \"SharedOnPremium\" then \"Reserved Capacity for Pro Workspaces\" else [Capacity name], Replacer.ReplaceText, {\"Capacity name\"}),\n    #\"Replaced Values (Capacity SKU)\" = Table.ReplaceValue(#\"Replaced Values (Capacity name)\", each [Capacity SKU], each if [Capacity SKU] = \"PP3\" then \"PPU\" else if [Capacity SKU] = \"SharedOnPremium\" then \"Pro\" else [Capacity SKU], Replacer.ReplaceText, {\"Capacity SKU\"}),\n    #\"Replaced Values (Info)\" = Table.ReplaceValue(#\"Replaced Values (Capacity SKU)\", each [Capacity name], each if [CapacityKeyIndex] = 0 then \"Capacity Info Not Available\" else [Capacity name], Replacer.ReplaceText, {\"Capacity name\"})\nin\n    #\"Replaced Values (Info)\""
                                        }
                                    ]
                                },
                                {
                                    "name": "User",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Email address",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "User (UPN)",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "PUID",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "User type",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "User Id",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "UserKeyIndex",
                                            "dataType": "Int64",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n\u00a0\u00a0\u00a0 Source = Table.FromValue(AdminInsights.GetAzureBlobContents(\"admin-metadata\", \"User\", \"v2\", RangeStart, RangeEnd, #\"BlobUrl\")),\n    #\"Removed Duplicates\" = Table.Distinct(Source, {\"UserKeyIndex\"}),\n    #\"Filtered Blank and Null Keys\" = Table.SelectRows(#\"Removed Duplicates\", each [UserKeyIndex] <> null and [UserKeyIndex] <> \"\"),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Filtered Blank and Null Keys\", {{\"EmailAddress\", \"Email address\"}, {\"UserPrincipalName\", \"User (UPN)\"}, {\"Type\", \"User type\"}, {\"ArtifactId\", \"User Id\"}}),\n    #\"Removed Columns\" = Table.SelectColumns(#\"Renamed Columns\", {\"Email address\", \"User (UPN)\", \"PUID\", \"User type\", \"User Id\", \"UserKeyIndex\"}),\n    #\"Changed Data Types\" = Table.TransformColumnTypes(#\"Removed Columns\", {{\"Email address\", type text}, {\"UserKeyIndex\", Int64.Type}, {\"User (UPN)\", type text}, {\"PUID\", type text}, {\"User type\", type text}, {\"User Id\", type text}}),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Changed Data Types\", each ([UserKeyIndex] <> 0)),\n    #\"Replaced Values\" = Table.InsertRows(#\"Filtered Rows\", 0, {[#\"Email address\" = \"User Info Not Available\", #\"User (UPN)\" = \"User Info Not Available\", #\"PUID\" = \"-1\", #\"User type\" = \"User Info Not Available\", #\"User Id\" = \"00000000-0000-0000-0000-000000000000\", UserKeyIndex = 0]})\nin\n    #\"Replaced Values\""
                                        }
                                    ]
                                },
                                {
                                    "name": "Fabric Items",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Item name",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Item Id",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Item type",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Item sub type",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Created by user Id",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Modified by user Id",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "IndexKey",
                                            "dataType": "Int64",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Workspace Id",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Endorsement",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Sensitivity label",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "MIP label Id",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Is deleted",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Activity status",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "expression": "\nIF(\n    'Fabric Items'[IndexKey] IN VALUES('Audit'[ObjectKeyIndex]), \n    \"Active\", \n    \"Inactive\"\n)",
                                            "columnType": "Calculated"
                                        },
                                        {
                                            "name": "User (UPN)",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "expression": "LOOKUPVALUE(User[User (UPN)], User[User Id], 'Fabric Items'[Modified by user Id])",
                                            "columnType": "Calculated"
                                        },
                                        {
                                            "name": "Url",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n    Source = Table.FromValue(AdminInsights.GetAzureBlobContents(\"admin-metadata\", \"Unified\", \"v2\", RangeStart, RangeEnd, #\"BlobUrl\")),\n    #\"Removed Duplicates\" = Table.Distinct(Source, {\"IndexKey\"}),\n    #\"Removed Columns\" = Table.SelectColumns(#\"Removed Duplicates\", {\"DisplayName\", \"ArtifactId\", \"Type\", \"SubType\", \"CreatedByUserObjectId\", \"ModifiedByUserObjectId\", \"IndexKey\", \"WorkspaceObjectId\", \"MIPLabelId\", \"Endorsement\", \"LastUpdateTimestamp\", \"Url\"}),\n    #\"Merged Queries\" = Table.Join(#\"Removed Columns\", {\"MIPLabelId\"}, #\"MIP Labels\", {\"MIP label Id\"}, JoinKind.LeftOuter),\n    #\"Removed Columns (MIP)\" = Table.SelectColumns(#\"Merged Queries\", {\"DisplayName\", \"ArtifactId\", \"Type\", \"SubType\", \"CreatedByUserObjectId\", \"ModifiedByUserObjectId\", \"IndexKey\", \"WorkspaceObjectId\", \"Endorsement\", \"LastUpdateTimestamp\", \"Url\", \"Sensitivity label\", \"MIP label Id\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns (MIP)\", {{\"ArtifactId\", \"Item Id\"}, {\"DisplayName\", \"Item name\"}, {\"CreatedByUserObjectId\", \"Created by user Id\"}, {\"ModifiedByUserObjectId\", \"Modified by user Id\"}, {\"WorkspaceObjectId\", \"Workspace Id\"}, {\"Type\", \"Item type\"}, {\"SubType\", \"Item sub type\"}}),\n    #\"Replaced Values (Dataset)\" = Table.ReplaceValue(#\"Renamed Columns\", \"Dataset\", \"SemanticModel\", Replacer.ReplaceText, {\"Item type\"}),\n    #\"Replaced Values (LUTS)\" = Table.ReplaceValue(#\"Replaced Values (Dataset)\", each [LastUpdateTimestamp], each (#datetime(1,1,1,0,0,0) + #duration(0,0,0, [LastUpdateTimestamp]/1000)), Replacer.ReplaceValue, {\"LastUpdateTimestamp\"}),\n    #\"Replaced Values (SubType)\" = Table.ReplaceValue(#\"Replaced Values (LUTS)\", null, \"Other\", Replacer.ReplaceValue, {\"Item sub type\"}),\n    #\"Calculated MaxLastUpdated\" = List.Max(#\"Replaced Values (SubType)\"[LastUpdateTimestamp]),\n    #\"Added DaysSinceLastUpdated\" = Table.AddColumn(#\"Replaced Values (SubType)\", \"DaysSinceLastUpdated\", each Duration.Days(#\"Calculated MaxLastUpdated\" - [LastUpdateTimestamp])),\n    #\"Added IsDeleted\" = Table.AddColumn(#\"Added DaysSinceLastUpdated\", \"Is deleted\", each if [DaysSinceLastUpdated] = null then \"NA\" else if [DaysSinceLastUpdated] >= 1 then \"True\" else \"False\"),\n    #\"Removed Columns (LUTS)\" = Table.RemoveColumns(#\"Added IsDeleted\", {\"LastUpdateTimestamp\", \"DaysSinceLastUpdated\"}),\n    #\"Changed Data Types\" = Table.TransformColumnTypes(#\"Removed Columns (LUTS)\", {{\"Item name\", type text}, {\"Created by user Id\", type text}, {\"Modified by user Id\", type text}, {\"Item Id\", type text}, {\"Endorsement\", type text}, {\"Item type\", type text}, {\"Item sub type\", type text}, {\"Workspace Id\", type text}, {\"IndexKey\", Int64.Type}, {\"Is deleted\", type text}, {\"Url\", type text}})\nin\n    #\"Changed Data Types\""
                                        }
                                    ]
                                }
                            ],
                            "expressions": [
                                {
                                    "name": "Capacities function",
                                    "expression": "let\n    Source = (RangeStart as datetime, RangeEnd as datetime, BlobUrl as text) => let\n    Source = Table.FromValue(AdminInsights.GetAzureBlobContents(\"admin-metadata\",\"Capacity\", \"v2\", RangeStart, RangeEnd, BlobUrl)),\n    #\"Changed Data Types\" = Table.TransformColumnTypes(Source, {{\"DisplayName\", type text}, {\"ArtifactId\", type text}, {\"CapacityKeyIndex\", Int64.Type}, {\"ModifiedDateTime\", type datetime}, {\"Type\", type text}, {\"CreatedDateTime\", type datetime}}),\n    #\"Removed Columns\" = Table.SelectColumns(#\"Changed Data Types\", {\"DisplayName\", \"Type\", \"ArtifactId\", \"CapacityKeyIndex\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\", {{\"DisplayName\", \"Capacity name\"}, {\"ArtifactId\", \"Capacity Id\"}, {\"Type\", \"Capacity SKU\"}})\nin\n    #\"Renamed Columns\"\nin\n    Source"
                                },
                                {
                                    "name": "RangeStart",
                                    "expression": "#datetime(2025, 1, 1, 0, 0, 0) meta [IsParameterQuery=true, Type=\"DateTime\", IsParameterQueryRequired=true]"
                                },
                                {
                                    "name": "RangeEnd",
                                    "expression": "#datetime(2026, 1, 1, 0, 0, 0) meta [IsParameterQuery=true, Type=\"DateTime\", IsParameterQueryRequired=true]"
                                },
                                {
                                    "name": "BlobUrl",
                                    "expression": "\" \" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = \"Text\"]"
                                },
                                {
                                    "name": "MIP Labels",
                                    "expression": "let\n    Source = Table.FromValue(AdminInsights.GetAzureBlobContents(\"admin-metadata\", \"MipLabel\", \"v2\", RangeStart, RangeEnd, #\"BlobUrl\")),\n    #\"Removed Columns\" = Table.SelectColumns(Source, {\"DisplayName\", \"MipLabelId\", \"IsMipLabelDisabled\", \"MipLabelKeyIndex\"}),\n    #\"Changed Data Types\" = Table.TransformColumnTypes(#\"Removed Columns\", {{\"MipLabelKeyIndex\", Int64.Type}, {\"DisplayName\", type text}, {\"MipLabelId\", type text}, {\"IsMipLabelDisabled\", type text}}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Changed Data Types\", {{\"DisplayName\", \"Sensitivity label\"}, {\"MipLabelId\", \"MIP label Id\"}, {\"IsMipLabelDisabled\", \"Is MIP label disabled\"}})\nin\n    #\"Renamed Columns\""
                                }
                            ],
                            "configuredBy": "AdminInsights-08571310-c17a-4ecc-920c-71dd345df36e",
                            "configuredById": "08571310-c17a-4ecc-920c-71dd345df36e",
                            "isEffectiveIdentityRequired": false,
                            "isEffectiveIdentityRolesRequired": false,
                            "refreshSchedule": {
                                "days": [
                                    "Sunday",
                                    "Monday",
                                    "Tuesday",
                                    "Wednesday",
                                    "Thursday",
                                    "Friday",
                                    "Saturday"
                                ],
                                "times": [
                                    "11:35"
                                ],
                                "enabled": true,
                                "localTimeZoneId": "UTC",
                                "notifyOption": "NoNotification"
                            },
                            "targetStorageMode": "Abf",
                            "createdDate": "2024-03-22T03:52:20.463",
                            "contentProviderType": "PbixInImportMode",
                            "datasourceUsages": [
                                {
                                    "datasourceInstanceId": "3434d473-4c7d-4f45-b83c-ee5e77404060"
                                }
                            ],
                            "tags": []
                        },
                        {
                            "id": "9e5116b4-5aec-4ae2-aae0-df59a3e180f0",
                            "name": "Purview Hub",
                            "tables": [
                                {
                                    "name": "Fabric Items",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Item name",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Created by user Id",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Modified by user Id",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Item Id",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Endorsement",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Direct access count",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Group access count",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Item type",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Workspace Id",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Access count bins",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "expression": "\n\nVAR TotalAccessCount = 'Fabric Items'[Direct access count] + 'Fabric Items'[Group access count]\n\nVAR BinText = SWITCH(\n    TRUE(),\n    TotalAccessCount <= 100, \"0-100\",\n    TotalAccessCount > 100 && TotalAccessCount <= 2000, \"101-2000\",\n    TotalAccessCount > 2000 && TotalAccessCount <= 5000, \"2001-5000\",\n    TRUE(), \"5000+\"\n)\n\nRETURN\n    BinText\n",
                                            "columnType": "Calculated"
                                        },
                                        {
                                            "name": "Item sub type",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "IndexKey",
                                            "dataType": "Int64",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "MIP label Id",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "LastUpdateTimestamp",
                                            "dataType": "DateTime",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "DaysSinceLastUpdated",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Label name",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n    Source = Table.FromValue(AdminInsights.GetAzureBlobContents(\"admin-metadata\",\"Unified\", \"v2\", RangeStart, RangeEnd, #\"BlobUrl\")),\n    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"DisplayName\", \"ArtifactId\", \"Type\", \"SubType\", \"CreatedByUserObjectId\", \"ModifiedByUserObjectId\", \"IndexKey\", \"DirectAccessCount\", \"GroupAccessCount\", \"WorkspaceObjectId\", \"MIPLabelId\", \"Endorsement\", \"LastUpdateTimestamp\"}),\n    #\"Removed Duplicates\" = Table.Distinct(#\"Removed Other Columns\", {\"IndexKey\"}),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Duplicates\",{{\"DisplayName\", type text}, {\"CreatedByUserObjectId\", type text}, {\"ModifiedByUserObjectId\", type text}, {\"ArtifactId\", type text}, {\"MIPLabelId\", type text}, {\"Endorsement\", type text}, {\"Type\", type text}, {\"DirectAccessCount\", Int64.Type}, {\"GroupAccessCount\", Int64.Type}, {\"SubType\", type text}, {\"WorkspaceObjectId\", type text}, {\"IndexKey\", Int64.Type}}),\n    #\"Merged Queries\" = Table.Join(#\"Changed Type\", {\"MIPLabelId\"}, #\"MIP Labels\", {\"MIP label Id\"}, JoinKind.LeftOuter),\n    #\"Removed Other Columns1\" = Table.SelectColumns(#\"Merged Queries\",{\"DisplayName\", \"ArtifactId\", \"Type\", \"SubType\", \"CreatedByUserObjectId\", \"ModifiedByUserObjectId\", \"IndexKey\", \"DirectAccessCount\", \"GroupAccessCount\", \"WorkspaceObjectId\", \"Endorsement\", \"Sensitivity label\", \"MIP label Id\", \"LastUpdateTimestamp\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Other Columns1\",{{\"ArtifactId\", \"Item Id\"}, {\"DisplayName\", \"Item name\"}, {\"CreatedByUserObjectId\", \"Created by user Id\"}, {\"ModifiedByUserObjectId\", \"Modified by user Id\"}, {\"WorkspaceObjectId\", \"Workspace Id\"}, {\"DirectAccessCount\", \"Direct access count\"}, {\"GroupAccessCount\", \"Group access count\"}, {\"Type\", \"Item type\"}, {\"SubType\", \"Item sub type\"}}),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Renamed Columns\", each [Item sub type], \n            each if [Item type] = \"Report\" then if [Item sub type] = \"2\" then \"Interactive Report\" else if [Item sub type] = \"6\" then \"Paginated Report\" else \"\" else \"\",Replacer.ReplaceValue,{\"Item sub type\"}),\n    #\"Replaced Value1\" = Table.ReplaceValue(#\"Replaced Value\",null,\"None\",Replacer.ReplaceValue,{\"Endorsement\"}),\n    #\"Replaced Value2\" = Table.AddColumn(#\"Replaced Value1\", \"Label name\", \n            each if [Sensitivity label] = null and [MIP label Id] = null then \"No label\" else if [Sensitivity label] = null and [MIP label Id] <> null then \"Invalid label\" else [Sensitivity label]),\n    #\"Replace Value LUTS\" = Table.ReplaceValue(#\"Replaced Value2\",each [LastUpdateTimestamp], each (#datetime(1,1,1,0,0,0)+#duration(0,0,0,[LastUpdateTimestamp]/1000)),Replacer.ReplaceValue,{\"LastUpdateTimestamp\"}),\n    #\"Changed Type LUTS\" = Table.TransformColumnTypes(#\"Replace Value LUTS\",{{\"LastUpdateTimestamp\", type date}}),\n    #\"Remove Columns1\" = Table.RemoveColumns(#\"Changed Type LUTS\",{\"Sensitivity label\"}),\n    MaxLastUpdated = List.Max(#\"Remove Columns1\"[LastUpdateTimestamp]),\n    #\"Add LastUpdatedAge\" = Table.AddColumn(#\"Remove Columns1\", \"DaysSinceLastUpdated\", each Duration.Days(MaxLastUpdated - [LastUpdateTimestamp])),\n    #\"Changed DaysSinceLastUpdated Type\" = Table.TransformColumnTypes(#\"Add LastUpdatedAge\",{{\"DaysSinceLastUpdated\", Int64.Type}})\nin\n    #\"Changed DaysSinceLastUpdated Type\""
                                        }
                                    ]
                                },
                                {
                                    "name": "Workspace",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Workspace name",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Workspace Id",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "WorkspaceKeyIndex",
                                            "dataType": "Int64",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Capacity Id",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Workspace type",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "CapacityKeyIndex",
                                            "dataType": "Int64",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "DomainKeyIndex",
                                            "dataType": "Int64",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "LastUpdateTimestamp",
                                            "dataType": "DateTime",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "DaysSinceLastUpdated",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n    Source = Table.FromValue(AdminInsights.GetAzureBlobContents(\"admin-metadata\",\"Workspace\", \"v2\", RangeStart, RangeEnd, #\"BlobUrl\")),\n    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"DisplayName\", \"Type\", \"ArtifactId\", \"WorkspaceKeyIndex\", \"CapacityObjectId\", \"DataDomainObjectId\", \"LastUpdateTimestamp\"}),\n    #\"Removed Duplicates\" = Table.Distinct(#\"Removed Other Columns\", {\"WorkspaceKeyIndex\"}),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Removed Duplicates\", each [Type], each if [Type] = \"0\" then \"Personal\" else if [Type] = \"1\" then \"Regular\" else if [Type] = \"2\" then \"Admin Monitoring\" else if [Type] = \"NA\" then \"NA\" else null, Replacer.ReplaceValue,{\"Type\"}),\n    #\"Lowercased Text\" = Table.TransformColumns(#\"Replaced Value\",{{\"CapacityObjectId\", Text.Lower, type text}}),\n    \n    Source2 = #\"Capacities function\"(RangeStart, RangeEnd , BlobUrl),\n    #\"Removed Columns\" = Table.RemoveColumns(Source2,{\"Capacity name\"}),\n    \n    #\"Merged Query\" = Table.Join(#\"Lowercased Text\", {\"CapacityObjectId\"}, #\"Removed Columns\", {\"Capacity Id\"}, JoinKind.LeftOuter),\n    #\"Replaced Value 2\" = Table.ReplaceValue(\n        #\"Merged Query\", each [CapacityObjectId], each if [Capacity SKU] = \"PP3\" then \"-2\" else if [Capacity SKU] = \"SharedOnPremium\" then \"-3\" else [CapacityObjectId],Replacer.ReplaceText,{\"CapacityObjectId\"}),\n  #\"Domains Source\" = Table.FromValue(AdminInsights.GetAzureBlobContents(\"admin-metadata\",\"DataDomain\", \"v2\", RangeStart, RangeEnd, #\"BlobUrl\")),\n  Domains = let SelectedColumns = Table.SelectColumns(#\"Domains Source\",{\"ArtifactId\", \"DataDomainKeyIndex\"})\nin\nTable.RenameColumns(SelectedColumns,{{\"ArtifactId\", \"Domain ID\"}, {\"DataDomainKeyIndex\", \"DomainKeyIndex\"}}),\n  #\"Merged With Domains\" = Table.Join(#\"Replaced Value 2\", {\"DataDomainObjectId\"}, Domains, {\"Domain ID\"}, JoinKind.LeftOuter),\n    #\"Removed Columns1\" = Table.RemoveColumns(#\"Merged With Domains\",{\"Capacity SKU\", \"Capacity Id\", \"DataDomainObjectId\", \"Domain ID\"}),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Columns1\",{{\"DisplayName\", type text}, {\"ArtifactId\", type text}, {\"WorkspaceKeyIndex\", Int64.Type}, {\"Type\", type text}, {\"DomainKeyIndex\", Int64.Type}, {\"LastUpdateTimestamp\", Int64.Type}}),\n    #\"Rename\" = Table.RenameColumns(#\"Changed Type\",{{\"DisplayName\", \"Workspace name\"}, {\"ArtifactId\", \"Workspace Id\"}, {\"CapacityObjectId\", \"Capacity Id\"}, {\"Type\", \"Workspace type\"}}),\n    #\"Changed Type1\" = Table.ReplaceValue(#\"Rename\",each [LastUpdateTimestamp], each (#datetime(1,1,1,0,0,0)+#duration(0,0,0,[LastUpdateTimestamp]/1000)),Replacer.ReplaceValue,{\"LastUpdateTimestamp\"}),\n    MaxLastUpdated = List.Max(#\"Changed Type1\"[LastUpdateTimestamp]),\n    #\"Add LastUpdatedAge\" = Table.AddColumn(#\"Changed Type1\", \"DaysSinceLastUpdated\", each Duration.Days(MaxLastUpdated - [LastUpdateTimestamp])),\n    #\"Changed Type2\" = Table.TransformColumnTypes(#\"Add LastUpdatedAge\",{{\"LastUpdateTimestamp\", type date}, {\"DaysSinceLastUpdated\", Int64.Type}})\nin\n    #\"Changed Type2\""
                                        }
                                    ]
                                },
                                {
                                    "name": "_Measures",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [],
                                    "measures": [
                                        {
                                            "name": "Access Count",
                                            "expression": "SUM('Fabric Items'[Direct access count]) + SUM('Fabric Items'[Group access count]) ",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Total Workspaces",
                                            "expression": "\nCALCULATE(\n    DISTINCTCOUNT(Workspace[WorkspaceKeyIndex]),\n        Workspace[WorkspaceKeyIndex] <> BLANK() &&\n        Workspace[WorkspaceKeyIndex] <> 0\n        ) + 0",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Total Direct Users",
                                            "expression": "SUM('Fabric Items'[Direct access count]) + 0 ",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Total Group Users",
                                            "expression": "SUM('Fabric Items'[Group access count]) + 0 ",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Workspace Title (Drillthrough)",
                                            "expression": "\nIF(\n    ISBLANK(SELECTEDVALUE(Workspace[Workspace name])),\n    \"NA\",\n    SELECTEDVALUE(Workspace[Workspace name])\n)",
                                            "isHidden": true
                                        },
                                        {
                                            "name": "No. of items",
                                            "expression": "IF(ISBLANK(DISTINCTCOUNT('Fabric Items'[Item Id])),0,DISTINCTCOUNT('Fabric Items'[Item Id]))",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "No. of endorsed items",
                                            "expression": "\n\nIF(ISBLANK(COUNTROWS(DISTINCT(FILTER('Fabric Items', 'Fabric Items'[Endorsement] IN { \"Promoted\", \"Certified\" })))),0,COUNTROWS(DISTINCT(FILTER('Fabric Items', 'Fabric Items'[Endorsement] IN { \"Promoted\", \"Certified\" }))))",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "No. of promoted items",
                                            "expression": "\nIF(ISBLANK(COUNTROWS(DISTINCT(FILTER('Fabric Items', 'Fabric Items'[Endorsement] IN { \"Promoted\" })))),0,COUNTROWS(DISTINCT(FILTER('Fabric Items', 'Fabric Items'[Endorsement] IN { \"Promoted\" }))))",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "No. of certified items",
                                            "expression": "\nIF(ISBLANK(COUNTROWS(DISTINCT(FILTER('Fabric Items', 'Fabric Items'[Endorsement] IN { \"Certified\" })))),0,COUNTROWS(DISTINCT(FILTER('Fabric Items', 'Fabric Items'[Endorsement] IN { \"Certified\" }))))",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "No. of unendorsed items",
                                            "expression": "\nCOUNTROWS(DISTINCT(FILTER('Fabric Items', 'Fabric Items'[Endorsement] IN { \"None\" })))",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Endorsed items (%)",
                                            "expression": "[No. of endorsed items]/[No. of items]",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "No. of labeled items",
                                            "expression": "IF(ISBLANK(COUNTROWS(DISTINCT(FILTER('Fabric Items', NOT(ISBLANK('Fabric Items'[MIP label Id])))))),0,COUNTROWS(DISTINCT(FILTER('Fabric Items', NOT(ISBLANK('Fabric Items'[MIP label Id]))))))",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "No. of unlabeled items",
                                            "expression": "COUNTROWS(DISTINCT(FILTER('Fabric Items',ISBLANK('Fabric Items'[MIP label Id]))))",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Labeled items (%)",
                                            "expression": "[No. of labeled items]/[No. of items]",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Unlabeled items (%)",
                                            "expression": "IF(ISBLANK([No. of unlabeled items]),0,[No. of unlabeled items]/[No. of items])",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Most used label",
                                            "expression": "\n\nVAR _vals = SUMMARIZE (FILTER('Fabric Items', NOT(ISBLANK('Fabric Items'[MIP label Id]))),'Fabric Items'[Label name],\"Count\", COUNTAX('Fabric Items', 'Fabric Items'[Label name]))  \nVAR _measureMax = MAXX (_vals, [Count])  \nVAR _result = CALCULATE (MAXX (FILTER (_vals, [Count] = _measureMax), 'Fabric Items'[Label name]))\n\nRETURN _result",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Label comp",
                                            "expression": "\nVAR _NumIcons_Total = 10\nVAR _NumIcons_Full = ROUNDDOWN(DIVIDE([No. of labeled items],[No. of items],0)*10,0)\nVAR _NumIcons_empty = _NumIcons_Total-_NumIcons_Full\n\nVAR _FullIcon = \"\u2b24\"\nVAR _EmptyIcon = \"\u25cb\"\n\nVAR _Bar = IF(_NumIcons_Full <10,REPT(_FullIcon,_NumIcons_Full) & REPT(_EmptyIcon,_NumIcons_empty), REPT(\"\ud83c\udfc6\",6))\nRETURN\n    _Bar",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Most used label count",
                                            "expression": "\n\nVAR _vals = SUMMARIZE (FILTER('Fabric Items', NOT(ISBLANK('Fabric Items'[MIP label Id]))),'Fabric Items'[Label name],\"Count\", COUNTAX('Fabric Items', 'Fabric Items'[Label name]))  \nVAR _measureMax = MAXX (_vals, [Count])  \n\nRETURN _measureMax",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Most unlabeled WS count",
                                            "expression": "\n\nVAR _vals = SUMMARIZE (FILTER('Fabric Items', ISBLANK('Fabric Items'[MIP label Id])),'Fabric Items'[Workspace Id],\"Count\", COUNTAX('Fabric Items', 'Fabric Items'[Workspace Id]))  \nVAR _measureMax = MAXX (_vals, [Count])  \n\nRETURN _measureMax",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Most unlabeled WS",
                                            "expression": "\n\nVAR _vals = SUMMARIZE (FILTER('Fabric Items', ISBLANK('Fabric Items'[MIP label Id])),'Fabric Items'[Workspace Id],\"Count\", COUNTAX('Fabric Items', 'Fabric Items'[Workspace Id]))  \nVAR _measureMax = MAXX (_vals, [Count])  \nVAR _WSID = CALCULATE (MAXX (FILTER (_vals, [Count] = _measureMax), 'Fabric Items'[Workspace Id]))\n\nVAR _result = CALCULATE (MAXX (FILTER (Workspace, [Workspace Id] = _WSID), 'Workspace'[Workspace name]))\n\n\nRETURN _result",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Most populated WS count",
                                            "expression": "\n\nVAR _vals = SUMMARIZE ('Fabric Items','Fabric Items'[Workspace Id],\"Count\", COUNTAX('Fabric Items', 'Fabric Items'[Item Id]))  \nVAR _measureMax = MAXX (_vals, [Count])  \n\nRETURN _measureMax",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Most populated WS",
                                            "expression": "\n\nVAR _vals = SUMMARIZE ('Fabric Items','Fabric Items'[Workspace Id],\"Count\", COUNTAX('Fabric Items', 'Fabric Items'[Item Id]))  \nVAR _measureMax = MAXX (_vals, [Count])  \nVAR _WSID = CALCULATE (MAXX (FILTER (_vals, [Count] = _measureMax), 'Fabric Items'[Workspace Id]))\nVAR _result = CALCULATE (MAXX (FILTER (Workspace, [Workspace Id] = _WSID), 'Workspace'[Workspace name]))\n\nRETURN _result",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "No. of Workspace with item type",
                                            "expression": "IF(ISBLANK(DISTINCTCOUNT('Fabric Items'[Workspace Id])),0,DISTINCTCOUNT('Fabric Items'[Workspace Id]))",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Most accessed item count",
                                            "expression": "MAXX('Fabric Items','Fabric Items'[Direct access count])",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Most accessed item",
                                            "expression": "\n\nVAR __measureMax = CALCULATE( MAXX('Fabric Items',[Access Count]))\nVAR _result = CALCULATE ( MAXX (FILTER ('Fabric Items', [Access Count] = __measureMax), 'Fabric Items'[Item name]))\n\nRETURN _result",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Most accessed Creator",
                                            "expression": "\n\n\nVAR _vals = SUMMARIZE('Fabric Items','Fabric Items'[Created by user Id],\"Count\", SUM('Fabric Items'[Direct access count]))\nVAR _measureMax = MAXX (_vals,[Count])  \nVAR _UserID = CALCULATE (MAXX (FILTER (_vals, [Count] = _measureMax), 'Fabric Items'[Created by user Id]))\nVAR _result = CALCULATE (MAXX (FILTER ('User', [User Id] = _UserID), 'User'[Email address]))\n\nRETURN _result",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Most accessed Creator count",
                                            "expression": "\n\nVAR _vals = SUMMARIZE('Fabric Items','Fabric Items'[Created by user Id],\"Count\", SUM('Fabric Items'[Direct access count]))\nVAR _measureMax = MAXX (_vals,[Count])  \n\nRETURN _measureMax",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Most accessed Creator name",
                                            "expression": "\n\n\nVAR _vals = SUMMARIZE('Fabric Items','Fabric Items'[Created by user Id],\"Count\", SUM('Fabric Items'[Direct access count])+SUM('Fabric Items'[Group access count]))\nVAR _measureMax = MAXX (_vals,[Count])  \nVAR _UserID = CALCULATE (MAXX (FILTER (_vals, [Count] = _measureMax), 'Fabric Items'[Created by user Id]))\nVAR _result = CALCULATE (MAXX (FILTER ('User', [User Id] = _UserID), 'User'[User name]))\n\nRETURN _result",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "labeled items (%) with icon",
                                            "expression": "\n\nVAR Percent_labeled = IF(ISBLANK([No. of labeled items]),0,[No. of labeled items]/[No. of items])\nVAR par = IF(Percent_labeled*100<='Set label coverage goal'[Parameter Value], \"\ud83d\udea9\",\"\")\n\nRETURN par",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Most unlabeled item type count",
                                            "expression": "\n\nVAR _vals = SUMMARIZE (FILTER('Fabric Items', ISBLANK('Fabric Items'[MIP label Id])),'Fabric Items'[Item type],\"Count\", COUNTAX('Fabric Items', 'Fabric Items'[Item type]))  \nVAR _measureMax = MAXX (_vals, [Count])  \n\nRETURN _measureMax",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Most unlabeled item type",
                                            "expression": "\n\nVAR _vals = SUMMARIZE (FILTER('Fabric Items', ISBLANK('Fabric Items'[MIP label Id])),'Fabric Items'[Item type],\"Count\", COUNTAX('Fabric Items', 'Fabric Items'[Item type]))  \nVAR _measureMax = MAXX (_vals, [Count])    \nVAR _result = CALCULATE (MAXX (FILTER (_vals, [Count] = _measureMax), 'Fabric Items'[Item type]))\n\nRETURN _result",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "labeled items (%) with binary",
                                            "expression": "\n\nVAR Percent_labeled = IF(ISBLANK([No. of labeled items]),0,[No. of labeled items]/[No. of items])\nVAR par = IF(Percent_labeled*100<='Set label coverage goal'[Parameter Value], \"1\",\"0\")\n\nRETURN par",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Access flag with binary",
                                            "expression": "\n\nVAR _measureMax = MAXX(Filter('Fabric Items', 'Fabric Items'[Endorsement] IN { \"None\" }), [Access Count],TRUE) \nVAR Most_accessed_item =if(_measureMax>= [Access parameter], \"1\",\"0\")\n\nRETURN Most_accessed_item",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Most disticnt wokspace a creator published to",
                                            "expression": "\n\nVAR _vals = SUMMARIZE ('Fabric Items','Fabric Items'[Created by user Id],\"Count\", DISTINCTCOUNT('Workspace'[Workspace Id]))  \nVAR _measureMax = MAXX (_vals, [Count])  \nVAR _UserID = CALCULATE (MAXX (FILTER (_vals, [Count] = _measureMax), 'Fabric Items'[Created by user Id]))\nVAR _result = CALCULATE (MAXX (FILTER (User, [User Id] = _UserID), 'User'[User name]))\n\nRETURN _result",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Most disticnt wokspace a creator published to count",
                                            "expression": "\n\nVAR _vals = SUMMARIZE ('Fabric Items','Fabric Items'[Created by user Id],\"Count\", DISTINCTCOUNT('Fabric Items'[Workspace Id]))  \nVAR _measureMax = MAXX (_vals, [Count])  \n\nRETURN _measureMax",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "No. of Workspaces in domains",
                                            "expression": "IF(ISBLANK(COUNTROWS(DISTINCT(FILTER('Workspace', NOT(ISBLANK('workspace'[DomainKeyIndex])))))),0,COUNTROWS(DISTINCT(FILTER('Workspace', NOT(ISBLANK('workspace'[DomainKeyIndex]))))))",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Workspaces in domains (%)",
                                            "expression": "[No. of Workspaces in domains]/[Total Workspaces]",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "No. of Workspaces not in domains",
                                            "expression": "COUNTROWS(DISTINCT(FILTER('Workspace',ISBLANK('Workspace'[DomainKeyIndex]))))",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Workspaces not in domains (%)",
                                            "expression": "[No. of Workspaces not in domains]/[Total Workspaces]",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Access flag with icon",
                                            "expression": "\n\nVAR _measureMax = MAXX(Filter('Fabric Items', 'Fabric Items'[Endorsement] IN { \"None\" }), [Access Count],TRUE)  \nVAR _Return =if(_measureMax>= [Access parameter]  , \"\ud83d\udea9\",\"\")\n\n\nRETURN _Return",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Access flag with action icon",
                                            "expression": "\n\nVAR _measureMax = MAXX(Filter('Fabric Items', 'Fabric Items'[Endorsement] IN { \"None\" }), [Access Count],TRUE)  \nVAR _Return =if(_measureMax>= [Access parameter]  , \"\ud83d\udd27\",\"\")\n\n\nRETURN _Return",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Most populated WS without domain",
                                            "expression": "\n\nVAR _vals = SUMMARIZE (FILTER('Workspace','Workspace'[DomainKeyIndex] = BLANK() ),'Workspace'[Workspace Id],\"Count\", [No. of items]) \nVAR _measureMax = MAXX (_vals, [Count])  \nVAR _WSID = CALCULATE (MAXX (FILTER (_vals, [Count] = _measureMax), 'Workspace'[Workspace Id]))\nVAR _result = CALCULATE (MAXX (FILTER (Workspace, [Workspace Id] = _WSID), 'Workspace'[Workspace name]))\n\nRETURN _result",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Most populated WS without domain count",
                                            "expression": "\n\nVAR _vals = SUMMARIZE (FILTER('Workspace','Workspace'[DomainKeyIndex] = BLANK() ),'Workspace'[Workspace Id],\"Count\", [No. of items]) \nVAR _measureMax = MAXX (_vals, [Count])  \n\nRETURN _measureMax",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Most Items a creator published outside of a domains count",
                                            "expression": "\n\nVAR _MAX_items = CALCULATE(\n                        MAXX(\n                            SUMMARIZE('Fabric Items','Fabric Items'[Created by user Id], \"Count\", [No. of items]), [Count] ),\n                            FILTER('Workspace',Workspace[DomainKeyIndex] = BLANK())\n)\n\nRETURN _MAX_items",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Most Items a creator published outside of a domains",
                                            "expression": "\n\nVAR _MAX_items = CALCULATE(\n                        MAXX(\n                            SUMMARIZE('Fabric Items','Fabric Items'[Created by user Id], \"Count\", [No. of items]), [Count] ),\n                            FILTER('Workspace',Workspace[DomainKeyIndex] = BLANK())\n)\nVAR _Creator_ID = CALCULATE(\n                        MAXX(\n                            FILTER (SUMMARIZE('Fabric Items','Fabric Items'[Created by user Id], \"Count\", [No. of items]), [Count] = _MAX_items), 'Fabric Items'[Created by user Id]),\n                            FILTER('Workspace',Workspace[DomainKeyIndex] = BLANK())\n                            )\n\n\nVAR _result = CALCULATE (MAXX (FILTER (User, [User Id] = _Creator_ID), 'User'[User name]))\n\n\nRETURN _result",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Most accessed item with endorsement",
                                            "expression": "\n\nVAR __measureMax = CALCULATE( MAXX('Fabric Items',[Access Count]), FILTER('Fabric Items','Fabric Items'[Endorsement] in {\"Certified\", \"Promoted\", \"Master\"}))\nVAR _result = CALCULATE ( MAXX (FILTER ('Fabric Items', [Access Count] = __measureMax), 'Fabric Items'[Item name]), FILTER('Fabric Items','Fabric Items'[Endorsement] in {\"Certified\", \"Promoted\", \"Master\"}))\n\nRETURN _result",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Workspace with most endorsed items",
                                            "expression": "\n\nVAR _MAX_items = CALCULATE(\n                        MAXX(\n                            SUMMARIZE('Fabric Items','Fabric Items'[Workspace Id], \"Count\", [No. of items]), [Count] ),\n                            FILTER('Fabric Items','Fabric Items'[Endorsement] in {\"Certified\", \"Promoted\", \"Master\"})\n)\nVAR _Workspace_ID = CALCULATE(\n                        MAXX(\n                            FILTER (SUMMARIZE('Fabric Items','Fabric Items'[Workspace Id], \"Count\", [No. of items]), [Count] = _MAX_items), 'Fabric Items'[Workspace Id]),\n                            FILTER('Fabric Items','Fabric Items'[Endorsement] in {\"Certified\", \"Promoted\", \"Master\"})\n)\n\n\nVAR _result = CALCULATE (MAXX (FILTER (Workspace, [Workspace Id] = _Workspace_ID), 'Workspace'[Workspace name]))\n\n\nRETURN _result",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Workspace with most endorsed items count",
                                            "expression": "\n\nVAR _result = CALCULATE(\n                        MAXX(\n                            SUMMARIZE('Fabric Items','Fabric Items'[Workspace Id], \"Count\", [No. of items]), [Count] ),\n                            FILTER('Fabric Items','Fabric Items'[Endorsement] in {\"Certified\", \"Promoted\", \"Master\"})\n)\n\nRETURN _result",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Creator with most endorsed items",
                                            "expression": "\n\nVAR _MAX_items = CALCULATE(\n                        MAXX(\n                            SUMMARIZE('Fabric Items','Fabric Items'[Created by user Id], \"Count\", [No. of items]), [Count] ),\n                             FILTER('Fabric Items','Fabric Items'[Endorsement] in {\"Certified\", \"Promoted\", \"Master\"})\n)\nVAR _Creator_ID = CALCULATE(\n                        MAXX(\n                            FILTER (SUMMARIZE('Fabric Items','Fabric Items'[Created by user Id], \"Count\", [No. of items]), [Count] = _MAX_items), 'Fabric Items'[Created by user Id]),\n                             FILTER('Fabric Items','Fabric Items'[Endorsement] in {\"Certified\", \"Promoted\", \"Master\"})\n)\n\nVAR _result = CALCULATE (MAXX (FILTER (User, [User Id] = _Creator_ID), 'User'[User name]))\n\n\nRETURN _result",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Creator with most endorsed items count",
                                            "expression": "\n\nVAR _result = CALCULATE(\n                        MAXX(\n                            SUMMARIZE('Fabric Items','Fabric Items'[Created by user Id], \"Count\", [No. of items]), [Count] ),\n                             FILTER('Fabric Items','Fabric Items'[Endorsement] in {\"Certified\", \"Promoted\", \"Master\"})\n)\n\nRETURN _result",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Most accessed item with no endorsement",
                                            "expression": "\n\nVAR __measureMax = CALCULATE( MAXX('Fabric Items',[Access Count]), FILTER('Fabric Items','Fabric Items'[Endorsement] in {\"None\"}))\nVAR _result = CALCULATE ( MAXX (FILTER ('Fabric Items', [Access Count] = __measureMax), 'Fabric Items'[Item name]), FILTER('Fabric Items','Fabric Items'[Endorsement] in {\"None\"}))\n\nRETURN _result",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Most accessed item with no endorsement count",
                                            "expression": "\n\nVAR _result = CALCULATE( MAXX('Fabric Items',[Access Count]), FILTER('Fabric Items','Fabric Items'[Endorsement] in {\"None\"}))\n\nRETURN _result",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Most accessed item with endorsement count",
                                            "expression": "\n\nVAR _result = CALCULATE( MAXX('Fabric Items',[Access Count]), FILTER('Fabric Items','Fabric Items'[Endorsement] in {\"Certified\", \"Promoted\", \"Master\"}))\n\nRETURN _result",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Most accessed item with endorsement type",
                                            "expression": "\n\nVAR __measureMax = CALCULATE( MAXX('Fabric Items',[Access Count]), FILTER('Fabric Items','Fabric Items'[Endorsement] in {\"Certified\", \"Promoted\", \"Master\"}))\nVAR _result = CALCULATE ( MAXX (FILTER ('Fabric Items', [Access Count] = __measureMax), 'Fabric Items'[Endorsement]), FILTER('Fabric Items','Fabric Items'[Endorsement] in {\"Certified\", \"Promoted\", \"Master\"}))\n\nRETURN _result",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "No. of unendorsed items with view access above threshold",
                                            "expression": "\n\nVAR _Result = CALCULATE(\n                        DISTINCTCOUNT(\n                            'Fabric Items'[Item Id])+0,\n                            FILTER('Fabric Items','Fabric Items'[Endorsement] IN {\"None\"}),\n                            FILTER('Fabric Items',[Access Count] >= 'Access limit to promote endorsement'[Access parameter])\n)\n\nRETURN _Result",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "LatestLastUpdatedTimestamp",
                                            "expression": "MAXX('Fabric Items','Fabric Items'[LastUpdateTimestamp])",
                                            "isHidden": false
                                        }
                                    ],
                                    "source": [
                                        {
                                            "expression": "let\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i44FAA==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Column1\", type text}}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type\",{\"Column1\"})\nin\n    #\"Removed Columns\""
                                        }
                                    ]
                                },
                                {
                                    "name": "User",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Email address",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "User (UPN)",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "PUID",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "UserKeyIndex",
                                            "dataType": "Int64",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "User type",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "User Id",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "User name",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "expression": "LEFT ([User (UPN)], FIND (\"@\", [User (UPN)],,1) - 1)",
                                            "columnType": "Calculated"
                                        },
                                        {
                                            "name": "LastUpdateTimestamp",
                                            "dataType": "DateTime",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "DaysSinceLastUpdated",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n\u00a0\u00a0\u00a0 Source = Table.FromValue(AdminInsights.GetAzureBlobContents(\"admin-metadata\",\"User\", \"v2\", RangeStart, RangeEnd, #\"BlobUrl\")),\n    #\"Filtered blank and null keys\" = Table.SelectRows(Source, each [UserKeyIndex] <> null and [UserKeyIndex] <> \"\"),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Filtered blank and null keys\",{\"EmailAddress\", \"UserPrincipalName\", \"PUID\", \"Type\", \"ArtifactId\", \"UserKeyIndex\", \"LastUpdateTimestamp\"}),\n    #\"Removed Duplicates\" = Table.Distinct(#\"Removed Other Columns\", {\"UserKeyIndex\"}),\n    #\"LUTS ReplaceValue\" = Table.ReplaceValue(#\"Removed Duplicates\",each [LastUpdateTimestamp], each (#datetime(1,1,1,0,0,0)+#duration(0,0,0,[LastUpdateTimestamp]/1000)),Replacer.ReplaceValue,{\"LastUpdateTimestamp\"}),\n\u00a0\u00a0\u00a0 #\"Changed Types\" = Table.TransformColumnTypes(#\"LUTS ReplaceValue\",{{\"EmailAddress\", type text}, {\"UserKeyIndex\", Int64.Type}, {\"UserPrincipalName\", type text}, {\"PUID\", type text}, {\"Type\", type text}, {\"ArtifactId\", type text}, {\"LastUpdateTimestamp\", type date}}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Changed Types\",{{\"EmailAddress\", \"Email address\"}, {\"UserPrincipalName\", \"User (UPN)\"}, {\"Type\", \"User type\"}, {\"ArtifactId\", \"User Id\"}}),\n    MaxLastUpdated = List.Max(#\"Renamed Columns\"[LastUpdateTimestamp]),\n    #\"Add LastUpdatedAge\" = Table.AddColumn(#\"Renamed Columns\", \"DaysSinceLastUpdated\", each Duration.Days(MaxLastUpdated - [LastUpdateTimestamp])),\n    #\"Changed DaysSinceLastUpdated Type\" = Table.TransformColumnTypes(#\"Add LastUpdatedAge\",{{\"DaysSinceLastUpdated\", Int64.Type}})\nin\n    #\"Changed DaysSinceLastUpdated Type\""
                                        }
                                    ]
                                },
                                {
                                    "name": "Capacity",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Capacity name",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Capacity SKU",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Capacity Id",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "CapacityKeyIndex",
                                            "dataType": "Int64",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n     Source = #\"Capacities function\"(RangeStart, RangeEnd , BlobUrl),\n    #\"Insert_Shared_Keys\" = \n    if Table.ContainsAny(#\"Source\",{\n        [CapacityKeyIndex = -1]}) then #\"Source\" else\n    Table.InsertRows(#\"Source\",0,{[Capacity name = \"Shared\",Capacity Id = \"-4\", CapacityKeyIndex = -1, Capacity SKU = \"NA\"]}),\n    #\"Removed Duplicates\" = Table.Distinct(Insert_Shared_Keys, {\"CapacityKeyIndex\"}),\n    #\"Replaced Internal Capacity Ids\" = Table.ReplaceValue(\n        #\"Removed Duplicates\", each [Capacity Id], each if [Capacity SKU] = \"PP3\" then \"-2\" else if [Capacity SKU] = \"SharedOnPremium\" then \"-3\" else [Capacity Id],Replacer.ReplaceText,{\"Capacity Id\"}),\n    #\"Replaced Internal Capacity Names\" = Table.ReplaceValue(\n        #\"Replaced Internal Capacity Ids\", each [Capacity name], each if [Capacity SKU] = \"PP3\" then \"Reserved Capacity for Premium Per User Workspaces\" else if [Capacity SKU] = \"SharedOnPremium\" then \"Reserved Capacity for Pro Workspaces\" else [Capacity name], Replacer.ReplaceText,{\"Capacity name\"}),\n    #\"Replaced Internal Capacity SKUs\" = Table.ReplaceValue(\n        #\"Replaced Internal Capacity Names\", each [Capacity SKU], each if [Capacity SKU] = \"PP3\" then \"PPU\" else if [Capacity SKU] = \"SharedOnPremium\" then \"Pro\" else [Capacity SKU], Replacer.ReplaceText,{\"Capacity SKU\"})\nin\n    #\"Replaced Internal Capacity SKUs\""
                                        }
                                    ]
                                },
                                {
                                    "name": "Set label coverage goal",
                                    "isHidden": true,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Parameter",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "CalculatedTableColumn"
                                        }
                                    ],
                                    "measures": [
                                        {
                                            "name": "Parameter Value",
                                            "expression": "SELECTEDVALUE('Set label coverage goal'[Parameter], 70)",
                                            "isHidden": true
                                        }
                                    ],
                                    "source": [
                                        {
                                            "expression": "GENERATESERIES(0, 100, 1)"
                                        }
                                    ]
                                },
                                {
                                    "name": "Domain",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Domain name",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Domain Id",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "DomainKeyIndex",
                                            "dataType": "Int64",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "ParentDomainKeyIndex",
                                            "dataType": "Int64",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Path",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "expression": "PATH(Domain[DomainKeyIndex], Domain[ParentDomainKeyIndex])",
                                            "columnType": "Calculated"
                                        },
                                        {
                                            "name": "Parent domain name",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "expression": "\n    VAR ParentDomainKeyIndex = PATHITEM(Domain[Path], 1, INTEGER)\n    RETURN\n        LOOKUPVALUE(Domain[Domain name], Domain[DomainKeyIndex], ParentDomainKeyIndex)",
                                            "columnType": "Calculated"
                                        },
                                        {
                                            "name": "Subdomain name",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "expression": "\n    VAR SubdomainKeyIndex = PATHITEM(Domain[Path], 2, INTEGER)\n    RETURN\n        LOOKUPVALUE(Domain[Domain name], Domain[DomainKeyIndex], SubdomainKeyIndex)",
                                            "columnType": "Calculated"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n  Domain = Table.FromValue(AdminInsights.GetAzureBlobContents(\"admin-metadata\",\"DataDomain\", \"v2\", RangeStart, RangeEnd, #\"BlobUrl\")),\n  #\"Merged queries\" = Table.NestedJoin(Domain, {\"ParentDataDomainObjectId\"}, Domain, {\"ArtifactId\"}, \"Domain\", JoinKind.LeftOuter),\n  #\"Expanded Domain\" = Table.ExpandTableColumn(#\"Merged queries\", \"Domain\", {\"DataDomainKeyIndex\"}, {\"ParentDataDomainKeyIndex\"}),\n  #\"Selected Columns\" = Table.SelectColumns(#\"Expanded Domain\",{\"DisplayName\", \"ArtifactId\", \"DataDomainKeyIndex\", \"ParentDataDomainKeyIndex\"}),\n  #\"Changed Types\" = Table.TransformColumnTypes(#\"Selected Columns\", {{\"DisplayName\", type text}, {\"ArtifactId\", type text}, {\"ParentDataDomainKeyIndex\", Int64.Type}, {\"DataDomainKeyIndex\", Int64.Type}}),\n  #\"Renamed columns\" = Table.RenameColumns(#\"Changed Types\", {{\"DisplayName\", \"Domain name\"}, {\"ArtifactId\", \"Domain Id\"}, {\"DataDomainKeyIndex\", \"DomainKeyIndex\"}, {\"ParentDataDomainKeyIndex\", \"ParentDomainKeyIndex\"}})\nin\n  #\"Renamed columns\""
                                        }
                                    ]
                                },
                                {
                                    "name": "Filter by dimension",
                                    "isHidden": true,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Investigation path",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "CalculatedTableColumn"
                                        },
                                        {
                                            "name": "Parameter Fields",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "CalculatedTableColumn"
                                        },
                                        {
                                            "name": "Parameter Order",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "CalculatedTableColumn"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "{\n    (\"Workspaces\", NAMEOF('Workspace'[Workspace name]), 1),\n    (\"Item types\", NAMEOF('Fabric Items'[Item type]), 2),\n    (\"Creators\", NAMEOF('User'[Email address]), 3),\n    (\"Domains\", NAMEOF(Domain[Domain name]), 0)\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Access limit to promote endorsement",
                                    "isHidden": true,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Parameter2",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "CalculatedTableColumn"
                                        }
                                    ],
                                    "measures": [
                                        {
                                            "name": "Access parameter",
                                            "expression": "SELECTEDVALUE('Access limit to promote endorsement'[Parameter2], 1000)",
                                            "isHidden": true
                                        }
                                    ],
                                    "source": [
                                        {
                                            "expression": "GENERATESERIES(0, 1000, 1)"
                                        }
                                    ]
                                }
                            ],
                            "expressions": [
                                {
                                    "name": "BlobUrl",
                                    "expression": "\"http://127.0.0.1:10000/devstoreaccount1/purview-hub-empty?sv=2018-03-28&st=2024-04-18T13%3A40%3A51Z&se=2024-04-20T13%3A40%3A00Z&sr=c&sp=racwdl&sig=J1S1WS2R85A8itAC6ufzaAZi6F6p7dGPrusEx%2F1SARM%3D\" meta [IsParameterQuery=true, Type=\"Text\", IsParameterQueryRequired=true]"
                                },
                                {
                                    "name": "RangeStart",
                                    "expression": "#datetime(2000, 1, 1, 0, 0, 0) meta [IsParameterQuery=true, Type=\"DateTime\", IsParameterQueryRequired=true]"
                                },
                                {
                                    "name": "RangeEnd",
                                    "expression": "#datetime(2000, 1, 1, 0, 0, 0) meta [IsParameterQuery=true, Type=\"DateTime\", IsParameterQueryRequired=true]"
                                },
                                {
                                    "name": "Capacities function",
                                    "expression": "let\n    Source = (RangeStart as datetime, RangeEnd as datetime, BlobUrl as text) => let\n    Source =     Table.FromValue(AdminInsights.GetAzureBlobContents(\"admin-metadata\",\"Capacity\", \"v2\", RangeStart, RangeEnd, BlobUrl)),\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"DisplayName\", type text}, {\"ArtifactId\", type text}, {\"CapacityKeyIndex\", Int64.Type}, {\"ModifiedDateTime\", type datetime}, {\"Type\", type text}}),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Changed Type\",{\"DisplayName\", \"Type\", \"ArtifactId\", \"CapacityKeyIndex\"}),\n    #\"Rename1\" = Table.RenameColumns(#\"Removed Other Columns\",{{\"DisplayName\", \"Capacity name\"}, {\"ArtifactId\", \"Capacity Id\"}, {\"Type\", \"Capacity SKU\"}})\n\nin\n    Rename1\nin\n    Source"
                                },
                                {
                                    "name": "MIP Labels",
                                    "expression": "let\n    Source = Table.FromValue(AdminInsights.GetAzureBlobContents(\"admin-metadata\",\"MipLabel\", \"v2\", RangeStart, RangeEnd, #\"BlobUrl\")),\n    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"DisplayName\", \"MipLabelId\", \"IsMipLabelDisabled\", \"MipLabelKeyIndex\"}),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Other Columns\",{{\"MipLabelKeyIndex\", Int64.Type}, {\"DisplayName\", type text}, {\"MipLabelId\", type text}, {\"IsMipLabelDisabled\", type text}}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Changed Type\",{{\"DisplayName\", \"Sensitivity label\"}, {\"MipLabelId\", \"MIP label Id\"}, {\"IsMipLabelDisabled\", \"Is MIP label disabled\"}})\nin\n    #\"Renamed Columns\""
                                }
                            ],
                            "configuredBy": "AdminInsights-08571310-c17a-4ecc-920c-71dd345df36e",
                            "configuredById": "08571310-c17a-4ecc-920c-71dd345df36e",
                            "isEffectiveIdentityRequired": false,
                            "isEffectiveIdentityRolesRequired": false,
                            "refreshSchedule": {
                                "days": [
                                    "Sunday",
                                    "Monday",
                                    "Tuesday",
                                    "Wednesday",
                                    "Thursday",
                                    "Friday",
                                    "Saturday"
                                ],
                                "times": [
                                    "11:35"
                                ],
                                "enabled": true,
                                "localTimeZoneId": "UTC",
                                "notifyOption": "NoNotification"
                            },
                            "targetStorageMode": "Abf",
                            "createdDate": "2024-03-22T03:52:30.287",
                            "contentProviderType": "PbixInImportMode",
                            "datasourceUsages": [
                                {
                                    "datasourceInstanceId": "3434d473-4c7d-4f45-b83c-ee5e77404060"
                                }
                            ],
                            "tags": []
                        },
                        {
                            "id": "3a4d1a62-ed45-4a15-b1e9-cba3d23b8175",
                            "name": "Content Sharing",
                            "tables": [
                                {
                                    "name": "Refresh Stats",
                                    "isHidden": true,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Last refresh datetime",
                                            "dataType": "DateTime",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n    Source = DateTime.LocalNow(),\n    #\"Converted To Table\" = #table(1, {{Source}}),\n    #\"Renamed Column\" = Table.RenameColumns(#\"Converted To Table\", {{\"Column1\", \"Last refresh datetime\"}}),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Renamed Column\", {{\"Last refresh datetime\", type datetime}})\nin\n    #\"Changed Type\""
                                        }
                                    ]
                                },
                                {
                                    "name": "Changelog",
                                    "isHidden": true,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Version",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Change type",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Page",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Comment",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"nVhNb+M2EP0rA59awA283bbbHNMERY1+JE1i5LDJgRLHEhtKFEjajv99Z0jJlmTJURbYg6WQb2YeH9+M9uvX2eLi02w+uxFeQGEkalVm9HylNVQiQ8e/pUQJqlReCQ3ysBLWxsLtFq3LhaVtcI+VsX72Mp+Cem2KRJUBWKqtkhvGVgWWTpkSvIHUovAIv4vEqhSWHgsHabPpsLIVLYYfy58T3SrczeGqFHrvlJvDk7GvrhIpgigl3KAXSrt631TcqzRF5+DabEoPj7lFlxstwWmVouU6hNZmB2ulPQaWAoGCwtCfRdyc8ubpIQVDlUyOxzc/By8SMFYG+DlosSfk5jlUtlWO6dW4pVPLUVeUl9FeVY4TrKwpDIHFZFSitPJ7erKGUrMhk4s6tx/P5HadizKj7OLfoRQFwpqgOxKhcNem9EhcPcRXbehzellVRBzBd/RAlWuEO7Ojiv/doN1zgAw9+BxhVaq1Yq0wasiE36amLDH1JF2pLP3Q+ynFReKPegnVMbW7w6ulpENGLR0pGqRVtNvn1myyHBzFYVXTP9kS2ZTATdlXLaUA3QFHZb1BgcJtLAaZbY2SYIhrLaqKuTZr2Aq9wZBQRplUbizisTCOO1ZvKqzkGrqrOThpfteiIqze5XjgIdCAckrBD/Q2aFyH49KYYRk5FS6ln6EyFvcYWHPRm1IaButLkJC0ZUBpyGMp1cTWfLGxkYp8uK4kxkLRhQs5nK4lluvLNFpd7Tddbq+DvUnO5zb5jwQCK0cqJhURnxLJ6SrjVJCNt4jMeweoifb5nWhN+WRMdC+SjfeElBjzWgj7eoI6BjqgyLZ3gUhIeaz3E/t7niXod0haIFYL4Z9nsFM+h4LkGyiEXBEh5Qcid+6CKiNuIIrskGp7m4B1jwVlLOHv5R05ZkK+yPeXTSJoOlplNG0XLjplWftZtERgjU0IVJ+2oIvBtspXY358XMrWw8Ofq3lUwXeru3++r3/7fYWNsxCffCliXhSiDLoQh3AxnZ8+dCMcQ3SXHGHenwueZ0vHVo7yiY71iU4fb21GpxxSDmI+YIzk1wHtNKFkkxHOG7opZf7Bja1X4uFd1AYfJFXyOgbRHgFaLa39uvERttzYf2qsnz+UjkSnsnJkay+NI9HgAtPxBu2Ya/LCDtksj9gVudaWUOpQv4xxDx8M1NHg+uRw+nHOslHv+TJJcDemEOTEscgheX05EzpC1Ee4JgemBuCa/jyyf8iCjp3+lOJpZXAT4qCcRwTjrnM63dSgv04cj6Jl9Dae0dZpQc2Ecg6k32QaN+30hH43GMH6Rnfqw5yMMAM4vTUjtQ2wWls+Xa6i2XbZ27YstzTVGhpBxwoK9747FodlpOHTzZOjDFc6ls0w6vCE4k2WxSvmyAbSHJpG7o0n1aqgUXaZ+Dz0LdMP9M2HdHn2s6jNsOt+WzWdxHnKlObXQ2aT58besQ0wSwz1j+04Epxj+Dgl9Rh+7DH8OM5wiHTOGR5ofK10/BSqR153muYAq781zfew+p12GYta3f8VBpWbAR+5DK1uio9xP7Gow1zncv5SZcxE/RC/2oJxdkDPz19tQp83i8VnhEVj3fEbPXTOeCCx4E8Xi3dhefgElcb/sGCQWseTAdwm8crrejyZBDJIemzLlbCkU66pVlYDAdOaQGfOmb28/A8=\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Version = _t, #\"Change type\" = _t, Page = _t, Comment = _t]),\n    #\"Changed Data Types\" = Table.TransformColumnTypes(Source, {{\"Change type\", type text}, {\"Page\", type text}, {\"Comment\", type text}})\nin\n    #\"Changed Data Types\""
                                        }
                                    ]
                                },
                                {
                                    "name": "_Measures",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Value",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "CalculatedTableColumn"
                                        }
                                    ],
                                    "measures": [
                                        {
                                            "name": "Group access count",
                                            "expression": "SUM ( 'Fabric Items'[Group access count] )",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Total access count",
                                            "expression": "SUM ( 'Fabric Items'[User access count] ) + SUM ( 'Fabric Items'[Group access count] )",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Total capacities",
                                            "expression": "DISTINCTCOUNT('Capacity'[Capacity Id])",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Total domains",
                                            "expression": "DISTINCTCOUNT(Domain[Domain Id])",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Total items",
                                            "expression": "DISTINCTCOUNT('Fabric Items'[Item Id])",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Total workspaces",
                                            "expression": "DISTINCTCOUNT('Fabric Items'[Workspace Id])",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Unendorsed items",
                                            "expression": "CALCULATE ( [Total items], 'Fabric Items'[Endorsement] = \"None\" || ISBLANK('Fabric Items'[Endorsement]) ) + 0",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Unlabeled items",
                                            "expression": "CALCULATE ([Total items], 'Fabric Items'[Sensitivity label] = \"\" || ISBLANK ( 'Fabric Items'[Sensitivity label] )) + 0",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "User access count",
                                            "expression": "SUM ( 'Fabric Items'[User access count] )",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Workspace title (Drillthrough)",
                                            "expression": "IF (\n    ISBLANK ( SELECTEDVALUE ( Workspace[Workspace name] ) ),\n    \"(Multiple workspaces)\",\n    SELECTEDVALUE ( Workspace[Workspace name] )\n)",
                                            "isHidden": true
                                        },
                                        {
                                            "name": "Group access count alt text",
                                            "expression": "\"Card visual shows the group access count\" & [Group access count]",
                                            "isHidden": true
                                        },
                                        {
                                            "name": "Report last refreshed alt text",
                                            "expression": "\"Report last refreshed\" & FORMAT(MAX('Refresh Stats'[Last refresh datetime]), \"DD-MMM-YYYY HH:MM:SS\") & \" UTC\"",
                                            "isHidden": true
                                        },
                                        {
                                            "name": "Total capacities alt text",
                                            "expression": "\"Card visual shows Total capacities\" & [Total capacities]",
                                            "isHidden": true
                                        },
                                        {
                                            "name": "Total domains alt text",
                                            "expression": "\"Card visual shows Total domains\" & [Total domains]",
                                            "isHidden": true
                                        },
                                        {
                                            "name": "Total items alt text",
                                            "expression": "\"Card visual shows Total items\" & [Total items]",
                                            "isHidden": true
                                        },
                                        {
                                            "name": "Total workspaces alt text",
                                            "expression": "\"Card visual shows Total workspaces\" & [Total workspaces]",
                                            "isHidden": true
                                        },
                                        {
                                            "name": "Unendorsed items alt text",
                                            "expression": "\"Textbox shows unendorsed items\" & [Unendorsed items] ",
                                            "isHidden": true
                                        },
                                        {
                                            "name": "Unlabeled items alt text",
                                            "expression": "\"Textbox shows unlabeled items\" & [Unlabeled items] ",
                                            "isHidden": true
                                        },
                                        {
                                            "name": "User access count alt text",
                                            "expression": "\"Card visual shows the user access count\" & [User access count]",
                                            "isHidden": true
                                        },
                                        {
                                            "name": "Workspace name alt text",
                                            "expression": "\"Card visual shows workspace name\" & [Workspace title (Drillthrough)]",
                                            "isHidden": true
                                        }
                                    ],
                                    "source": [
                                        {
                                            "expression": "{0}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Workspace",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Workspace name",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Workspace type",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Workspace Id",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "WorkspaceKeyIndex",
                                            "dataType": "Int64",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Domain Id",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "CapacityKeyIndex",
                                            "dataType": "Int64",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Url",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n    Source = Table.FromValue(AdminInsights.GetAzureBlobContents(\"admin-metadata\", \"Workspace\", \"v2\", RangeStart, RangeEnd, #\"BlobUrl\")),\n    #\"Removed Duplicates\" = Table.Distinct(Source, {\"WorkspaceKeyIndex\"}),\n    #\"Removed Columns\" = Table.SelectColumns(#\"Removed Duplicates\", {\"DisplayName\", \"Type\", \"ArtifactId\", \"WorkspaceKeyIndex\", \"CapacityObjectId\", \"DataDomainObjectId\", \"Url\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\", {{\"DisplayName\", \"Workspace name\"}, {\"ArtifactId\", \"Workspace Id\"}, {\"Type\", \"Workspace type\"}, {\"DataDomainObjectId\", \"Domain Id\"}}),\n    #\"Replaced Values (Type)\" = Table.ReplaceValue(#\"Renamed Columns\", each [Workspace type], each if [Workspace type] = \"0\" then \"Personal\" else if [Workspace type] = \"1\" then \"Regular\" else if [Workspace type] = \"2\" then \"Admin Monitoring\" else if [Workspace type] = \"NA\" then \"NA\" else null, Replacer.ReplaceValue, {\"Workspace type\"}),\n    #\"Lowercased CapacityObjectId\" = Table.TransformColumns(#\"Replaced Values (Type)\", {{\"CapacityObjectId\", Text.Lower, type text}}),    \n    #\"Source (Capacity)\" = #\"Capacities function\"(RangeStart, RangeEnd, BlobUrl),\n    #\"Removed Columns (Capacity)\" = Table.RemoveColumns(#\"Source (Capacity)\", {\"Capacity name\", \"Capacity SKU\"}),    \n    #\"Merged Query\" = Table.Join(#\"Lowercased CapacityObjectId\", {\"CapacityObjectId\"}, #\"Removed Columns (Capacity)\", {\"Capacity Id\"}, JoinKind.LeftOuter),\n    #\"Removed Duplicate Columns (Capacity)\" = Table.SelectColumns(#\"Merged Query\", {\"Workspace name\", \"Workspace type\", \"Workspace Id\", \"WorkspaceKeyIndex\", \"Domain Id\", \"Url\", \"CapacityKeyIndex\"}),\n    #\"Changed Data Types\" = Table.TransformColumnTypes(#\"Removed Duplicate Columns (Capacity)\",{{\"Workspace name\", type text}, {\"Workspace Id\", type text}, {\"WorkspaceKeyIndex\", Int64.Type}, {\"Workspace type\", type text}, {\"Domain Id\", type text}, {\"Url\", type text}}),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Changed Data Types\", each [WorkspaceKeyIndex] <> 0)\nin\n    #\"Filtered Rows\""
                                        }
                                    ]
                                },
                                {
                                    "name": "User",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Email address",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "User (UPN)",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "PUID",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "User type",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "User Id",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "UserKeyIndex",
                                            "dataType": "Int64",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n\u00a0\u00a0\u00a0 Source = Table.FromValue(AdminInsights.GetAzureBlobContents(\"admin-metadata\", \"User\", \"v2\", RangeStart, RangeEnd, #\"BlobUrl\")),\n    #\"Removed Duplicates\" = Table.Distinct(Source, {\"UserKeyIndex\"}),\n    #\"Filtered Blank and Null Keys\" = Table.SelectRows(#\"Removed Duplicates\", each [UserKeyIndex] <> null and [UserKeyIndex] <> \"\"),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Filtered Blank and Null Keys\", {{\"EmailAddress\", \"Email address\"}, {\"UserPrincipalName\", \"User (UPN)\"}, {\"Type\", \"User type\"}, {\"ArtifactId\", \"User Id\"}}),\n    #\"Removed Columns\" = Table.SelectColumns(#\"Renamed Columns\", {\"Email address\", \"User (UPN)\", \"PUID\", \"User type\", \"User Id\", \"UserKeyIndex\"}),\n    #\"Changed Data Types\" = Table.TransformColumnTypes(#\"Removed Columns\", {{\"Email address\", type text}, {\"UserKeyIndex\", Int64.Type}, {\"User (UPN)\", type text}, {\"PUID\", type text}, {\"User type\", type text}, {\"User Id\", type text}}),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Changed Data Types\", each ([UserKeyIndex] <> 0))\nin\n    #\"Filtered Rows\""
                                        }
                                    ]
                                },
                                {
                                    "name": "Fabric Items",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Item name",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Item Id",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Item type",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Item sub type",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Created by user Id",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Modified by user Id",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "IndexKey",
                                            "dataType": "Int64",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "User access count",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Group access count",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Workspace Id",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Endorsement",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Is shared with whole org",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Last DLP scan datetime",
                                            "dataType": "DateTime",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "DLP policy violation",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Sensitivity label",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "MIP label Id",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Is deleted",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Modified datetime",
                                            "dataType": "DateTime",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Url",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n    Source = Table.FromValue(AdminInsights.GetAzureBlobContents(\"admin-metadata\", \"Unified\", \"v2\", RangeStart, RangeEnd, #\"BlobUrl\")),\n    #\"Removed Duplicates\" = Table.Distinct(#\"Source\", {\"IndexKey\"}),\n    #\"Removed Columns\" = Table.SelectColumns(#\"Removed Duplicates\", {\"DisplayName\", \"ArtifactId\", \"Type\", \"SubType\", \"CreatedByUserObjectId\", \"ModifiedByUserObjectId\", \"ModifiedDateTime\", \"IndexKey\", \"DirectAccessCount\", \"GroupAccessCount\", \"WorkspaceObjectId\", \"MIPLabelId\", \"Endorsement\", \"LastUpdateTimestamp\", \"IsSharedWithWholeOrg\", \"LastDLPEvaluationDateTime\", \"IsDLPPolicyMatched\", \"Url\"}),\n    #\"Merged Queries\" = Table.Join(#\"Removed Columns\", {\"MIPLabelId\"}, #\"MIP Labels\", {\"MIP label Id\"}, JoinKind.LeftOuter),\n    #\"Removed Columns (MIP)\" = Table.SelectColumns(#\"Merged Queries\", {\"DisplayName\", \"ArtifactId\", \"Type\", \"SubType\", \"CreatedByUserObjectId\", \"ModifiedByUserObjectId\", \"ModifiedDateTime\", \"IndexKey\", \"DirectAccessCount\", \"GroupAccessCount\", \"WorkspaceObjectId\", \"Endorsement\", \"LastUpdateTimestamp\", \"IsSharedWithWholeOrg\", \"LastDLPEvaluationDateTime\", \"IsDLPPolicyMatched\", \"Url\", \"Sensitivity label\", \"MIP label Id\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns (MIP)\", {{\"ArtifactId\", \"Item Id\"}, {\"DisplayName\", \"Item name\"}, {\"CreatedByUserObjectId\", \"Created by user Id\"}, {\"ModifiedByUserObjectId\", \"Modified by user Id\"}, {\"WorkspaceObjectId\", \"Workspace Id\"}, {\"DirectAccessCount\", \"User access count\"}, {\"GroupAccessCount\", \"Group access count\"}, {\"Type\", \"Item type\"}, {\"SubType\", \"Item sub type\"}, {\"IsSharedWithWholeOrg\", \"Is shared with whole org\"}, {\"LastDLPEvaluationDateTime\", \"Last DLP scan datetime\"}, {\"IsDLPPolicyMatched\", \"DLP policy violation\"}, {\"ModifiedDateTime\", \"Modified datetime\"}}),\n    #\"Replaced Values (Dataset)\" = Table.ReplaceValue(#\"Renamed Columns\", \"Dataset\", \"SemanticModel\", Replacer.ReplaceText, {\"Item type\"}),\n    #\"Replaced Values (LUTS)\" = Table.ReplaceValue(#\"Replaced Values (Dataset)\", each [LastUpdateTimestamp], each (#datetime(1,1,1,0,0,0) + #duration(0,0,0, [LastUpdateTimestamp]/1000)), Replacer.ReplaceValue, {\"LastUpdateTimestamp\"}),\n    #\"Replaced Values (SubType)\" = Table.ReplaceValue(#\"Replaced Values (LUTS)\", null, \"Other\", Replacer.ReplaceValue, {\"Item sub type\"}),\n    #\"Calculated MaxLastUpdated\" = List.Max(#\"Replaced Values (SubType)\"[LastUpdateTimestamp]),\n    #\"Added DaysSinceLastUpdated\" = Table.AddColumn(#\"Replaced Values (SubType)\", \"DaysSinceLastUpdated\", each Duration.Days(#\"Calculated MaxLastUpdated\" - [LastUpdateTimestamp])),\n    #\"Added IsDeleted\" = Table.AddColumn(#\"Added DaysSinceLastUpdated\", \"Is deleted\", each if [DaysSinceLastUpdated] = null then \"NA\" else if [DaysSinceLastUpdated] >= 1 then \"True\" else \"False\"),\n    #\"Removed Columns (LUTS)\" = Table.RemoveColumns(#\"Added IsDeleted\", {\"LastUpdateTimestamp\", \"DaysSinceLastUpdated\"}),\n    #\"Replaced Values (DLP)\" = Table.ReplaceValue(#\"Removed Columns (LUTS)\", each [DLP policy violation], each if [DLP policy violation] = null then \"NA\" else if [DLP policy violation] = true then \"True\" else if [DLP policy violation] = false then \"False\" else [DLP policy violation], Replacer.ReplaceValue, {\"DLP policy violation\"}),\n    #\"Replaced Values (Is shared)\" = Table.ReplaceValue(#\"Replaced Values (DLP)\", each [Is shared with whole org], each if [Is shared with whole org] = null then \"NA\" else if [Is shared with whole org] = true then \"True\" else if [Is shared with whole org] = false then \"False\" else [Is shared with whole org], Replacer.ReplaceValue, {\"Is shared with whole org\"}),\n    #\"Changed Data Types\" = Table.TransformColumnTypes(#\"Replaced Values (Is shared)\", {{\"Item name\", type text}, {\"Created by user Id\", type text}, {\"Modified by user Id\", type text}, {\"Item Id\", type text}, {\"Endorsement\", type text}, {\"Item type\", type text}, {\"User access count\", Int64.Type}, {\"Group access count\", Int64.Type}, {\"Item sub type\", type text}, {\"Workspace Id\", type text}, {\"IndexKey\", Int64.Type}, {\"Is shared with whole org\", type text}, {\"Last DLP scan datetime\", type datetime}, {\"DLP policy violation\", type text}, {\"Is deleted\", type text}, {\"Modified datetime\", type datetime}})\nin\n    #\"Changed Data Types\""
                                        }
                                    ]
                                },
                                {
                                    "name": "Capacity",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Capacity name",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Capacity SKU",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Capacity Id",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "CapacityKeyIndex",
                                            "dataType": "Int64",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n     Source = #\"Capacities function\"(RangeStart, RangeEnd, BlobUrl),\n    #\"Removed Duplicates\" = Table.Distinct(Source, {\"CapacityKeyIndex\"}),\n    #\"Replaced Values (Capacity Id)\" = Table.ReplaceValue(#\"Removed Duplicates\", each [Capacity Id], each if [Capacity SKU] = \"PP3\" then \"-2\" else if [Capacity SKU] = \"SharedOnPremium\" then \"-3\" else [Capacity Id], Replacer.ReplaceText, {\"Capacity Id\"}),\n    #\"Replaced Values (Capacity name)\" = Table.ReplaceValue(#\"Replaced Values (Capacity Id)\", each [Capacity name], each if [Capacity SKU] = \"PP3\" then \"Reserved Capacity for Premium Per User Workspaces\" else if [Capacity SKU] = \"SharedOnPremium\" then \"Reserved Capacity for Pro Workspaces\" else [Capacity name], Replacer.ReplaceText, {\"Capacity name\"}),\n    #\"Replaced Values (Capacity SKU)\" = Table.ReplaceValue(#\"Replaced Values (Capacity name)\", each [Capacity SKU], each if [Capacity SKU] = \"PP3\" then \"PPU\" else if [Capacity SKU] = \"SharedOnPremium\" then \"Pro\" else [Capacity SKU], Replacer.ReplaceText, {\"Capacity SKU\"}),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Replaced Values (Capacity SKU)\", each [CapacityKeyIndex] <> 0)\nin\n    #\"Filtered Rows\""
                                        }
                                    ]
                                },
                                {
                                    "name": "Domain",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Domain name",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Domain Id",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Parent domain Id",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "DomainKeyIndex",
                                            "dataType": "Int64",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n    Source = Table.FromValue(AdminInsights.GetAzureBlobContents(\"admin-metadata\", \"DataDomain\", \"v2\", RangeStart, RangeEnd, #\"BlobUrl\")),\n    #\"Removed Columns\" = Table.SelectColumns(Source, {\"DisplayName\", \"ArtifactId\", \"ParentDataDomainObjectId\", \"DataDomainKeyIndex\"}),\n    #\"Changed Data Types\" = Table.TransformColumnTypes(#\"Removed Columns\", {{\"DisplayName\", type text}, {\"ArtifactId\", type text}, {\"ParentDataDomainObjectId\", type text}, {\"DataDomainKeyIndex\", Int64.Type}}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Changed Data Types\", {{\"DisplayName\", \"Domain name\"}, {\"ArtifactId\", \"Domain Id\"}, {\"ParentDataDomainObjectId\", \"Parent domain Id\"}, {\"DataDomainKeyIndex\", \"DomainKeyIndex\"}}),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Renamed Columns\", each [DomainKeyIndex] <> 0)    \nin\n    #\"Filtered Rows\""
                                        }
                                    ]
                                },
                                {
                                    "name": "Analyze by",
                                    "isHidden": true,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Analyze by",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "CalculatedTableColumn"
                                        },
                                        {
                                            "name": "Analyze by Fields",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "CalculatedTableColumn"
                                        },
                                        {
                                            "name": "Analyze by Order",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "CalculatedTableColumn"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "{\n    (\"Total items\", NAMEOF('_Measures'[Total items]), 0),\n    (\"Total access count\", NAMEOF('_Measures'[Total access count]), 1)\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Table Fields",
                                    "isHidden": true,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Table Fields",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "CalculatedTableColumn"
                                        },
                                        {
                                            "name": "Table Fields Fields",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "CalculatedTableColumn"
                                        },
                                        {
                                            "name": "Table Fields Order",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "CalculatedTableColumn"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "{\n    (\"Domain name\", NAMEOF('Domain'[Domain name]), 0),\n    (\"Capacity name\", NAMEOF('Capacity'[Capacity name]), 1),\n    (\"Workspace name\", NAMEOF('Workspace'[Workspace name]), 2),\n    (\"Workspace Url\", NAMEOF('Workspace'[Url]), 3),\n    (\"Item type\", NAMEOF('Fabric Items'[Item type]), 4),\n    (\"Item name\", NAMEOF('Fabric Items'[Item name]), 5),\n    (\"Item Id\", NAMEOF('Fabric Items'[Item Id]), 6),\n    (\"Item Url\", NAMEOF('Fabric Items'[Url]), 7),\n    (\"Sensitivity label\", NAMEOF('Fabric Items'[Sensitivity label]), 8),\n    (\"Is deleted\", NAMEOF('Fabric Items'[Is deleted]), 9),\n    (\"Is shared with whole org\", NAMEOF('Fabric Items'[Is shared with whole org]), 10),\n    (\"Last modified by\", NAMEOF('User'[User (UPN)]), 11),\n    (\"User access count\", NAMEOF('_Measures'[User access count]), 12),\n    (\"Group access count\", NAMEOF('_Measures'[Group access count]), 13),\n    (\"Total access count\", NAMEOF('_Measures'[Total access count]), 14),\n    (\"Total items\", NAMEOF('_Measures'[Total items]), 15)\n}"
                                        }
                                    ]
                                }
                            ],
                            "expressions": [
                                {
                                    "name": "RangeStart",
                                    "expression": "#datetime(2000, 1, 1, 0, 0, 0) meta [IsParameterQuery=true, Type=\"DateTime\", IsParameterQueryRequired=true]"
                                },
                                {
                                    "name": "RangeEnd",
                                    "expression": "#datetime(2026, 1, 1, 0, 0, 0) meta [IsParameterQuery=true, Type=\"DateTime\", IsParameterQueryRequired=true]"
                                },
                                {
                                    "name": "BlobUrl",
                                    "expression": "\" \" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = \"Text\"]"
                                },
                                {
                                    "name": "Capacities function",
                                    "expression": "let\n    Source = (RangeStart as datetime, RangeEnd as datetime, BlobUrl as text) => let\n    Source = Table.FromValue(AdminInsights.GetAzureBlobContents(\"admin-metadata\",\"Capacity\", \"v2\", RangeStart, RangeEnd, BlobUrl)),\n    #\"Changed Data Types\" = Table.TransformColumnTypes(Source, {{\"DisplayName\", type text}, {\"ArtifactId\", type text}, {\"CapacityKeyIndex\", Int64.Type}, {\"ModifiedDateTime\", type datetime}, {\"Type\", type text}, {\"CreatedDateTime\", type datetime}}),\n    #\"Removed Columns\" = Table.SelectColumns(#\"Changed Data Types\", {\"DisplayName\", \"Type\", \"ArtifactId\", \"CapacityKeyIndex\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\", {{\"DisplayName\", \"Capacity name\"}, {\"ArtifactId\", \"Capacity Id\"}, {\"Type\", \"Capacity SKU\"}})\nin\n    #\"Renamed Columns\"\nin\n    Source"
                                },
                                {
                                    "name": "MIP Labels",
                                    "expression": "let\n    Source = Table.FromValue(AdminInsights.GetAzureBlobContents(\"admin-metadata\", \"MipLabel\", \"v2\", RangeStart, RangeEnd, #\"BlobUrl\")),\n    #\"Removed Columns\" = Table.SelectColumns(Source, {\"DisplayName\", \"MipLabelId\", \"IsMipLabelDisabled\", \"MipLabelKeyIndex\"}),\n    #\"Changed Data Types\" = Table.TransformColumnTypes(#\"Removed Columns\", {{\"MipLabelKeyIndex\", Int64.Type}, {\"DisplayName\", type text}, {\"MipLabelId\", type text}, {\"IsMipLabelDisabled\", type text}}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Changed Data Types\", {{\"DisplayName\", \"Sensitivity label\"}, {\"MipLabelId\", \"MIP label Id\"}, {\"IsMipLabelDisabled\", \"Is MIP label disabled\"}})\nin\n    #\"Renamed Columns\""
                                }
                            ],
                            "configuredBy": "AdminInsights-08571310-c17a-4ecc-920c-71dd345df36e",
                            "configuredById": "08571310-c17a-4ecc-920c-71dd345df36e",
                            "isEffectiveIdentityRequired": false,
                            "isEffectiveIdentityRolesRequired": false,
                            "refreshSchedule": {
                                "days": [
                                    "Sunday",
                                    "Monday",
                                    "Tuesday",
                                    "Wednesday",
                                    "Thursday",
                                    "Friday",
                                    "Saturday"
                                ],
                                "times": [
                                    "11:35"
                                ],
                                "enabled": true,
                                "localTimeZoneId": "UTC",
                                "notifyOption": "NoNotification"
                            },
                            "targetStorageMode": "Abf",
                            "createdDate": "2025-10-06T11:30:15.137",
                            "contentProviderType": "PbixInImportMode",
                            "datasourceUsages": [
                                {
                                    "datasourceInstanceId": "3434d473-4c7d-4f45-b83c-ee5e77404060"
                                }
                            ],
                            "tags": []
                        }
                    ],
                    "dataflows": [],
                    "datamarts": []
                }
            ],
            "datasourceInstances": [
                {
                    "datasourceType": "Extension",
                    "connectionDetails": {
                        "extensionDataSourceKind": "AdminInsights",
                        "extensionDataSourcePath": "AdminInsights"
                    },
                    "datasourceId": "3434d473-4c7d-4f45-b83c-ee5e77404060",
                    "gatewayId": "cee824f1-b82b-4f26-8568-a62942a2f251"
                }
            ]
        }
    },
    {
        "workspaceId": "32bcf9c2-9d7d-4857-9188-ef29efac3a3b",
        "workspaceName": "Test Workspace",
        "scanResult": {
            "workspaces": [
                {
                    "id": "32bcf9c2-9d7d-4857-9188-ef29efac3a3b",
                    "name": "Test Workspace",
                    "description": "Test",
                    "type": "Workspace",
                    "state": "Active",
                    "isOnDedicatedCapacity": true,
                    "capacityId": "5617B66C-C9DB-4C90-A8FD-A556F83FB3FD",
                    "defaultDatasetStorageFormat": "Small",
                    "reports": [
                        {
                            "reportType": "PowerBIReport",
                            "id": "eb221b13-e89e-4ff9-a7d1-9873ea0c410d",
                            "name": "New Waziri Dashboard Report",
                            "datasetId": "b65c4f2f-2716-4744-8640-02768f9bb745",
                            "createdDateTime": "2025-08-29T08:28:01.387",
                            "modifiedDateTime": "2025-08-29T08:28:01.387",
                            "modifiedBy": "victorsam@vsamautomation.com",
                            "createdBy": "victorsam@vsamautomation.com",
                            "modifiedById": "7afce4a6-37a7-4db8-962e-9b8d4e2bc885",
                            "createdById": "7afce4a6-37a7-4db8-962e-9b8d4e2bc885",
                            "tags": []
                        },
                        {
                            "reportType": "PowerBIReport",
                            "id": "a9b83304-aed6-4124-aa46-90c8cdc71bdd",
                            "name": "Report Usage Metrics Report",
                            "datasetId": "cc7bc30b-a5bb-4a17-bfa9-9675940f2468",
                            "createdDateTime": "2025-10-06T11:33:06.82",
                            "modifiedDateTime": "2025-10-06T11:33:06.82",
                            "modifiedBy": "victorsam@vsamautomation.com",
                            "createdBy": "victorsam@vsamautomation.com",
                            "modifiedById": "7afce4a6-37a7-4db8-962e-9b8d4e2bc885",
                            "createdById": "7afce4a6-37a7-4db8-962e-9b8d4e2bc885",
                            "tags": []
                        }
                    ],
                    "dashboards": [],
                    "datasets": [
                        {
                            "id": "b65c4f2f-2716-4744-8640-02768f9bb745",
                            "name": "New Waziri Dashboard Report",
                            "tables": [
                                {
                                    "name": "Calendar",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Date",
                                            "dataType": "DateTime",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Year",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "CurrYearOffset",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "YearCompleted",
                                            "dataType": "Boolean",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Quarter Number",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Quarter",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Start of Quarter",
                                            "dataType": "DateTime",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "End of Quarter",
                                            "dataType": "DateTime",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Quarter & Year",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "QuarternYear",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "CurrQuarterOffset",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "QuarterCompleted",
                                            "dataType": "Boolean",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Month",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Start of Month",
                                            "dataType": "DateTime",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "End of Month",
                                            "dataType": "DateTime",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Month & Year",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "MonthnYear",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "CurrMonthOffset",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "MonthCompleted",
                                            "dataType": "Boolean",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Month Name",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Month Short",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Month Initial",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Day of Month",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Week Number",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Start of Week",
                                            "dataType": "DateTime",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "End of Week",
                                            "dataType": "DateTime",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Week & Year",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "WeeknYear",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "CurrWeekOffset",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "WeekCompleted",
                                            "dataType": "Boolean",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Day of Week Number",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Day of Week Name",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Day of Week Initial",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "DateInt",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "CurrDayOffset",
                                            "dataType": "Double",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "IsAfterToday",
                                            "dataType": "Boolean",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "IsWeekDay",
                                            "dataType": "Boolean",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "IsHoliday",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "IsBusinessDay",
                                            "dataType": "Boolean",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Day Type",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "ISO Year",
                                            "dataType": "Double",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "ISO CurrYearOffset",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "ISO Quarter",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "ISO Quarter & Year",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "ISO QuarternYear",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "ISO CurrQuarterOffset",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "IsCurrentFY",
                                            "dataType": "Boolean",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "IsPYTD",
                                            "dataType": "Boolean",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "IsPFYTD",
                                            "dataType": "Boolean",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "DoW",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "expression": "CONCATENATE(LEFT('Calendar'[Day of Week Name],3),\" \"&'Calendar'[Day Ordinals])",
                                            "columnType": "Calculated"
                                        },
                                        {
                                            "name": "Day Ordinals",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "expression": "\nVar Last2Digits = RIGHT('Calendar'[Day of Month],2)\nVar LastDigit = RIGHT('Calendar'[Day of Month],1)\nVar Ordination =\n    SWITCH(TRUE(),\n        Last2Digits IN {\"11\",\"12\",\"13\"},\"th\",\n        LastDigit = \"1\" , \"st\",\n        LastDigit  = \"2\",\"nd\",\n        LastDigit = \"3\", \"rd\",\n        \"th\"\n    )\nRETURN\nCONCATENATE('Calendar'[Day of Month],Ordination)",
                                            "columnType": "Calculated"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n    Source = Query1(#date(2020, 1, 1), #date(2026, 12, 31), null, null, 1, null)\nin\n    Source"
                                        }
                                    ]
                                },
                                {
                                    "name": "_Totals",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Value",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "CalculatedTableColumn"
                                        }
                                    ],
                                    "measures": [
                                        {
                                            "name": "Total Sales",
                                            "expression": "\nSUM(Sales[Price])",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Cash Sales",
                                            "expression": "\nCALCULATE([Total Sales],\n    FILTER(Sales,\n        Sales[Customer]=\"Cash Customer\"\n    )\n)",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Credit Sales",
                                            "expression": "\nCALCULATE([Total Sales],\n    FILTER(Sales,\n        Sales[Customer]<>\"Cash Customer\"\n    )\n)",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Total Cost",
                                            "expression": "Sum(Sales[Cost])",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Total Profit",
                                            "expression": "Sum(Sales[Profit])",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Total Sales Title",
                                            "expression": "\" Total Sales\"",
                                            "isHidden": false
                                        }
                                    ],
                                    "source": [
                                        {
                                            "expression": "{0}"
                                        }
                                    ]
                                },
                                {
                                    "name": "01_Current Week",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Value",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "CalculatedTableColumn"
                                        }
                                    ],
                                    "measures": [
                                        {
                                            "name": "This Week Title",
                                            "expression": "\"This Week\"",
                                            "isHidden": false
                                        }
                                    ],
                                    "source": [
                                        {
                                            "expression": "{0}"
                                        }
                                    ]
                                },
                                {
                                    "name": "02_Previous Week",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Value",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "CalculatedTableColumn"
                                        }
                                    ],
                                    "measures": [
                                        {
                                            "name": "Prev Week Title",
                                            "expression": "\"Last Week\"",
                                            "isHidden": false
                                        }
                                    ],
                                    "source": [
                                        {
                                            "expression": "{0}"
                                        }
                                    ]
                                },
                                {
                                    "name": "03_Current Month",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Value",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "CalculatedTableColumn"
                                        }
                                    ],
                                    "measures": [
                                        {
                                            "name": "This Month Sales",
                                            "expression": "\nCALCULATE(_Totals[Total Sales],\n    FILTER('Calendar','Calendar'[CurrMonthOffset]=0)\n)",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "This Month Title",
                                            "expression": "\"This Month\"",
                                            "isHidden": false
                                        }
                                    ],
                                    "source": [
                                        {
                                            "expression": "{0}"
                                        }
                                    ]
                                },
                                {
                                    "name": "04_Previous Month",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Value",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "CalculatedTableColumn"
                                        }
                                    ],
                                    "measures": [
                                        {
                                            "name": "Curr Month Prev Year Sales",
                                            "expression": "\nCALCULATE(_Totals[Total Sales],\n FILTER('Calendar','Calendar'[CurrMonthOffset]=-12)\n)",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Prev Month Title",
                                            "expression": "\"Last Month\"",
                                            "isHidden": false
                                        }
                                    ],
                                    "source": [
                                        {
                                            "expression": "{0}"
                                        }
                                    ]
                                },
                                {
                                    "name": "05_Current Year",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Value",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "CalculatedTableColumn"
                                        }
                                    ],
                                    "measures": [
                                        {
                                            "name": "This Year Title",
                                            "expression": "\"This Year\"",
                                            "isHidden": false
                                        }
                                    ],
                                    "source": [
                                        {
                                            "expression": "{0}"
                                        }
                                    ]
                                },
                                {
                                    "name": "06_Previous Year",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Value",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "CalculatedTableColumn"
                                        }
                                    ],
                                    "measures": [
                                        {
                                            "name": "Prev Year Title",
                                            "expression": "\"Last Year\"",
                                            "isHidden": false
                                        }
                                    ],
                                    "source": [
                                        {
                                            "expression": "{0}"
                                        }
                                    ]
                                },
                                {
                                    "name": "_Subs",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Value",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "CalculatedTableColumn"
                                        }
                                    ],
                                    "measures": [
                                        {
                                            "name": "Selected Date",
                                            "expression": "SELECTEDVALUE('Calendar'[Date])",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Selected Month",
                                            "expression": "SELECTEDVALUE('Calendar'[Month Short])",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Selected DoW",
                                            "expression": "SELECTEDVALUE('Calendar'[DoW])",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Selected Year",
                                            "expression": "SELECTEDVALUE('Calendar'[Year])",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Date Combo",
                                            "expression": "[Selected DoW]&\"-\"&[Selected Month]&\"-\"&[Selected Year]",
                                            "isHidden": false
                                        }
                                    ],
                                    "source": [
                                        {
                                            "expression": "{0}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Orders",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "date",
                                            "dataType": "DateTime",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "customer",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "amount",
                                            "dataType": "Double",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "order_id",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "balance",
                                            "dataType": "Double",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "status",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "memo",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "user",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n    Source = MySQL.Database(\"vsamautomation.com\", \"vsamaut1_waziri\", [ReturnSingleDatabase=true, CreateNavigationProperties=false]),\n    vsamaut1_waziri_orders = Source{[Schema=\"vsamaut1_waziri\",Item=\"orders\"]}[Data]\nin\n    vsamaut1_waziri_orders"
                                        }
                                    ]
                                },
                                {
                                    "name": "Sales",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "date",
                                            "dataType": "DateTime",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "order_id",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "customer",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "item",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "part_no",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "make",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "position",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "qty",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "invoice_no",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "price",
                                            "dataType": "Double",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "cost",
                                            "dataType": "Double",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "profit",
                                            "dataType": "Double",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "profit%",
                                            "dataType": "Double",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "vehicle_make",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "model",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "engine_type",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "vat",
                                            "dataType": "Double",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "memo",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "user",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "id",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n    Source = MySQL.Database(\"vsamautomation.com\", \"vsamaut1_waziri\", [ReturnSingleDatabase=true]),\n    vsamaut1_waziri_items_sales = Source{[Schema=\"vsamaut1_waziri\",Item=\"items_sales\"]}[Data]\nin\n    vsamaut1_waziri_items_sales"
                                        }
                                    ]
                                },
                                {
                                    "name": "waz_stock_movement",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "id",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "item",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "part_no",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "prev_bal",
                                            "dataType": "Double",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "qty",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "movement_type",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "movement_id",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "user",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "date",
                                            "dataType": "DateTime",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n    Source = MySQL.Database(\"vsamautomation.com\", \"vsamaut1_waziri\", [ReturnSingleDatabase=true]),\n    vsamaut1_waziri_stock_movement = Source{[Schema=\"vsamaut1_waziri\",Item=\"stock_movement\"]}[Data]\nin\n    vsamaut1_waziri_stock_movement"
                                        }
                                    ]
                                },
                                {
                                    "name": "CustomersDB",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "id",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "customer name",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "mobile",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "address",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "balance",
                                            "dataType": "Double",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "status",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n    Source = MySQL.Database(\"vsamautomation.com\", \"vsamaut1_waziri\", [ReturnSingleDatabase=true]),\n    vsamaut1_waziri_customers = Source{[Schema=\"vsamaut1_waziri\",Item=\"customers\"]}[Data]\nin\n    vsamaut1_waziri_customers"
                                        }
                                    ]
                                },
                                {
                                    "name": "Payments",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "date",
                                            "dataType": "DateTime",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "customer",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "amount",
                                            "dataType": "Double",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "memo",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "mode_of_payment",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "status",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "balance",
                                            "dataType": "Double",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "order_id",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "id",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "user",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n    Source = MySQL.Database(\"vsamautomation.com\", \"vsamaut1_waziri\", [ReturnSingleDatabase=true]),\n    vsamaut1_waziri_cust_payments = Source{[Schema=\"vsamaut1_waziri\",Item=\"cust_payments\"]}[Data]\nin\n    vsamaut1_waziri_cust_payments"
                                        }
                                    ]
                                },
                                {
                                    "name": "ItemsDB",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "part number",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "item name",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "vehicle make",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "vehicle model",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "engine type",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "stock balance",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "unit cost",
                                            "dataType": "Double",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "stock value",
                                            "dataType": "Double",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "product image",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "image url",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "category",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n    Source = MySQL.Database(\"vsamautomation.com\", \"vsamaut1_waziri\", [ReturnSingleDatabase=true]),\n    vsamaut1_waziri_items = Source{[Schema=\"vsamaut1_waziri\",Item=\"items\"]}[Data]\nin\n    vsamaut1_waziri_items"
                                        }
                                    ]
                                },
                                {
                                    "name": "hpeqhdmy_salesapp vehicles",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Vehicle_Make",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "id",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n    Source = MySQL.Database(\"vsamautomation.com\", \"vsamaut1_waziri\", [ReturnSingleDatabase=true]),\n    vsamaut1_waziri_vehicles = Source{[Schema=\"vsamaut1_waziri\",Item=\"vehicles\"]}[Data]\nin\n    vsamaut1_waziri_vehicles"
                                        }
                                    ]
                                },
                                {
                                    "name": "waz_item_make",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "id",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "MIK",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n    Source = MySQL.Database(\"vsamautomation.com\", \"vsamaut1_waziri\", [ReturnSingleDatabase=true]),\n    vsamaut1_waziri_item_make = Source{[Schema=\"vsamaut1_waziri\",Item=\"item_make\"]}[Data]\nin\n    vsamaut1_waziri_item_make"
                                        }
                                    ]
                                }
                            ],
                            "expressions": [
                                {
                                    "name": "Query1",
                                    "expression": "let\n    Source = let fnDateTable = ( StartDate as date, EndDate as date, optional FYStartMonthNum as number, optional Holidays as list, optional WDStartNum as number, optional AddRelativeNetWorkdays as logical ) as table =>\n  let\n      FYStartMonth = List.Select( {1..12}, each _ = FYStartMonthNum ){0}? ?? 1,\n      WDStart = List.Select( {0..1}, each _ = WDStartNum ){0}? ?? 0,\n      CurrentDate = Date.From(DateTime.LocalNow()), //#date(2023,12,31),\n      DayCount = Duration.Days( Duration.From( EndDate - StartDate)) +1,\n      Source = List.Dates( StartDate, DayCount, #duration(1,0,0,0)),\n      AddToday = if EndDate < CurrentDate then List.Combine( {Source, {CurrentDate}}) else Source,\n      ToTable = Table.FromList(AddToday, Splitter.SplitByNothing(), type table [Date = Date.Type] ),\n      InsertYear = Table.AddColumn(ToTable, \"Year\", each Date.Year([Date]), type number),\n      InsertYearOffset = Table.AddColumn(InsertYear, \"CurrYearOffset\", each Date.Year([Date]) - Date.Year( Date.From(CurrentDate)), type number),\n      InsertCompletedYear = Table.AddColumn(InsertYearOffset, \"YearCompleted\", each Date.EndOfYear([Date]) < Date.From( Date.EndOfYear(CurrentDate)), type logical),\n\n      InsertQuarterNum = Table.AddColumn(InsertCompletedYear, \"Quarter Number\", each Date.QuarterOfYear([Date]), type number),\n      InsertQuarter = Table.AddColumn(InsertQuarterNum, \"Quarter\", each \"Q\" & Number.ToText([Quarter Number]), type text),\n      InsertStartOfQuarter = Table.AddColumn(InsertQuarter, \"Start of Quarter\", each Date.StartOfQuarter([Date]), type date),\n      InsertEndOfQuarter = Table.AddColumn(InsertStartOfQuarter, \"End of Quarter\", each Date.EndOfQuarter([Date]), type date),\n      InsertCalendarQtr = Table.AddColumn(InsertEndOfQuarter, \"Quarter & Year\", each \"Q\" & Number.ToText( Date.QuarterOfYear([Date])) & Date.ToText([Date], [Format = \" yyyy\"]), type text),\n      InsertQuarternYear = Table.AddColumn(InsertCalendarQtr, \"QuarternYear\", each [Year] * 10 + [Quarter Number], type number),\n      InsertQuarterOffset = Table.AddColumn(InsertQuarternYear, \"CurrQuarterOffset\", each ((4 * Date.Year([Date])) +  Date.QuarterOfYear([Date])) - ((4 * Date.Year(Date.From(CurrentDate))) +  Date.QuarterOfYear(Date.From(CurrentDate))), type number),\n      InsertCompletedQuarter = Table.AddColumn(InsertQuarterOffset, \"QuarterCompleted\", each Date.EndOfQuarter([Date]) < Date.From(Date.EndOfQuarter(CurrentDate)), type logical),\n\n      InsertMonth = Table.AddColumn(InsertCompletedQuarter, \"Month\", each Date.Month([Date]), type number),\n      InsertStartOfMonth = Table.AddColumn(InsertMonth, \"Start of Month\", each Date.StartOfMonth([Date]), type date),\n      InsertEndOfMonth = Table.AddColumn(InsertStartOfMonth, \"End of Month\", each Date.EndOfMonth([Date]), type date),\n      InsertCalendarMonth = Table.AddColumn(InsertEndOfMonth, \"Month & Year\", each Text.Proper( Date.ToText([Date], [Format = \"MMM yyyy\"])), type text),\n      InsertMonthnYear = Table.AddColumn(InsertCalendarMonth , \"MonthnYear\", each [Year] * 100 + [Month], type number),\n      InsertMonthOffset = Table.AddColumn(InsertMonthnYear, \"CurrMonthOffset\", each ((12 * Date.Year([Date])) +  Date.Month([Date])) - ((12 * Date.Year(Date.From(CurrentDate))) +  Date.Month(Date.From(CurrentDate))), type number),\n      InsertCompletedMonth = Table.AddColumn(InsertMonthOffset, \"MonthCompleted\", each Date.EndOfMonth([Date]) < Date.From(Date.EndOfMonth(CurrentDate)), type logical),\n      InsertMonthName = Table.AddColumn(InsertCompletedMonth, \"Month Name\", each Text.Proper( Date.ToText([Date], \"MMMM\")), type text),\n      InsertMonthShort = Table.AddColumn( InsertMonthName, \"Month Short\", each Text.Proper( Date.ToText([Date], \"MMM\")), type text),\n      InsertMonthInitial = Table.AddColumn(InsertMonthShort, \"Month Initial\", each Text.Start([Month Name], 1) & Text.Repeat( Character.FromNumber(8203), Date.Month([Date]) ), type text),\n      InsertDayOfMonth = Table.AddColumn(InsertMonthInitial, \"Day of Month\", each Date.Day([Date]), type number),\n  \n      InsertWeekNumber = Table.AddColumn(InsertDayOfMonth, \"Week Number\", each\n        if Number.RoundDown((Date.DayOfYear([Date])-(Date.DayOfWeek([Date], Day.Monday)+1)+10)/7)=0\n        then Number.RoundDown((Date.DayOfYear(#date(Date.Year([Date])-1,12,31))-(Date.DayOfWeek(#date(Date.Year([Date])-1,12,31), Day.Monday)+1)+10)/7)\n        else if (Number.RoundDown((Date.DayOfYear([Date])-(Date.DayOfWeek([Date], Day.Monday)+1)+10)/7)=53 and (Date.DayOfWeek(#date(Date.Year([Date]),12,31), Day.Monday)+1<4))\n        then 1 else Number.RoundDown((Date.DayOfYear([Date])-(Date.DayOfWeek([Date], Day.Monday)+1)+10)/7), type number),\n      InsertStartOfWeek = Table.AddColumn(InsertWeekNumber, \"Start of Week\", each Date.StartOfWeek([Date], Day.Monday), type date),\n      InsertWeekEnding = Table.AddColumn(InsertStartOfWeek, \"End of Week\", each Date.EndOfWeek( [Date], Day.Monday), type date),\n      InsertCalendarWk = Table.AddColumn(InsertWeekEnding, \"Week & Year\", each \"W\" & Text.PadStart( Text.From( [Week Number] ), 2, \"0\") & \" \" & Text.From(Date.Year( Date.AddDays( Date.StartOfWeek([Date], Day.Monday), 3 ))), type text ),\n      InsertWeeknYear = Table.AddColumn(InsertCalendarWk, \"WeeknYear\", each Date.Year( Date.AddDays( Date.StartOfWeek([Date], Day.Monday), 3 )) * 100 + [Week Number],  Int64.Type),\n      InsertWeekOffset = Table.AddColumn(InsertWeeknYear, \"CurrWeekOffset\", each (Number.From(Date.StartOfWeek([Date], Day.Monday))-Number.From(Date.StartOfWeek(CurrentDate, Day.Monday)))/7, type number),\n      InsertCompletedWeek = Table.AddColumn(InsertWeekOffset, \"WeekCompleted\", each Date.EndOfWeek( [Date], Day.Monday) < Date.From(Date.EndOfWeek(CurrentDate, Day.Monday)), type logical),\n  \n      InsertDayWeek = Table.AddColumn(InsertCompletedWeek, \"Day of Week Number\", each Date.DayOfWeek([Date], Day.Monday) + WDStart, Int64.Type),\n      InsertDayName = Table.AddColumn(InsertDayWeek, \"Day of Week Name\", each Text.Proper( Date.ToText([Date], \"dddd\" )), type text),\n      InsertDayInitial = Table.AddColumn(InsertDayName, \"Day of Week Initial\", each Text.Proper(Text.Start([Day of Week Name], 1)) & Text.Repeat( Character.FromNumber(8203), Date.DayOfWeek([Date], Day.Monday) + WDStart ), type text),\n      InsertDayOfYear = Table.AddColumn(InsertDayInitial, \"Day of Year\", each Date.DayOfYear([Date]), Int64.Type),\n      InsertDayInt = Table.AddColumn(InsertDayOfYear, \"DateInt\", each [Year] * 10000 + [Month] * 100 + [Day of Month], type number),\n      InsertDayOffset = Table.AddColumn(InsertDayInt, \"CurrDayOffset\", each Number.From([Date]) - Number.From(CurrentDate), type number),\n      InsertIsAfterToday = Table.AddColumn(InsertDayOffset, \"IsAfterToday\", each not ([Date] <= Date.From(CurrentDate)), type logical),\n      InsertIsWorkingDay = Table.AddColumn(InsertIsAfterToday, \"IsWeekDay\", each if Date.DayOfWeek([Date], Day.Monday) > 4 then false else true, type logical),\n      InsertIsHoliday = Table.AddColumn(InsertIsWorkingDay, \"IsHoliday\", each if Holidays = null then \"Unknown\" else List.Contains( Holidays, [Date] ), if Holidays = null then type text else type logical),\n      InsertIsBusinessDay = Table.AddColumn(InsertIsHoliday, \"IsBusinessDay\", each if [IsWeekDay] = true and [IsHoliday] <> true then true else false, type logical),\n      InsertDayType = Table.AddColumn(InsertIsBusinessDay, \"Day Type\", each if [IsHoliday] = true then \"Holiday\" else if [IsWeekDay] = false then \"Weekend\" else if [IsWeekDay] = true then \"Weekday\" else null, type text),\n\n      InsertISOYear = Table.AddColumn( InsertDayType, \"ISO Year\", each Date.Year( Date.AddDays( Date.StartOfWeek([Date], Day.Monday), 3 )), type number),\n      InsertISOqNum = Table.AddColumn(InsertISOYear, \"ISO Quarter Number\", each if [Week Number] >39 then 4 else if [Week Number] >26 then 3 else if [Week Number] >13 then 2 else 1, Int64.Type),\n      InsertISOqtr = Table.AddColumn(InsertISOqNum, \"ISO Quarter\", each \"Q\" & Number.ToText([ISO Quarter Number]), type text),\n      InsertISOQuarter = Table.AddColumn(InsertISOqtr, \"ISO Quarter & Year\", each \"Q\" & Number.ToText([ISO Quarter Number]) & \" \" & Number.ToText([ISO Year]), type text),\n      InsertISOqNy = Table.AddColumn(InsertISOQuarter, \"ISO QuarternYear\", each [ISO Year] * 10 + [ISO Quarter Number], type number),\n\n      // BufferTable = Table.Buffer(Table.Distinct( InsertISOqNy[[ISO Year], [DateInt]])),\n      // InsertISOday = Table.AddColumn(InsertISOqNy, \"ISO Day of Year\", (OT) => Table.RowCount( Table.SelectRows( BufferTable, (IT) => IT[DateInt] <= OT[DateInt] and IT[ISO Year] = OT[ISO Year])),  Int64.Type),\n      AddFY = Table.AddColumn(InsertISOqNy, \"Fiscal Year\", each \"FY\" & (if [Month] >= FYStartMonth and FYStartMonth >1 then Text.From([Year] +1) else Text.From([Year])), type text),\n      //AddFYs = Table.AddColumn(AddFY, \"Fiscal Year short\", each \"FY\" & (if [Month] >= FYStartMonth and FYStartMonth >1 then Text.PadEnd( Text.End( Text.From([Year] +1), 2), 2, \"0\") else Text.End( Text.From([Year]), 2)), type text),\n      AddFQ = Table.AddColumn(AddFY, \"Fiscal Quarter\", each \"FQ\" & Text.From( Number.RoundUp( Date.Month( Date.AddMonths( [Date], - (FYStartMonth -1) )) / 3 )) & \" \" & (if [Month] >= FYStartMonth and FYStartMonth >1 then Text.From([Year] +1) else Text.From([Year])), type text),\n      AddFQnYr = Table.AddColumn(AddFQ, \"FQuarternYear\", each (if [Month] >= FYStartMonth and FYStartMonth >1 then [Year] +1 else [Year]) * 10 + Number.RoundUp( Date.Month( Date.AddMonths( [Date], - (FYStartMonth -1) )) / 3 ), type number),\n      AddFM = Table.AddColumn(AddFQnYr, \"Fiscal Period Number\", each if [Month] >= FYStartMonth and FYStartMonth >1 then [Month] - (FYStartMonth-1) else if [Month] >= FYStartMonth and FYStartMonth =1 then [Month] else [Month] + (12-FYStartMonth+1), type number),\n      AddFP = Table.AddColumn(AddFM, \"Fiscal Period\", each \"FP\" & Text.PadStart( Text.From([Fiscal Period Number]), 2, \"0\") & \" \" & (if [Month] >= FYStartMonth and FYStartMonth >1 then Text.From([Year] +1) else Text.From([Year])), type text),\n      AddFMnYr = Table.AddColumn(AddFP , \"FPeriodnYear\", each (if [Month] >= FYStartMonth and FYStartMonth >1 then [Year] +1 else [Year]) * 100 + [Fiscal Period Number], type number),\n      FYCalendarStart = #date( Date.Year(StartDate)-1, FYStartMonth, 1 ),\n      InsertFFD = Table.AddColumn( AddFMnYr, \"FiscalFirstDay\", each if [Month] >= FYStartMonth and FYStartMonth >1 then #date( Date.Year([Date])+1, FYStartMonth, 1) else #date( Date.Year([Date]), FYStartMonth, 1), type date ),\n\n      InitTable = Table.FromList( List.Transform( {Number.From(FYCalendarStart) .. Number.From(EndDate)}, Date.From), Splitter.SplitByNothing(), type table [DateFW = Date.Type]),\n      AddFFD = Table.AddColumn( InitTable, \"FiscalFirstDay\", each if Date.Month([DateFW]) < FYStartMonth then #date(Date.Year([DateFW]), FYStartMonth, 1) else #date(Date.Year([DateFW]) + 1, FYStartMonth, 1)),\n      AddFWSD = Table.AddColumn( AddFFD, \"FWStartDate\", each Date.AddYears(Date.StartOfWeek([DateFW], Day.Monday), 1)),\n      Group1 = Table.Group( AddFWSD, {\"FiscalFirstDay\", \"FWStartDate\"}, {{\"AllRows\", each _, type table [DateFW = nullable date, FiscalFirstDay = date, FWStartDate = date]}}),\n      Group2 = Table.Group( Group1, {\"FiscalFirstDay\"}, {{\"AllRows2\", each _, type table [FiscalFirstDay = date, FWStartDate = date, AllRows = table]}}),\n      AddIndex = Table.AddColumn( Group2, \"Custom\", each Table.AddIndexColumn([AllRows2], \"Fiscal Week Number\", 1, 1) )[[Custom]],\n      ExpandG2 = Table.ExpandTableColumn( AddIndex, \"Custom\", {\"FiscalFirstDay\", \"FWStartDate\", \"AllRows\", \"Fiscal Week Number\"}, {\"FiscalFirstDay\", \"FWStartDate\", \"AllRows\", \"Fiscal Week Number\"}), \n      ExpandG1 = Table.ExpandTableColumn( ExpandG2, \"AllRows\", {\"DateFW\"}, {\"DateFW\"} )[[DateFW], [Fiscal Week Number]],\n      MergeFYW = Table.Join( InsertFFD, {\"Date\"}, ExpandG1, {\"DateFW\"}, JoinKind.LeftOuter, JoinAlgorithm.SortMerge ),\n      FWlogic = List.Contains( {null}, FYStartMonthNum),\n      UpdateFYWeek = if FWlogic then Table.ReplaceValue(MergeFYW, each [Fiscal Week Number], each if FYStartMonth =1 then [Week Number] else [Fiscal Week Number], Replacer.ReplaceValue, {\"Fiscal Week Number\"}) else MergeFYW,\n      AddFYW = Table.AddColumn( UpdateFYWeek, \"Fiscal Week\", each if FWlogic then \"F\" & [#\"Week & Year\"] else if FYStartMonth =1 then \"FW\" & Text.PadStart( Text.From([Fiscal Week Number]), 2, \"0\") & Date.ToText([Date], \" yyyy\") else if Date.Month([Date]) < FYStartMonth then \"FW\" & Text.PadStart( Text.From([Fiscal Week Number]), 2, \"0\") & Date.ToText([Date], \" yyyy\") else \"FW\" & Text.PadStart(Text.From([Fiscal Week Number]), 2, \"0\") & \" \" & Text.From( Date.Year([Date])+1), type text),\n      InsertFWeeknYear = Table.AddColumn(AddFYW, \"FWeeknYear\", each if FWlogic then [WeeknYear] else (if FYStartMonth =1 then Date.Year([Date]) else if Date.Month([Date]) < FYStartMonth then Date.Year([Date]) else Date.Year([Date])+1) * 100 + [Fiscal Week Number],  Int64.Type),\n      \n      CurrentDateRecord = Table.SelectRows(InsertFWeeknYear, each ([Date] = CurrentDate)),\n      CurrentISOyear = CurrentDateRecord{0}[ISO Year],\n      CurrentISOqtr = CurrentDateRecord{0}[ISO Quarter Number],\n      CurrentYear = CurrentDateRecord{0}[Year],\n      CurrentMonth = CurrentDateRecord{0}[Month],\n      CurrentFiscalFirstDay = CurrentDateRecord{0}[FiscalFirstDay],\n      PrevFiscalFirstDay = Date.AddYears(CurrentFiscalFirstDay, -1),\n      CurrentFY = CurrentDateRecord{0}[Fiscal Year],\n      CurrentFQ = CurrentDateRecord{0}[FQuarternYear],\n      CurrentFP = CurrentDateRecord{0}[FPeriodnYear],\n      CurrentFW = CurrentDateRecord{0}[FWeeknYear],\n\n      InsertISOYrOffset = Table.AddColumn(InsertFWeeknYear, \"ISO CurrYearOffset\", each [ISO Year] - CurrentISOyear, type number),\n      InsertISOQtrOffset = Table.AddColumn(InsertISOYrOffset, \"ISO CurrQuarterOffset\", each ((4 * [ISO Year]) +  [ISO Quarter Number]) - ((4 * CurrentISOyear) + CurrentISOqtr), type number),\n      InsertFYoffset = Table.AddColumn(InsertISOQtrOffset, \"Fiscal CurrYearOffset\", each try (if [Month] >= FYStartMonth then [Year]+1 else [Year]) - (if CurrentMonth >= FYStartMonth then CurrentYear+1 else CurrentYear) otherwise null, type number),\n      InsertCurrentFY = Table.AddColumn(InsertFYoffset, \"IsCurrentFY\", each if [Fiscal Year] = CurrentFY then true else false, type logical),\n      InsertCurrentFQ = Table.AddColumn(InsertCurrentFY, \"IsCurrentFQ\", each if [FQuarternYear] = CurrentFQ then true else false, type logical),\n      InsertCurrentFP = Table.AddColumn(InsertCurrentFQ, \"IsCurrentFP\", each if [FPeriodnYear] = CurrentFP then true else false, type logical),\n      InsertCurrentFW = Table.AddColumn(InsertCurrentFP, \"IsCurrentFW\", each if [FWeeknYear] = InsertISOYrOffset then true else false, type logical),\n      InsertPYTD = Table.AddColumn(InsertCurrentFW, \"IsPYTD\", each if CurrentYear-1 = [Year] and [Day of Year] <= CurrentDateRecord{0}[Day of Year] then true else false, type logical),\n        ListPrevFYDates = List.Buffer( Table.SelectRows( Table.ExpandTableColumn( Table.NestedJoin(\n            Table.AddIndexColumn( Table.RenameColumns( Table.TransformColumnTypes( Table.FromList( List.Dates( PrevFiscalFirstDay, Number.From(CurrentFiscalFirstDay-PrevFiscalFirstDay),#duration(1,0,0,0)), Splitter.SplitByNothing()),{{\"Column1\", type date}}), {{\"Column1\", \"DateFY\"}}), \"Index\", 1, 1), {\"Index\"}, \n            Table.AddIndexColumn( Table.RenameColumns( Table.TransformColumnTypes( Table.FromList( List.Dates( Date.AddYears( PrevFiscalFirstDay, -1), Number.From( PrevFiscalFirstDay - Date.AddYears( PrevFiscalFirstDay, -1)),#duration(1,0,0,0)), Splitter.SplitByNothing()),{{\"Column1\", type date}}), {{\"Column1\", \"DateFY\"}}), \"Index\", 1, 1)\n            , {\"Index\"}, \"Table\", JoinKind.LeftOuter), \"Table\", {\"DateFY\"}, {\"PrevDateFY\"}), each [DateFY] <= CurrentDate)[PrevDateFY] ),\n      InsertPFYTD = Table.AddColumn(InsertPYTD, \"IsPFYTD\", each if [Fiscal CurrYearOffset] = -1 and List.Contains(ListPrevFYDates, [Date] ) then true else false, type logical),\n      InsertNetWorkdays = if AddRelativeNetWorkdays = true then Table.AddColumn(InsertPFYTD, \"Relative Networkdays\", each fxNETWORKDAYS( StartDate, [Date], Holidays ), type number ) else InsertPFYTD,\n      fxNETWORKDAYS = (StartDate, EndDate, optional Holidays as list) =>\n        let\n          ListOfDates = List.Dates( StartDate, Number.From(EndDate-StartDate)+1, Duration.From(1) ),\n          DeleteHolidays = if Holidays = null then ListOfDates else List.Difference( ListOfDates, List.Transform(Holidays, Date.From )),\n          DeleteWeekends = List.Select( DeleteHolidays, each Date.DayOfWeek( _, Day.Monday) < 5 ),\n          CountDays = List.Count( DeleteWeekends)\n        in\n          CountDays,\n      RemoveToday = Table.RemoveColumns( if EndDate < CurrentDate then Table.SelectRows(InsertNetWorkdays, each ([Date] <> CurrentDate)) else InsertNetWorkdays, {\"Day of Year\", \"FiscalFirstDay\"}), \n      ChType = Table.TransformColumnTypes(RemoveToday,{{\"Year\", Int64.Type}, {\"Quarter Number\", Int64.Type}, {\"Month\", Int64.Type}, {\"Day of Month\", Int64.Type}, {\"DateInt\", Int64.Type}, {\"Day of Week Number\", Int64.Type}, {\"ISO CurrYearOffset\", Int64.Type}, {\"ISO QuarternYear\", Int64.Type}, {\"ISO CurrQuarterOffset\", Int64.Type}, {\"Week Number\", Int64.Type}, {\"WeeknYear\", Int64.Type}, {\"MonthnYear\", Int64.Type}, {\"QuarternYear\", Int64.Type}, {\"FQuarternYear\", Int64.Type}, {\"Fiscal Period Number\", Int64.Type}, {\"FPeriodnYear\", Int64.Type}, {\"CurrWeekOffset\", Int64.Type}, {\"CurrMonthOffset\", Int64.Type}, {\"CurrQuarterOffset\", Int64.Type}, {\"CurrYearOffset\", Int64.Type}, {\"Fiscal CurrYearOffset\", Int64.Type}, {\"Fiscal Week Number\", Int64.Type}}),\n      ReorderCols = Table.ReorderColumns(ChType,{\"Date\", \"Year\", \"CurrYearOffset\", \"YearCompleted\", \"Quarter Number\", \"Quarter\", \"Start of Quarter\", \"End of Quarter\", \"Quarter & Year\", \"QuarternYear\", \"CurrQuarterOffset\", \"QuarterCompleted\", \"Month\", \"Start of Month\", \"End of Month\", \"Month & Year\", \"MonthnYear\", \"CurrMonthOffset\", \"MonthCompleted\", \"Month Name\", \"Month Short\", \"Month Initial\", \"Day of Month\", \"Week Number\", \"Start of Week\", \"End of Week\", \"Week & Year\", \"WeeknYear\", \"CurrWeekOffset\", \"WeekCompleted\", \"Day of Week Number\", \"Day of Week Name\", \"Day of Week Initial\", \"DateInt\", \"CurrDayOffset\", \"IsAfterToday\", \"IsWeekDay\", \"IsHoliday\", \"IsBusinessDay\", \"Day Type\", \"ISO Year\", \"ISO CurrYearOffset\", \"ISO Quarter Number\", \"ISO Quarter\", \"ISO Quarter & Year\", \"ISO QuarternYear\", \"ISO CurrQuarterOffset\", \"Fiscal Year\", \"Fiscal CurrYearOffset\", \"Fiscal Quarter\", \"FQuarternYear\", \"Fiscal Period Number\", \"Fiscal Period\", \"FPeriodnYear\", \"DateFW\", \"Fiscal Week Number\", \"Fiscal Week\", \"FWeeknYear\", \"IsCurrentFY\", \"IsCurrentFQ\", \"IsCurrentFP\", \"IsCurrentFW\", \"IsPYTD\", \"IsPFYTD\"}),\n      ListCols = if FWlogic then Table.RemoveColumns(ReorderCols,{\"ISO Quarter Number\", \"Fiscal Year\", \"Fiscal Quarter\", \"FQuarternYear\", \"Fiscal Period Number\", \"Fiscal Period\", \"FPeriodnYear\", \"DateFW\", \"Fiscal Week Number\", \"Fiscal Week\", \"FWeeknYear\", \"Fiscal CurrYearOffset\", \"IsCurrentFQ\", \"IsCurrentFP\", \"IsCurrentFW\"}) else Table.RemoveColumns(ReorderCols,{\"Fiscal Period Number\", \"DateFW\", \"Fiscal Week Number\", \"ISO Quarter Number\"})\n  in\n      ListCols,\n      Documentation = [\n      Documentation.Name =  \" fxCalendar\", \n      Documentation.Description = \" Date table function to create an ISO-8601 calendar\", \n      Documentation.LongDescription = \" Date table function to create an ISO-8601 calendar\", \n      Documentation.Category = \" Table\", \n      Documentation.Version = \" 2.01: full code review\",\n      Documentation.Source = \" local\", \n      Documentation.Author = \" Melissa de Korte\", \n      Documentation.Examples = { [Description =  \" See: https://forum.enterprisedna.co/t/extended-date-table-power-query-m-function/6390\", \n        Code = \" Optional paramters: #(lf)\n        (FYStartMonthNum) Month number the fiscal year starts, Januari if omitted #(lf) \n        (Holidays) Select a query (and column) that contains a list of holiday dates #(lf) \n        (WDStartNum) Switch default weekday numbering from 0-6 to 1-7 by entering a 1 #(lf)\n        (AddRelativeNetWorkdays) if true adds a Relative Networkdays column to the date table #(lf)\n        #(lf)\n        Important to note: #(lf)\n        [Fiscal Week] starts on a Monday and can contain less than 7 days in a First- and/or Last Week of a FY #(lf)\n        [IsWeekDay] does not take holiday dates into account  #(lf)\n        [IsBusinessDay] does take optional holiday dates into account  #(lf)\n        [IsPYTD] and [IsPFYTD] compare Previous [Day of Year] with the Current [Day of Year] number, so dates don't align in leap years #(lf)\n        IMPORTANT! No Fiscal columns will be added if the (FYStartMonthNum) is omitted\", \n        Result = \" \" ] }\n      ]\n  in \n  Value.ReplaceType( fnDateTable, Value.ReplaceMetadata( Value.Type( fnDateTable ), Documentation ))\nin\n    Source"
                                }
                            ],
                            "configuredBy": "victorsam@vsamautomation.com",
                            "configuredById": "7afce4a6-37a7-4db8-962e-9b8d4e2bc885",
                            "isEffectiveIdentityRequired": false,
                            "isEffectiveIdentityRolesRequired": false,
                            "targetStorageMode": "Abf",
                            "createdDate": "2025-08-29T08:28:00.173",
                            "contentProviderType": "PbixInImportMode",
                            "datasourceUsages": [
                                {
                                    "datasourceInstanceId": "03cbadfd-3beb-4cc9-99b6-c469e7d20d50"
                                }
                            ],
                            "tags": []
                        },
                        {
                            "id": "cc7bc30b-a5bb-4a17-bfa9-9675940f2468",
                            "name": "Report Usage Metrics Model",
                            "tables": [
                                {
                                    "name": "Dates",
                                    "isHidden": false,
                                    "columns": [
                                        {
                                            "name": "Date",
                                            "dataType": "DateTime",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Month",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Day",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "OwnerTenantGuid",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "OwnerUserGuid",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "OwnerGroupGuid",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": []
                                },
                                {
                                    "name": "Reports",
                                    "isHidden": false,
                                    "columns": [
                                        {
                                            "name": "OwnerTenantGuid",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "OwnerUserGuid",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "OwnerGroupGuid",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "ReportGuid",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "DisplayName",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": []
                                },
                                {
                                    "name": "ReportsCount",
                                    "isHidden": false,
                                    "columns": [
                                        {
                                            "name": "TenantGuid",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Total",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": []
                                },
                                {
                                    "name": "Views",
                                    "isHidden": false,
                                    "columns": [
                                        {
                                            "name": "Date",
                                            "dataType": "DateTime",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "OwnerTenantGuid",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "OwnerUserGuid",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "OwnerGroupGuid",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "ReportGuid",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Platform",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "DistributionMethod",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "UserGuid",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "ReportPage",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "GranularViewsCount",
                                            "dataType": "Int64",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [
                                        {
                                            "name": "ViewersCount",
                                            "expression": "DISTINCTCOUNT([UserGuid])",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "ViewsCount",
                                            "expression": "SUM([GranularViewsCount])",
                                            "isHidden": false
                                        }
                                    ]
                                },
                                {
                                    "name": "ViewsRanking",
                                    "isHidden": false,
                                    "columns": [
                                        {
                                            "name": "OwnerTenantGuid",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "OwnerUserGuid",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "OwnerGroupGuid",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "ReportGuid",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "ViewsRank",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": []
                                },
                                {
                                    "name": "ViewersRanking",
                                    "isHidden": false,
                                    "columns": [
                                        {
                                            "name": "OwnerTenantGuid",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "OwnerUserGuid",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "OwnerGroupGuid",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "ReportGuid",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "ViewersRank",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": []
                                },
                                {
                                    "name": "Platforms",
                                    "isHidden": false,
                                    "columns": [
                                        {
                                            "name": "Name",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": []
                                },
                                {
                                    "name": "DistributionMethods",
                                    "isHidden": false,
                                    "columns": [
                                        {
                                            "name": "OwnerTenantGuid",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "OwnerUserGuid",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "OwnerGroupGuid",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Name",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": []
                                },
                                {
                                    "name": "Users",
                                    "isHidden": false,
                                    "columns": [
                                        {
                                            "name": "OwnerTenantGuid",
                                            "dataType": "String",
                                            "isHidden": true,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "UserGuid",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "GivenName",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "FamilyName",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "UserPrincipalName",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": []
                                }
                            ],
                            "configuredBy": "victorsam@vsamautomation.com",
                            "configuredById": "7afce4a6-37a7-4db8-962e-9b8d4e2bc885",
                            "isEffectiveIdentityRequired": false,
                            "isEffectiveIdentityRolesRequired": false,
                            "directQueryRefreshSchedule": {
                                "frequency": 120,
                                "days": [],
                                "times": [],
                                "localTimeZoneId": "UTC"
                            },
                            "targetStorageMode": "Abf",
                            "createdDate": "2025-10-06T11:33:03.193",
                            "contentProviderType": "UsageMetricsUserReport",
                            "schemaRetrievalError": "Model mashup is not available, as it's not supported by the Analysis Services engine",
                            "tags": []
                        }
                    ],
                    "dataflows": [],
                    "datamarts": []
                }
            ],
            "datasourceInstances": [
                {
                    "datasourceType": "MySql",
                    "connectionDetails": {
                        "server": "vsamautomation.com",
                        "database": "vsamaut1_waziri"
                    },
                    "datasourceId": "03cbadfd-3beb-4cc9-99b6-c469e7d20d50",
                    "gatewayId": "ac01df63-0d47-4271-addb-28319dcee781"
                }
            ]
        }
    },
    {
        "workspaceId": "0e5c51b6-1871-4c2f-acd0-f71e528fb1f2",
        "workspaceName": "Admin Test Workspace",
        "scanResult": {
            "workspaces": [
                {
                    "id": "0e5c51b6-1871-4c2f-acd0-f71e528fb1f2",
                    "name": "Admin Test Workspace",
                    "type": "Workspace",
                    "state": "Active",
                    "isOnDedicatedCapacity": true,
                    "capacityId": "FFE8DFEC-FB29-4D83-8C0B-3BA55D75DB55",
                    "defaultDatasetStorageFormat": "Small",
                    "reports": [
                        {
                            "reportType": "PowerBIReport",
                            "id": "dc86e2c5-0e93-4c8b-b228-dca8029a183f",
                            "name": "New Waziri Dashboard Report",
                            "datasetId": "45667c5a-8b94-4906-b710-4a06c1a4f960",
                            "createdDateTime": "2025-10-06T11:41:26.4",
                            "modifiedDateTime": "2025-10-06T11:41:26.4",
                            "modifiedBy": "Victorsam@vsamautomation.onmicrosoft.com",
                            "createdBy": "Victorsam@vsamautomation.onmicrosoft.com",
                            "modifiedById": "1b8bd058-0db5-4cc3-9e33-a6b878d82180",
                            "createdById": "1b8bd058-0db5-4cc3-9e33-a6b878d82180",
                            "tags": []
                        }
                    ],
                    "dashboards": [
                        {
                            "id": "2442f0bd-b8f7-478c-848d-06a10b3ec4ca",
                            "displayName": "New Waziri Dashboard Report.pbix",
                            "isReadOnly": false,
                            "tiles": [
                                {
                                    "id": "6835094d-8167-4bd4-a068-20e36cc34f37",
                                    "title": "New Waziri Dashboard Report.pbix",
                                    "reportId": "dc86e2c5-0e93-4c8b-b228-dca8029a183f",
                                    "datasetId": "45667c5a-8b94-4906-b710-4a06c1a4f960"
                                }
                            ],
                            "tags": []
                        }
                    ],
                    "datasets": [
                        {
                            "id": "45667c5a-8b94-4906-b710-4a06c1a4f960",
                            "name": "New Waziri Dashboard Report",
                            "tables": [
                                {
                                    "name": "Calendar",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Date",
                                            "dataType": "DateTime",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Year",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "CurrYearOffset",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "YearCompleted",
                                            "dataType": "Boolean",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Quarter Number",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Quarter",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Start of Quarter",
                                            "dataType": "DateTime",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "End of Quarter",
                                            "dataType": "DateTime",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Quarter & Year",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "QuarternYear",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "CurrQuarterOffset",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "QuarterCompleted",
                                            "dataType": "Boolean",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Month",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Start of Month",
                                            "dataType": "DateTime",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "End of Month",
                                            "dataType": "DateTime",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Month & Year",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "MonthnYear",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "CurrMonthOffset",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "MonthCompleted",
                                            "dataType": "Boolean",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Month Name",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Month Short",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Month Initial",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Day of Month",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Week Number",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Start of Week",
                                            "dataType": "DateTime",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "End of Week",
                                            "dataType": "DateTime",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Week & Year",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "WeeknYear",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "CurrWeekOffset",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "WeekCompleted",
                                            "dataType": "Boolean",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Day of Week Number",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Day of Week Name",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Day of Week Initial",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "DateInt",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "CurrDayOffset",
                                            "dataType": "Double",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "IsAfterToday",
                                            "dataType": "Boolean",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "IsWeekDay",
                                            "dataType": "Boolean",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "IsHoliday",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "IsBusinessDay",
                                            "dataType": "Boolean",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "Day Type",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "ISO Year",
                                            "dataType": "Double",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "ISO CurrYearOffset",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "ISO Quarter",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "ISO Quarter & Year",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "ISO QuarternYear",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "ISO CurrQuarterOffset",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "IsCurrentFY",
                                            "dataType": "Boolean",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "IsPYTD",
                                            "dataType": "Boolean",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "IsPFYTD",
                                            "dataType": "Boolean",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "DoW",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "expression": "CONCATENATE(LEFT('Calendar'[Day of Week Name],3),\" \"&'Calendar'[Day Ordinals])",
                                            "columnType": "Calculated"
                                        },
                                        {
                                            "name": "Day Ordinals",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "expression": "\nVar Last2Digits = RIGHT('Calendar'[Day of Month],2)\nVar LastDigit = RIGHT('Calendar'[Day of Month],1)\nVar Ordination =\n    SWITCH(TRUE(),\n        Last2Digits IN {\"11\",\"12\",\"13\"},\"th\",\n        LastDigit = \"1\" , \"st\",\n        LastDigit  = \"2\",\"nd\",\n        LastDigit = \"3\", \"rd\",\n        \"th\"\n    )\nRETURN\nCONCATENATE('Calendar'[Day of Month],Ordination)",
                                            "columnType": "Calculated"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n    Source = Query1(#date(2020, 1, 1), #date(2026, 12, 31), null, null, 1, null)\nin\n    Source"
                                        }
                                    ]
                                },
                                {
                                    "name": "_Totals",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Value",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "CalculatedTableColumn"
                                        }
                                    ],
                                    "measures": [
                                        {
                                            "name": "Total Sales",
                                            "expression": "\nSUM(Sales[Price])",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Cash Sales",
                                            "expression": "\nCALCULATE([Total Sales],\n    FILTER(Sales,\n        Sales[Customer]=\"Cash Customer\"\n    )\n)",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Credit Sales",
                                            "expression": "\nCALCULATE([Total Sales],\n    FILTER(Sales,\n        Sales[Customer]<>\"Cash Customer\"\n    )\n)",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Total Cost",
                                            "expression": "Sum(Sales[Cost])",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Total Profit",
                                            "expression": "Sum(Sales[Profit])",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Total Sales Title",
                                            "expression": "\" Total Sales\"",
                                            "isHidden": false
                                        }
                                    ],
                                    "source": [
                                        {
                                            "expression": "{0}"
                                        }
                                    ]
                                },
                                {
                                    "name": "01_Current Week",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Value",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "CalculatedTableColumn"
                                        }
                                    ],
                                    "measures": [
                                        {
                                            "name": "This Week Title",
                                            "expression": "\"This Week\"",
                                            "isHidden": false
                                        }
                                    ],
                                    "source": [
                                        {
                                            "expression": "{0}"
                                        }
                                    ]
                                },
                                {
                                    "name": "02_Previous Week",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Value",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "CalculatedTableColumn"
                                        }
                                    ],
                                    "measures": [
                                        {
                                            "name": "Prev Week Title",
                                            "expression": "\"Last Week\"",
                                            "isHidden": false
                                        }
                                    ],
                                    "source": [
                                        {
                                            "expression": "{0}"
                                        }
                                    ]
                                },
                                {
                                    "name": "03_Current Month",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Value",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "CalculatedTableColumn"
                                        }
                                    ],
                                    "measures": [
                                        {
                                            "name": "This Month Sales",
                                            "expression": "\nCALCULATE(_Totals[Total Sales],\n    FILTER('Calendar','Calendar'[CurrMonthOffset]=0)\n)",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "This Month Title",
                                            "expression": "\"This Month\"",
                                            "isHidden": false
                                        }
                                    ],
                                    "source": [
                                        {
                                            "expression": "{0}"
                                        }
                                    ]
                                },
                                {
                                    "name": "04_Previous Month",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Value",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "CalculatedTableColumn"
                                        }
                                    ],
                                    "measures": [
                                        {
                                            "name": "Curr Month Prev Year Sales",
                                            "expression": "\nCALCULATE(_Totals[Total Sales],\n FILTER('Calendar','Calendar'[CurrMonthOffset]=-12)\n)",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Prev Month Title",
                                            "expression": "\"Last Month\"",
                                            "isHidden": false
                                        }
                                    ],
                                    "source": [
                                        {
                                            "expression": "{0}"
                                        }
                                    ]
                                },
                                {
                                    "name": "05_Current Year",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Value",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "CalculatedTableColumn"
                                        }
                                    ],
                                    "measures": [
                                        {
                                            "name": "This Year Title",
                                            "expression": "\"This Year\"",
                                            "isHidden": false
                                        }
                                    ],
                                    "source": [
                                        {
                                            "expression": "{0}"
                                        }
                                    ]
                                },
                                {
                                    "name": "06_Previous Year",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Value",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "CalculatedTableColumn"
                                        }
                                    ],
                                    "measures": [
                                        {
                                            "name": "Prev Year Title",
                                            "expression": "\"Last Year\"",
                                            "isHidden": false
                                        }
                                    ],
                                    "source": [
                                        {
                                            "expression": "{0}"
                                        }
                                    ]
                                },
                                {
                                    "name": "_Subs",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Value",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "CalculatedTableColumn"
                                        }
                                    ],
                                    "measures": [
                                        {
                                            "name": "Selected Date",
                                            "expression": "SELECTEDVALUE('Calendar'[Date])",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Selected Month",
                                            "expression": "SELECTEDVALUE('Calendar'[Month Short])",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Selected DoW",
                                            "expression": "SELECTEDVALUE('Calendar'[DoW])",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Selected Year",
                                            "expression": "SELECTEDVALUE('Calendar'[Year])",
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Date Combo",
                                            "expression": "[Selected DoW]&\"-\"&[Selected Month]&\"-\"&[Selected Year]",
                                            "isHidden": false
                                        }
                                    ],
                                    "source": [
                                        {
                                            "expression": "{0}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Orders",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "date",
                                            "dataType": "DateTime",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "customer",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "amount",
                                            "dataType": "Double",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "order_id",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "balance",
                                            "dataType": "Double",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "status",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "memo",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "user",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n    Source = MySQL.Database(\"vsamautomation.com\", \"vsamaut1_waziri\", [ReturnSingleDatabase=true, CreateNavigationProperties=false]),\n    vsamaut1_waziri_orders = Source{[Schema=\"vsamaut1_waziri\",Item=\"orders\"]}[Data]\nin\n    vsamaut1_waziri_orders"
                                        }
                                    ]
                                },
                                {
                                    "name": "Sales",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "date",
                                            "dataType": "DateTime",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "order_id",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "customer",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "item",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "part_no",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "make",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "position",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "qty",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "invoice_no",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "price",
                                            "dataType": "Double",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "cost",
                                            "dataType": "Double",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "profit",
                                            "dataType": "Double",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "profit%",
                                            "dataType": "Double",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "vehicle_make",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "model",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "engine_type",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "vat",
                                            "dataType": "Double",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "memo",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "user",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "id",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n    Source = MySQL.Database(\"vsamautomation.com\", \"vsamaut1_waziri\", [ReturnSingleDatabase=true]),\n    vsamaut1_waziri_items_sales = Source{[Schema=\"vsamaut1_waziri\",Item=\"items_sales\"]}[Data]\nin\n    vsamaut1_waziri_items_sales"
                                        }
                                    ]
                                },
                                {
                                    "name": "waz_stock_movement",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "id",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "item",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "part_no",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "prev_bal",
                                            "dataType": "Double",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "qty",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "movement_type",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "movement_id",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "user",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "date",
                                            "dataType": "DateTime",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n    Source = MySQL.Database(\"vsamautomation.com\", \"vsamaut1_waziri\", [ReturnSingleDatabase=true]),\n    vsamaut1_waziri_stock_movement = Source{[Schema=\"vsamaut1_waziri\",Item=\"stock_movement\"]}[Data]\nin\n    vsamaut1_waziri_stock_movement"
                                        }
                                    ]
                                },
                                {
                                    "name": "CustomersDB",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "id",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "customer name",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "mobile",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "address",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "balance",
                                            "dataType": "Double",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "status",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n    Source = MySQL.Database(\"vsamautomation.com\", \"vsamaut1_waziri\", [ReturnSingleDatabase=true]),\n    vsamaut1_waziri_customers = Source{[Schema=\"vsamaut1_waziri\",Item=\"customers\"]}[Data]\nin\n    vsamaut1_waziri_customers"
                                        }
                                    ]
                                },
                                {
                                    "name": "Payments",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "date",
                                            "dataType": "DateTime",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "customer",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "amount",
                                            "dataType": "Double",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "memo",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "mode_of_payment",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "status",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "balance",
                                            "dataType": "Double",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "order_id",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "id",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "user",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n    Source = MySQL.Database(\"vsamautomation.com\", \"vsamaut1_waziri\", [ReturnSingleDatabase=true]),\n    vsamaut1_waziri_cust_payments = Source{[Schema=\"vsamaut1_waziri\",Item=\"cust_payments\"]}[Data]\nin\n    vsamaut1_waziri_cust_payments"
                                        }
                                    ]
                                },
                                {
                                    "name": "ItemsDB",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "part number",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "item name",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "vehicle make",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "vehicle model",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "engine type",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "stock balance",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "unit cost",
                                            "dataType": "Double",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "stock value",
                                            "dataType": "Double",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "product image",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "image url",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "category",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n    Source = MySQL.Database(\"vsamautomation.com\", \"vsamaut1_waziri\", [ReturnSingleDatabase=true]),\n    vsamaut1_waziri_items = Source{[Schema=\"vsamaut1_waziri\",Item=\"items\"]}[Data]\nin\n    vsamaut1_waziri_items"
                                        }
                                    ]
                                },
                                {
                                    "name": "hpeqhdmy_salesapp vehicles",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "Vehicle_Make",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "id",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n    Source = MySQL.Database(\"vsamautomation.com\", \"vsamaut1_waziri\", [ReturnSingleDatabase=true]),\n    vsamaut1_waziri_vehicles = Source{[Schema=\"vsamaut1_waziri\",Item=\"vehicles\"]}[Data]\nin\n    vsamaut1_waziri_vehicles"
                                        }
                                    ]
                                },
                                {
                                    "name": "waz_item_make",
                                    "isHidden": false,
                                    "storageMode": "Import",
                                    "columns": [
                                        {
                                            "name": "id",
                                            "dataType": "Int64",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        },
                                        {
                                            "name": "MIK",
                                            "dataType": "String",
                                            "isHidden": false,
                                            "columnType": "Data"
                                        }
                                    ],
                                    "measures": [],
                                    "source": [
                                        {
                                            "expression": "let\n    Source = MySQL.Database(\"vsamautomation.com\", \"vsamaut1_waziri\", [ReturnSingleDatabase=true]),\n    vsamaut1_waziri_item_make = Source{[Schema=\"vsamaut1_waziri\",Item=\"item_make\"]}[Data]\nin\n    vsamaut1_waziri_item_make"
                                        }
                                    ]
                                }
                            ],
                            "expressions": [
                                {
                                    "name": "Query1",
                                    "expression": "let\n    Source = let fnDateTable = ( StartDate as date, EndDate as date, optional FYStartMonthNum as number, optional Holidays as list, optional WDStartNum as number, optional AddRelativeNetWorkdays as logical ) as table =>\n  let\n      FYStartMonth = List.Select( {1..12}, each _ = FYStartMonthNum ){0}? ?? 1,\n      WDStart = List.Select( {0..1}, each _ = WDStartNum ){0}? ?? 0,\n      CurrentDate = Date.From(DateTime.LocalNow()), //#date(2023,12,31),\n      DayCount = Duration.Days( Duration.From( EndDate - StartDate)) +1,\n      Source = List.Dates( StartDate, DayCount, #duration(1,0,0,0)),\n      AddToday = if EndDate < CurrentDate then List.Combine( {Source, {CurrentDate}}) else Source,\n      ToTable = Table.FromList(AddToday, Splitter.SplitByNothing(), type table [Date = Date.Type] ),\n      InsertYear = Table.AddColumn(ToTable, \"Year\", each Date.Year([Date]), type number),\n      InsertYearOffset = Table.AddColumn(InsertYear, \"CurrYearOffset\", each Date.Year([Date]) - Date.Year( Date.From(CurrentDate)), type number),\n      InsertCompletedYear = Table.AddColumn(InsertYearOffset, \"YearCompleted\", each Date.EndOfYear([Date]) < Date.From( Date.EndOfYear(CurrentDate)), type logical),\n\n      InsertQuarterNum = Table.AddColumn(InsertCompletedYear, \"Quarter Number\", each Date.QuarterOfYear([Date]), type number),\n      InsertQuarter = Table.AddColumn(InsertQuarterNum, \"Quarter\", each \"Q\" & Number.ToText([Quarter Number]), type text),\n      InsertStartOfQuarter = Table.AddColumn(InsertQuarter, \"Start of Quarter\", each Date.StartOfQuarter([Date]), type date),\n      InsertEndOfQuarter = Table.AddColumn(InsertStartOfQuarter, \"End of Quarter\", each Date.EndOfQuarter([Date]), type date),\n      InsertCalendarQtr = Table.AddColumn(InsertEndOfQuarter, \"Quarter & Year\", each \"Q\" & Number.ToText( Date.QuarterOfYear([Date])) & Date.ToText([Date], [Format = \" yyyy\"]), type text),\n      InsertQuarternYear = Table.AddColumn(InsertCalendarQtr, \"QuarternYear\", each [Year] * 10 + [Quarter Number], type number),\n      InsertQuarterOffset = Table.AddColumn(InsertQuarternYear, \"CurrQuarterOffset\", each ((4 * Date.Year([Date])) +  Date.QuarterOfYear([Date])) - ((4 * Date.Year(Date.From(CurrentDate))) +  Date.QuarterOfYear(Date.From(CurrentDate))), type number),\n      InsertCompletedQuarter = Table.AddColumn(InsertQuarterOffset, \"QuarterCompleted\", each Date.EndOfQuarter([Date]) < Date.From(Date.EndOfQuarter(CurrentDate)), type logical),\n\n      InsertMonth = Table.AddColumn(InsertCompletedQuarter, \"Month\", each Date.Month([Date]), type number),\n      InsertStartOfMonth = Table.AddColumn(InsertMonth, \"Start of Month\", each Date.StartOfMonth([Date]), type date),\n      InsertEndOfMonth = Table.AddColumn(InsertStartOfMonth, \"End of Month\", each Date.EndOfMonth([Date]), type date),\n      InsertCalendarMonth = Table.AddColumn(InsertEndOfMonth, \"Month & Year\", each Text.Proper( Date.ToText([Date], [Format = \"MMM yyyy\"])), type text),\n      InsertMonthnYear = Table.AddColumn(InsertCalendarMonth , \"MonthnYear\", each [Year] * 100 + [Month], type number),\n      InsertMonthOffset = Table.AddColumn(InsertMonthnYear, \"CurrMonthOffset\", each ((12 * Date.Year([Date])) +  Date.Month([Date])) - ((12 * Date.Year(Date.From(CurrentDate))) +  Date.Month(Date.From(CurrentDate))), type number),\n      InsertCompletedMonth = Table.AddColumn(InsertMonthOffset, \"MonthCompleted\", each Date.EndOfMonth([Date]) < Date.From(Date.EndOfMonth(CurrentDate)), type logical),\n      InsertMonthName = Table.AddColumn(InsertCompletedMonth, \"Month Name\", each Text.Proper( Date.ToText([Date], \"MMMM\")), type text),\n      InsertMonthShort = Table.AddColumn( InsertMonthName, \"Month Short\", each Text.Proper( Date.ToText([Date], \"MMM\")), type text),\n      InsertMonthInitial = Table.AddColumn(InsertMonthShort, \"Month Initial\", each Text.Start([Month Name], 1) & Text.Repeat( Character.FromNumber(8203), Date.Month([Date]) ), type text),\n      InsertDayOfMonth = Table.AddColumn(InsertMonthInitial, \"Day of Month\", each Date.Day([Date]), type number),\n  \n      InsertWeekNumber = Table.AddColumn(InsertDayOfMonth, \"Week Number\", each\n        if Number.RoundDown((Date.DayOfYear([Date])-(Date.DayOfWeek([Date], Day.Monday)+1)+10)/7)=0\n        then Number.RoundDown((Date.DayOfYear(#date(Date.Year([Date])-1,12,31))-(Date.DayOfWeek(#date(Date.Year([Date])-1,12,31), Day.Monday)+1)+10)/7)\n        else if (Number.RoundDown((Date.DayOfYear([Date])-(Date.DayOfWeek([Date], Day.Monday)+1)+10)/7)=53 and (Date.DayOfWeek(#date(Date.Year([Date]),12,31), Day.Monday)+1<4))\n        then 1 else Number.RoundDown((Date.DayOfYear([Date])-(Date.DayOfWeek([Date], Day.Monday)+1)+10)/7), type number),\n      InsertStartOfWeek = Table.AddColumn(InsertWeekNumber, \"Start of Week\", each Date.StartOfWeek([Date], Day.Monday), type date),\n      InsertWeekEnding = Table.AddColumn(InsertStartOfWeek, \"End of Week\", each Date.EndOfWeek( [Date], Day.Monday), type date),\n      InsertCalendarWk = Table.AddColumn(InsertWeekEnding, \"Week & Year\", each \"W\" & Text.PadStart( Text.From( [Week Number] ), 2, \"0\") & \" \" & Text.From(Date.Year( Date.AddDays( Date.StartOfWeek([Date], Day.Monday), 3 ))), type text ),\n      InsertWeeknYear = Table.AddColumn(InsertCalendarWk, \"WeeknYear\", each Date.Year( Date.AddDays( Date.StartOfWeek([Date], Day.Monday), 3 )) * 100 + [Week Number],  Int64.Type),\n      InsertWeekOffset = Table.AddColumn(InsertWeeknYear, \"CurrWeekOffset\", each (Number.From(Date.StartOfWeek([Date], Day.Monday))-Number.From(Date.StartOfWeek(CurrentDate, Day.Monday)))/7, type number),\n      InsertCompletedWeek = Table.AddColumn(InsertWeekOffset, \"WeekCompleted\", each Date.EndOfWeek( [Date], Day.Monday) < Date.From(Date.EndOfWeek(CurrentDate, Day.Monday)), type logical),\n  \n      InsertDayWeek = Table.AddColumn(InsertCompletedWeek, \"Day of Week Number\", each Date.DayOfWeek([Date], Day.Monday) + WDStart, Int64.Type),\n      InsertDayName = Table.AddColumn(InsertDayWeek, \"Day of Week Name\", each Text.Proper( Date.ToText([Date], \"dddd\" )), type text),\n      InsertDayInitial = Table.AddColumn(InsertDayName, \"Day of Week Initial\", each Text.Proper(Text.Start([Day of Week Name], 1)) & Text.Repeat( Character.FromNumber(8203), Date.DayOfWeek([Date], Day.Monday) + WDStart ), type text),\n      InsertDayOfYear = Table.AddColumn(InsertDayInitial, \"Day of Year\", each Date.DayOfYear([Date]), Int64.Type),\n      InsertDayInt = Table.AddColumn(InsertDayOfYear, \"DateInt\", each [Year] * 10000 + [Month] * 100 + [Day of Month], type number),\n      InsertDayOffset = Table.AddColumn(InsertDayInt, \"CurrDayOffset\", each Number.From([Date]) - Number.From(CurrentDate), type number),\n      InsertIsAfterToday = Table.AddColumn(InsertDayOffset, \"IsAfterToday\", each not ([Date] <= Date.From(CurrentDate)), type logical),\n      InsertIsWorkingDay = Table.AddColumn(InsertIsAfterToday, \"IsWeekDay\", each if Date.DayOfWeek([Date], Day.Monday) > 4 then false else true, type logical),\n      InsertIsHoliday = Table.AddColumn(InsertIsWorkingDay, \"IsHoliday\", each if Holidays = null then \"Unknown\" else List.Contains( Holidays, [Date] ), if Holidays = null then type text else type logical),\n      InsertIsBusinessDay = Table.AddColumn(InsertIsHoliday, \"IsBusinessDay\", each if [IsWeekDay] = true and [IsHoliday] <> true then true else false, type logical),\n      InsertDayType = Table.AddColumn(InsertIsBusinessDay, \"Day Type\", each if [IsHoliday] = true then \"Holiday\" else if [IsWeekDay] = false then \"Weekend\" else if [IsWeekDay] = true then \"Weekday\" else null, type text),\n\n      InsertISOYear = Table.AddColumn( InsertDayType, \"ISO Year\", each Date.Year( Date.AddDays( Date.StartOfWeek([Date], Day.Monday), 3 )), type number),\n      InsertISOqNum = Table.AddColumn(InsertISOYear, \"ISO Quarter Number\", each if [Week Number] >39 then 4 else if [Week Number] >26 then 3 else if [Week Number] >13 then 2 else 1, Int64.Type),\n      InsertISOqtr = Table.AddColumn(InsertISOqNum, \"ISO Quarter\", each \"Q\" & Number.ToText([ISO Quarter Number]), type text),\n      InsertISOQuarter = Table.AddColumn(InsertISOqtr, \"ISO Quarter & Year\", each \"Q\" & Number.ToText([ISO Quarter Number]) & \" \" & Number.ToText([ISO Year]), type text),\n      InsertISOqNy = Table.AddColumn(InsertISOQuarter, \"ISO QuarternYear\", each [ISO Year] * 10 + [ISO Quarter Number], type number),\n\n      // BufferTable = Table.Buffer(Table.Distinct( InsertISOqNy[[ISO Year], [DateInt]])),\n      // InsertISOday = Table.AddColumn(InsertISOqNy, \"ISO Day of Year\", (OT) => Table.RowCount( Table.SelectRows( BufferTable, (IT) => IT[DateInt] <= OT[DateInt] and IT[ISO Year] = OT[ISO Year])),  Int64.Type),\n      AddFY = Table.AddColumn(InsertISOqNy, \"Fiscal Year\", each \"FY\" & (if [Month] >= FYStartMonth and FYStartMonth >1 then Text.From([Year] +1) else Text.From([Year])), type text),\n      //AddFYs = Table.AddColumn(AddFY, \"Fiscal Year short\", each \"FY\" & (if [Month] >= FYStartMonth and FYStartMonth >1 then Text.PadEnd( Text.End( Text.From([Year] +1), 2), 2, \"0\") else Text.End( Text.From([Year]), 2)), type text),\n      AddFQ = Table.AddColumn(AddFY, \"Fiscal Quarter\", each \"FQ\" & Text.From( Number.RoundUp( Date.Month( Date.AddMonths( [Date], - (FYStartMonth -1) )) / 3 )) & \" \" & (if [Month] >= FYStartMonth and FYStartMonth >1 then Text.From([Year] +1) else Text.From([Year])), type text),\n      AddFQnYr = Table.AddColumn(AddFQ, \"FQuarternYear\", each (if [Month] >= FYStartMonth and FYStartMonth >1 then [Year] +1 else [Year]) * 10 + Number.RoundUp( Date.Month( Date.AddMonths( [Date], - (FYStartMonth -1) )) / 3 ), type number),\n      AddFM = Table.AddColumn(AddFQnYr, \"Fiscal Period Number\", each if [Month] >= FYStartMonth and FYStartMonth >1 then [Month] - (FYStartMonth-1) else if [Month] >= FYStartMonth and FYStartMonth =1 then [Month] else [Month] + (12-FYStartMonth+1), type number),\n      AddFP = Table.AddColumn(AddFM, \"Fiscal Period\", each \"FP\" & Text.PadStart( Text.From([Fiscal Period Number]), 2, \"0\") & \" \" & (if [Month] >= FYStartMonth and FYStartMonth >1 then Text.From([Year] +1) else Text.From([Year])), type text),\n      AddFMnYr = Table.AddColumn(AddFP , \"FPeriodnYear\", each (if [Month] >= FYStartMonth and FYStartMonth >1 then [Year] +1 else [Year]) * 100 + [Fiscal Period Number], type number),\n      FYCalendarStart = #date( Date.Year(StartDate)-1, FYStartMonth, 1 ),\n      InsertFFD = Table.AddColumn( AddFMnYr, \"FiscalFirstDay\", each if [Month] >= FYStartMonth and FYStartMonth >1 then #date( Date.Year([Date])+1, FYStartMonth, 1) else #date( Date.Year([Date]), FYStartMonth, 1), type date ),\n\n      InitTable = Table.FromList( List.Transform( {Number.From(FYCalendarStart) .. Number.From(EndDate)}, Date.From), Splitter.SplitByNothing(), type table [DateFW = Date.Type]),\n      AddFFD = Table.AddColumn( InitTable, \"FiscalFirstDay\", each if Date.Month([DateFW]) < FYStartMonth then #date(Date.Year([DateFW]), FYStartMonth, 1) else #date(Date.Year([DateFW]) + 1, FYStartMonth, 1)),\n      AddFWSD = Table.AddColumn( AddFFD, \"FWStartDate\", each Date.AddYears(Date.StartOfWeek([DateFW], Day.Monday), 1)),\n      Group1 = Table.Group( AddFWSD, {\"FiscalFirstDay\", \"FWStartDate\"}, {{\"AllRows\", each _, type table [DateFW = nullable date, FiscalFirstDay = date, FWStartDate = date]}}),\n      Group2 = Table.Group( Group1, {\"FiscalFirstDay\"}, {{\"AllRows2\", each _, type table [FiscalFirstDay = date, FWStartDate = date, AllRows = table]}}),\n      AddIndex = Table.AddColumn( Group2, \"Custom\", each Table.AddIndexColumn([AllRows2], \"Fiscal Week Number\", 1, 1) )[[Custom]],\n      ExpandG2 = Table.ExpandTableColumn( AddIndex, \"Custom\", {\"FiscalFirstDay\", \"FWStartDate\", \"AllRows\", \"Fiscal Week Number\"}, {\"FiscalFirstDay\", \"FWStartDate\", \"AllRows\", \"Fiscal Week Number\"}), \n      ExpandG1 = Table.ExpandTableColumn( ExpandG2, \"AllRows\", {\"DateFW\"}, {\"DateFW\"} )[[DateFW], [Fiscal Week Number]],\n      MergeFYW = Table.Join( InsertFFD, {\"Date\"}, ExpandG1, {\"DateFW\"}, JoinKind.LeftOuter, JoinAlgorithm.SortMerge ),\n      FWlogic = List.Contains( {null}, FYStartMonthNum),\n      UpdateFYWeek = if FWlogic then Table.ReplaceValue(MergeFYW, each [Fiscal Week Number], each if FYStartMonth =1 then [Week Number] else [Fiscal Week Number], Replacer.ReplaceValue, {\"Fiscal Week Number\"}) else MergeFYW,\n      AddFYW = Table.AddColumn( UpdateFYWeek, \"Fiscal Week\", each if FWlogic then \"F\" & [#\"Week & Year\"] else if FYStartMonth =1 then \"FW\" & Text.PadStart( Text.From([Fiscal Week Number]), 2, \"0\") & Date.ToText([Date], \" yyyy\") else if Date.Month([Date]) < FYStartMonth then \"FW\" & Text.PadStart( Text.From([Fiscal Week Number]), 2, \"0\") & Date.ToText([Date], \" yyyy\") else \"FW\" & Text.PadStart(Text.From([Fiscal Week Number]), 2, \"0\") & \" \" & Text.From( Date.Year([Date])+1), type text),\n      InsertFWeeknYear = Table.AddColumn(AddFYW, \"FWeeknYear\", each if FWlogic then [WeeknYear] else (if FYStartMonth =1 then Date.Year([Date]) else if Date.Month([Date]) < FYStartMonth then Date.Year([Date]) else Date.Year([Date])+1) * 100 + [Fiscal Week Number],  Int64.Type),\n      \n      CurrentDateRecord = Table.SelectRows(InsertFWeeknYear, each ([Date] = CurrentDate)),\n      CurrentISOyear = CurrentDateRecord{0}[ISO Year],\n      CurrentISOqtr = CurrentDateRecord{0}[ISO Quarter Number],\n      CurrentYear = CurrentDateRecord{0}[Year],\n      CurrentMonth = CurrentDateRecord{0}[Month],\n      CurrentFiscalFirstDay = CurrentDateRecord{0}[FiscalFirstDay],\n      PrevFiscalFirstDay = Date.AddYears(CurrentFiscalFirstDay, -1),\n      CurrentFY = CurrentDateRecord{0}[Fiscal Year],\n      CurrentFQ = CurrentDateRecord{0}[FQuarternYear],\n      CurrentFP = CurrentDateRecord{0}[FPeriodnYear],\n      CurrentFW = CurrentDateRecord{0}[FWeeknYear],\n\n      InsertISOYrOffset = Table.AddColumn(InsertFWeeknYear, \"ISO CurrYearOffset\", each [ISO Year] - CurrentISOyear, type number),\n      InsertISOQtrOffset = Table.AddColumn(InsertISOYrOffset, \"ISO CurrQuarterOffset\", each ((4 * [ISO Year]) +  [ISO Quarter Number]) - ((4 * CurrentISOyear) + CurrentISOqtr), type number),\n      InsertFYoffset = Table.AddColumn(InsertISOQtrOffset, \"Fiscal CurrYearOffset\", each try (if [Month] >= FYStartMonth then [Year]+1 else [Year]) - (if CurrentMonth >= FYStartMonth then CurrentYear+1 else CurrentYear) otherwise null, type number),\n      InsertCurrentFY = Table.AddColumn(InsertFYoffset, \"IsCurrentFY\", each if [Fiscal Year] = CurrentFY then true else false, type logical),\n      InsertCurrentFQ = Table.AddColumn(InsertCurrentFY, \"IsCurrentFQ\", each if [FQuarternYear] = CurrentFQ then true else false, type logical),\n      InsertCurrentFP = Table.AddColumn(InsertCurrentFQ, \"IsCurrentFP\", each if [FPeriodnYear] = CurrentFP then true else false, type logical),\n      InsertCurrentFW = Table.AddColumn(InsertCurrentFP, \"IsCurrentFW\", each if [FWeeknYear] = InsertISOYrOffset then true else false, type logical),\n      InsertPYTD = Table.AddColumn(InsertCurrentFW, \"IsPYTD\", each if CurrentYear-1 = [Year] and [Day of Year] <= CurrentDateRecord{0}[Day of Year] then true else false, type logical),\n        ListPrevFYDates = List.Buffer( Table.SelectRows( Table.ExpandTableColumn( Table.NestedJoin(\n            Table.AddIndexColumn( Table.RenameColumns( Table.TransformColumnTypes( Table.FromList( List.Dates( PrevFiscalFirstDay, Number.From(CurrentFiscalFirstDay-PrevFiscalFirstDay),#duration(1,0,0,0)), Splitter.SplitByNothing()),{{\"Column1\", type date}}), {{\"Column1\", \"DateFY\"}}), \"Index\", 1, 1), {\"Index\"}, \n            Table.AddIndexColumn( Table.RenameColumns( Table.TransformColumnTypes( Table.FromList( List.Dates( Date.AddYears( PrevFiscalFirstDay, -1), Number.From( PrevFiscalFirstDay - Date.AddYears( PrevFiscalFirstDay, -1)),#duration(1,0,0,0)), Splitter.SplitByNothing()),{{\"Column1\", type date}}), {{\"Column1\", \"DateFY\"}}), \"Index\", 1, 1)\n            , {\"Index\"}, \"Table\", JoinKind.LeftOuter), \"Table\", {\"DateFY\"}, {\"PrevDateFY\"}), each [DateFY] <= CurrentDate)[PrevDateFY] ),\n      InsertPFYTD = Table.AddColumn(InsertPYTD, \"IsPFYTD\", each if [Fiscal CurrYearOffset] = -1 and List.Contains(ListPrevFYDates, [Date] ) then true else false, type logical),\n      InsertNetWorkdays = if AddRelativeNetWorkdays = true then Table.AddColumn(InsertPFYTD, \"Relative Networkdays\", each fxNETWORKDAYS( StartDate, [Date], Holidays ), type number ) else InsertPFYTD,\n      fxNETWORKDAYS = (StartDate, EndDate, optional Holidays as list) =>\n        let\n          ListOfDates = List.Dates( StartDate, Number.From(EndDate-StartDate)+1, Duration.From(1) ),\n          DeleteHolidays = if Holidays = null then ListOfDates else List.Difference( ListOfDates, List.Transform(Holidays, Date.From )),\n          DeleteWeekends = List.Select( DeleteHolidays, each Date.DayOfWeek( _, Day.Monday) < 5 ),\n          CountDays = List.Count( DeleteWeekends)\n        in\n          CountDays,\n      RemoveToday = Table.RemoveColumns( if EndDate < CurrentDate then Table.SelectRows(InsertNetWorkdays, each ([Date] <> CurrentDate)) else InsertNetWorkdays, {\"Day of Year\", \"FiscalFirstDay\"}), \n      ChType = Table.TransformColumnTypes(RemoveToday,{{\"Year\", Int64.Type}, {\"Quarter Number\", Int64.Type}, {\"Month\", Int64.Type}, {\"Day of Month\", Int64.Type}, {\"DateInt\", Int64.Type}, {\"Day of Week Number\", Int64.Type}, {\"ISO CurrYearOffset\", Int64.Type}, {\"ISO QuarternYear\", Int64.Type}, {\"ISO CurrQuarterOffset\", Int64.Type}, {\"Week Number\", Int64.Type}, {\"WeeknYear\", Int64.Type}, {\"MonthnYear\", Int64.Type}, {\"QuarternYear\", Int64.Type}, {\"FQuarternYear\", Int64.Type}, {\"Fiscal Period Number\", Int64.Type}, {\"FPeriodnYear\", Int64.Type}, {\"CurrWeekOffset\", Int64.Type}, {\"CurrMonthOffset\", Int64.Type}, {\"CurrQuarterOffset\", Int64.Type}, {\"CurrYearOffset\", Int64.Type}, {\"Fiscal CurrYearOffset\", Int64.Type}, {\"Fiscal Week Number\", Int64.Type}}),\n      ReorderCols = Table.ReorderColumns(ChType,{\"Date\", \"Year\", \"CurrYearOffset\", \"YearCompleted\", \"Quarter Number\", \"Quarter\", \"Start of Quarter\", \"End of Quarter\", \"Quarter & Year\", \"QuarternYear\", \"CurrQuarterOffset\", \"QuarterCompleted\", \"Month\", \"Start of Month\", \"End of Month\", \"Month & Year\", \"MonthnYear\", \"CurrMonthOffset\", \"MonthCompleted\", \"Month Name\", \"Month Short\", \"Month Initial\", \"Day of Month\", \"Week Number\", \"Start of Week\", \"End of Week\", \"Week & Year\", \"WeeknYear\", \"CurrWeekOffset\", \"WeekCompleted\", \"Day of Week Number\", \"Day of Week Name\", \"Day of Week Initial\", \"DateInt\", \"CurrDayOffset\", \"IsAfterToday\", \"IsWeekDay\", \"IsHoliday\", \"IsBusinessDay\", \"Day Type\", \"ISO Year\", \"ISO CurrYearOffset\", \"ISO Quarter Number\", \"ISO Quarter\", \"ISO Quarter & Year\", \"ISO QuarternYear\", \"ISO CurrQuarterOffset\", \"Fiscal Year\", \"Fiscal CurrYearOffset\", \"Fiscal Quarter\", \"FQuarternYear\", \"Fiscal Period Number\", \"Fiscal Period\", \"FPeriodnYear\", \"DateFW\", \"Fiscal Week Number\", \"Fiscal Week\", \"FWeeknYear\", \"IsCurrentFY\", \"IsCurrentFQ\", \"IsCurrentFP\", \"IsCurrentFW\", \"IsPYTD\", \"IsPFYTD\"}),\n      ListCols = if FWlogic then Table.RemoveColumns(ReorderCols,{\"ISO Quarter Number\", \"Fiscal Year\", \"Fiscal Quarter\", \"FQuarternYear\", \"Fiscal Period Number\", \"Fiscal Period\", \"FPeriodnYear\", \"DateFW\", \"Fiscal Week Number\", \"Fiscal Week\", \"FWeeknYear\", \"Fiscal CurrYearOffset\", \"IsCurrentFQ\", \"IsCurrentFP\", \"IsCurrentFW\"}) else Table.RemoveColumns(ReorderCols,{\"Fiscal Period Number\", \"DateFW\", \"Fiscal Week Number\", \"ISO Quarter Number\"})\n  in\n      ListCols,\n      Documentation = [\n      Documentation.Name =  \" fxCalendar\", \n      Documentation.Description = \" Date table function to create an ISO-8601 calendar\", \n      Documentation.LongDescription = \" Date table function to create an ISO-8601 calendar\", \n      Documentation.Category = \" Table\", \n      Documentation.Version = \" 2.01: full code review\",\n      Documentation.Source = \" local\", \n      Documentation.Author = \" Melissa de Korte\", \n      Documentation.Examples = { [Description =  \" See: https://forum.enterprisedna.co/t/extended-date-table-power-query-m-function/6390\", \n        Code = \" Optional paramters: #(lf)\n        (FYStartMonthNum) Month number the fiscal year starts, Januari if omitted #(lf) \n        (Holidays) Select a query (and column) that contains a list of holiday dates #(lf) \n        (WDStartNum) Switch default weekday numbering from 0-6 to 1-7 by entering a 1 #(lf)\n        (AddRelativeNetWorkdays) if true adds a Relative Networkdays column to the date table #(lf)\n        #(lf)\n        Important to note: #(lf)\n        [Fiscal Week] starts on a Monday and can contain less than 7 days in a First- and/or Last Week of a FY #(lf)\n        [IsWeekDay] does not take holiday dates into account  #(lf)\n        [IsBusinessDay] does take optional holiday dates into account  #(lf)\n        [IsPYTD] and [IsPFYTD] compare Previous [Day of Year] with the Current [Day of Year] number, so dates don't align in leap years #(lf)\n        IMPORTANT! No Fiscal columns will be added if the (FYStartMonthNum) is omitted\", \n        Result = \" \" ] }\n      ]\n  in \n  Value.ReplaceType( fnDateTable, Value.ReplaceMetadata( Value.Type( fnDateTable ), Documentation ))\nin\n    Source"
                                }
                            ],
                            "configuredBy": "Victorsam@vsamautomation.onmicrosoft.com",
                            "configuredById": "1b8bd058-0db5-4cc3-9e33-a6b878d82180",
                            "isEffectiveIdentityRequired": false,
                            "isEffectiveIdentityRolesRequired": false,
                            "targetStorageMode": "Abf",
                            "createdDate": "2025-10-06T11:41:12.6",
                            "contentProviderType": "PbixInImportMode",
                            "datasourceUsages": [
                                {
                                    "datasourceInstanceId": "cc0f2bb1-414c-45bc-b3cf-04db6c06f90c"
                                }
                            ],
                            "tags": []
                        }
                    ],
                    "dataflows": [],
                    "datamarts": []
                }
            ],
            "datasourceInstances": [
                {
                    "datasourceType": "MySql",
                    "connectionDetails": {
                        "server": "vsamautomation.com",
                        "database": "vsamaut1_waziri"
                    },
                    "datasourceId": "cc0f2bb1-414c-45bc-b3cf-04db6c06f90c",
                    "gatewayId": "8e02e9a1-e29d-4a40-985b-0f6a8fba05b5"
                }
            ]
        }
    }
]