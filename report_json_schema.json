{
    "$id": "https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualContainer/1.0.0/schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Visual container",
    "description": "Defines a single visual or visual group on a report page.",
    "type": "object",
    "properties": {
        "name": {
            "description": "A unique identifier for the visual across the whole page.",
            "maxLength": 50,
            "type": "string"
        },
        "position": {
            "$ref": "#/definitions/VisualContainerPosition",
            "description": "Defines where the visual is position on the page and how big it should be, along\nwith z-index (stacking) for that visual.\nAlso defines the order in which visuals are navigated when using just keyboard (tabOrder)."
        },
        "visual": {
            "description": "Defines a chart to be shown inside of this container.",
            "$ref": "#/definitions/VisualConfig"
        },
        "visualGroup": {
            "description": "Defines that this container should be used as a grouping container.",
            "$ref": "#/definitions/VisualGroupConfig"
        },
        "parentGroupName": {
            "description": "Name of the parent group (visual container), if it is part of one.",
            "type": "string"
        },
        "filterConfig": {
            "description": "Filters that apply to all this visual - on top of the filters defined for the report and page.",
            "$ref": "#/definitions/FilterConfig"
        },
        "isHidden": {
            "description": "Marks the visual as hidden.",
            "type": "boolean"
        },
        "annotations": {
            "description": "Additional information to be saved (for example comments, readme, etc) for this visual.",
            "type": "array",
            "items": {
                "$ref": "#/definitions/Annotation"
            }
        },
        "howCreated": {
            "description": "Source of creation of this visual.",
            "type": "string",
            "anyOf": [
                {
                    "const": "Default",
                    "description": "Used when it doesn't fall in any of the buckets below."
                },
                {
                    "const": "Copilot",
                    "description": "Created by copilot."
                },
                {
                    "const": "CheckboxTickedInFieldList",
                    "description": "Selecting data from field list."
                },
                {
                    "const": "DraggedToCanvas",
                    "description": "Dragging data from field list to the canvas."
                },
                {
                    "const": "VisualTypeIconClicked",
                    "description": "Clicking a specific visual icon in visualizations list."
                },
                {
                    "const": "DraggedToFieldWell",
                    "description": "Dragging data from field list to field wells."
                },
                {
                    "const": "InsertVisualButton",
                    "description": "Clicking the \"Insert visual\" button in ribbon."
                },
                {
                    "const": "WhatIfParameterControl",
                    "description": "Automatically by what-if parameter."
                },
                {
                    "const": "QnaAppBar",
                    "description": "Ask a question in app bar."
                },
                {
                    "const": "QnaDoubleClick",
                    "description": "Double clicking on the canvas to generate a Q&A visual."
                },
                {
                    "const": "QnaKeyboardShortcut",
                    "description": "Use keyboard shortcut for Q&A visual."
                },
                {
                    "const": "FieldParameterControl",
                    "description": "Automatically by field parameters."
                },
                {
                    "const": "CanvasBackgroundContextMenu",
                    "description": "Using on-object context menu for the canvas."
                },
                {
                    "const": "ContextMenuPaste",
                    "description": "By using paste from context manu."
                },
                {
                    "const": "CopyPaste",
                    "description": "By using copy paste."
                }
            ]
        },
        "$schema": {
            "description": "Defines the schema to use for an item.",
            "type": "string",
            "const": "https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualContainer/1.0.0/schema.json"
        }
    },
    "additionalProperties": false,
    "required": [
        "$schema",
        "name",
        "position"
    ],
    "definitions": {
        "VisualContainerPosition": {
            "type": "object",
            "properties": {
                "x": {
                    "description": "Horizontal position of the left edge of the visual.\nShould be between 0 and width of the containing page.",
                    "type": "number"
                },
                "y": {
                    "description": "Vertical position of the top edge of the visual.\nShould be between 0 and height of the containing page.",
                    "type": "number"
                },
                "z": {
                    "description": "Defines the stacking order for the visual.\nHigher z-index visuals are shown on top of the lower ones.",
                    "type": "number"
                },
                "height": {
                    "description": "Height of the visual.\ny + height should be less than the height of the containing page.",
                    "type": "number"
                },
                "width": {
                    "description": "Width of the visual.\nx + width should be less than the width of the containing page.",
                    "type": "number"
                },
                "tabOrder": {
                    "description": "Defines the selection order for this visual when using keyboard (tab key)\nto navigate the visuals on the containing page.",
                    "type": "number"
                }
            },
            "additionalProperties": false,
            "required": [
                "height",
                "width",
                "x",
                "y"
            ]
        },
        "VisualConfig": {
            "type": "object",
            "properties": {
                "visualType": {
                    "description": "Name of the visual.",
                    "type": "string"
                },
                "autoSelectVisualType": {
                    "description": "VisualType is automatically picked by the system based on the data used in the visual.",
                    "type": "boolean"
                },
                "query": {
                    "description": "Defines the data to be plotted in the visual.",
                    "$ref": "#/definitions/Query"
                },
                "expansionStates": {
                    "description": "Defines the specific data points that are expanded.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExpansionState"
                    }
                },
                "objects": {
                    "description": "Specifies the formatting to be set for different \"objects\" of the visual.",
                    "$ref": "../../formattingObjectDefinitions/1.0.0/schema.json#/definitions/DataViewObjectDefinitions"
                },
                "visualContainerObjects": {
                    "description": "Specifies the formatting to be set for different \"objects\" of the container.",
                    "$ref": "#/definitions/VisualContainerFormattingObjects"
                },
                "syncGroup": {
                    "description": "Defines the sync group that this visual is part of.\nOnly applies to slicer visuals.",
                    "$ref": "#/definitions/VisualSyncGroup"
                },
                "drillFilterOtherVisuals": {
                    "description": "When another visual is drilled, if visual interactions are enabled between the two visuals,\nthen this property specifies if that drill should be applied as a filter to this visual.\nOverrides the default setting of the report.",
                    "type": "boolean"
                }
            },
            "additionalProperties": false,
            "required": [
                "visualType"
            ]
        },
        "Query": {
            "type": "object",
            "properties": {
                "sortDefinition": {
                    "description": "Defines how the data should be sorted in a visual",
                    "$ref": "#/definitions/SortDefinition"
                },
                "options": {
                    "description": "Specific options to apply when running the query. Applies to certain visuals only.",
                    "$ref": "#/definitions/VisualQueryOptions"
                },
                "queryState": {
                    "description": "Describes how the data should be arranged and used in the visual.",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/ProjectionState"
                    }
                },
                "isDrillDisabled": {
                    "description": "Should drill be allowed in the visual - only used by specific custom visuals.",
                    "type": "boolean"
                }
            },
            "additionalProperties": false,
            "required": [
                "queryState"
            ]
        },
        "SortDefinition": {
            "type": "object",
            "properties": {
                "sort": {
                    "description": "Defines the fields the data is sorted by.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuerySort"
                    }
                },
                "isDefaultSort": {
                    "description": "If the sort if explicitly set by user, then this will be false, Power BI can update the sort to match\nthe visual in this case.",
                    "type": "boolean"
                }
            },
            "additionalProperties": false
        },
        "QuerySort": {
            "type": "object",
            "properties": {
                "field": {
                    "$ref": "../../semanticQuery/1.0.0/schema.json#/definitions/QueryExpressionContainer",
                    "description": "Field to sort by"
                },
                "direction": {
                    "$ref": "#/definitions/SortDirection",
                    "description": "Direction of sort - ascending or descending."
                }
            },
            "additionalProperties": false,
            "required": [
                "direction",
                "field"
            ]
        },
        "SortDirection": {
            "type": "string",
            "anyOf": [
                {
                    "const": "Ascending",
                    "description": "Sort smallest to biggest."
                },
                {
                    "const": "Descending",
                    "description": "Sort biggest to smallest."
                }
            ]
        },
        "VisualQueryOptions": {
            "type": "object",
            "properties": {
                "allowBinnedLineSample": {
                    "description": "A better sampling for line charts.",
                    "type": "boolean"
                },
                "allowOverlappingPointsSample": {
                    "description": "A better sampling for scatter charts.",
                    "type": "boolean"
                }
            },
            "additionalProperties": false
        },
        "ProjectionState": {
            "type": "object",
            "properties": {
                "showAll": {
                    "description": "Show all values for all fields in this projection.",
                    "type": "boolean"
                },
                "projections": {
                    "description": "Defines the fields and their properties for this visual role.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RoleProjection"
                    }
                },
                "fieldParameters": {
                    "description": "Defines any field parameters used as projections.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RoleFieldParameter"
                    }
                }
            },
            "additionalProperties": false,
            "required": [
                "projections"
            ]
        },
        "RoleProjection": {
            "type": "object",
            "properties": {
                "field": {
                    "$ref": "../../semanticQuery/1.0.0/schema.json#/definitions/QueryExpressionContainer",
                    "description": "The data field from the semantic model."
                },
                "queryRef": {
                    "description": "A unique name for this field - unique per visual.",
                    "type": "string"
                },
                "nativeQueryRef": {
                    "description": "Native reference name for this field - unique per visual, used for referencing fields in visual calculations.",
                    "type": "string"
                },
                "displayName": {
                    "description": "An override for display name - by default it is the field name in the semantic model.",
                    "type": "string"
                },
                "format": {
                    "description": "A custom format defined for this field.",
                    "type": "string"
                },
                "active": {
                    "description": "Is the field currently active in the visual - used as part of drill operations.",
                    "type": "boolean"
                },
                "hidden": {
                    "description": "Is the field visible in the visual - used as part of visual calculations.",
                    "type": "boolean"
                }
            },
            "additionalProperties": false,
            "required": [
                "field",
                "queryRef"
            ]
        },
        "RoleFieldParameter": {
            "type": "object",
            "properties": {
                "parameterExpr": {
                    "$ref": "../../semanticQuery/1.0.0/schema.json#/definitions/QueryExpressionContainer",
                    "description": "Defines the parameter field."
                },
                "index": {
                    "description": "Index at which parameter fields begin in the projections list.",
                    "type": "number"
                },
                "length": {
                    "description": "Number of fields replaced by the parameter in the projections list.",
                    "type": "number"
                }
            },
            "additionalProperties": false,
            "required": [
                "index",
                "parameterExpr"
            ]
        },
        "ExpansionState": {
            "type": "object",
            "properties": {
                "roles": {
                    "description": "Visual roles (projection names) that have individual points expanded.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "root": {
                    "description": "Defines the specific values that are expanded for each field in the hierarchy",
                    "$ref": "#/definitions/RootExpansionState"
                },
                "levels": {
                    "description": "Describes the fields participating in the expansion",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LevelExpansionState"
                    }
                }
            },
            "additionalProperties": false,
            "required": [
                "roles"
            ]
        },
        "RootExpansionState": {
            "type": "object",
            "properties": {
                "identityValues": {
                    "description": "Describes the instances that are expanded. \nOptional for the root expansion state.\nMust by Literal expressions.",
                    "type": "array",
                    "items": {
                        "$ref": "../../semanticQuery/1.0.0/schema.json#/definitions/QueryExpressionContainer"
                    }
                },
                "isToggled": {
                    "description": "True if the value is expanded.",
                    "default": false,
                    "type": "boolean"
                },
                "children": {
                    "description": "Child values in the hierarchy that are expanded",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NodeExpansionState"
                    }
                }
            },
            "additionalProperties": false
        },
        "NodeExpansionState": {
            "type": "object",
            "properties": {
                "identityValues": {
                    "description": "Describes the instances that are expanded.\nMust by Literal expressions.",
                    "type": "array",
                    "items": {
                        "$ref": "../../semanticQuery/1.0.0/schema.json#/definitions/QueryExpressionContainer"
                    }
                },
                "isToggled": {
                    "description": "True if the value is expanded.",
                    "default": false,
                    "type": "boolean"
                },
                "children": {
                    "description": "Child values in the hierarchy that are expanded",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NodeExpansionState"
                    }
                }
            },
            "additionalProperties": false,
            "required": [
                "identityValues"
            ]
        },
        "LevelExpansionState": {
            "type": "object",
            "properties": {
                "identityKeys": {
                    "description": "Describes the fields in the visual.",
                    "type": "array",
                    "items": {
                        "$ref": "../../semanticQuery/1.0.0/schema.json#/definitions/QueryExpressionContainer"
                    }
                },
                "isCollapsed": {
                    "description": "True if the entire field isn't expanded (i.e. false if only specific instances are expanded).",
                    "type": "boolean"
                },
                "queryRefs": {
                    "description": "Which fields in the query does this relate to - must match a queryRef in the query.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "isPinned": {
                    "description": "Is the field pinned.",
                    "type": "boolean"
                },
                "isLocked": {
                    "description": "Is the field locked (used for decomposition tree)",
                    "type": "boolean"
                },
                "AIInformation": {
                    "description": "More information about how the expansion is done (used for decomposition tree)",
                    "$ref": "#/definitions/AILevelInformation"
                }
            },
            "additionalProperties": false,
            "required": [
                "queryRefs"
            ]
        },
        "AILevelInformation": {
            "type": "object",
            "properties": {
                "method": {
                    "$ref": "#/definitions/AIDecompositionMethod",
                    "description": "Type of expansion."
                },
                "disabled": {
                    "description": "Is the level disabled.",
                    "type": "boolean"
                }
            },
            "additionalProperties": false,
            "required": [
                "method"
            ]
        },
        "AIDecompositionMethod": {
            "enum": [
                "BestSplit",
                "MaxSplit",
                "MinSplit"
            ],
            "type": "string"
        },
        "VisualContainerFormattingObjects": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "selector": {
                                "description": "Defines the scope at which to apply the formatting for this object.\nCan also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.",
                                "$ref": "../../formattingObjectDefinitions/1.0.0/schema.json#/definitions/Selector"
                            },
                            "properties": {
                                "$ref": "#/definitions/Title",
                                "description": "Describes the properties of the object to apply formatting changes to."
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "properties"
                        ]
                    }
                },
                "subTitle": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "selector": {
                                "description": "Defines the scope at which to apply the formatting for this object.\nCan also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.",
                                "$ref": "../../formattingObjectDefinitions/1.0.0/schema.json#/definitions/Selector"
                            },
                            "properties": {
                                "$ref": "#/definitions/SubTitle",
                                "description": "Describes the properties of the object to apply formatting changes to."
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "properties"
                        ]
                    }
                },
                "divider": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "selector": {
                                "description": "Defines the scope at which to apply the formatting for this object.\nCan also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.",
                                "$ref": "../../formattingObjectDefinitions/1.0.0/schema.json#/definitions/Selector"
                            },
                            "properties": {
                                "$ref": "#/definitions/Divider",
                                "description": "Describes the properties of the object to apply formatting changes to."
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "properties"
                        ]
                    }
                },
                "spacing": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "selector": {
                                "description": "Defines the scope at which to apply the formatting for this object.\nCan also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.",
                                "$ref": "../../formattingObjectDefinitions/1.0.0/schema.json#/definitions/Selector"
                            },
                            "properties": {
                                "$ref": "#/definitions/Spacing",
                                "description": "Describes the properties of the object to apply formatting changes to."
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "properties"
                        ]
                    }
                },
                "background": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "selector": {
                                "description": "Defines the scope at which to apply the formatting for this object.\nCan also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.",
                                "$ref": "../../formattingObjectDefinitions/1.0.0/schema.json#/definitions/Selector"
                            },
                            "properties": {
                                "$ref": "#/definitions/Background",
                                "description": "Describes the properties of the object to apply formatting changes to."
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "properties"
                        ]
                    }
                },
                "padding": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "selector": {
                                "description": "Defines the scope at which to apply the formatting for this object.\nCan also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.",
                                "$ref": "../../formattingObjectDefinitions/1.0.0/schema.json#/definitions/Selector"
                            },
                            "properties": {
                                "$ref": "#/definitions/Padding",
                                "description": "Describes the properties of the object to apply formatting changes to."
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "properties"
                        ]
                    }
                },
                "lockAspect": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "selector": {
                                "description": "Defines the scope at which to apply the formatting for this object.\nCan also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.",
                                "$ref": "../../formattingObjectDefinitions/1.0.0/schema.json#/definitions/Selector"
                            },
                            "properties": {
                                "$ref": "#/definitions/LockAspect",
                                "description": "Describes the properties of the object to apply formatting changes to."
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "properties"
                        ]
                    }
                },
                "general": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "selector": {
                                "description": "Defines the scope at which to apply the formatting for this object.\nCan also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.",
                                "$ref": "../../formattingObjectDefinitions/1.0.0/schema.json#/definitions/Selector"
                            },
                            "properties": {
                                "$ref": "#/definitions/VisualContainerGeneralFormattingObjects",
                                "description": "Describes the properties of the object to apply formatting changes to."
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "properties"
                        ]
                    }
                },
                "border": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "selector": {
                                "description": "Defines the scope at which to apply the formatting for this object.\nCan also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.",
                                "$ref": "../../formattingObjectDefinitions/1.0.0/schema.json#/definitions/Selector"
                            },
                            "properties": {
                                "$ref": "#/definitions/Border",
                                "description": "Describes the properties of the object to apply formatting changes to."
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "properties"
                        ]
                    }
                },
                "dropShadow": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "selector": {
                                "description": "Defines the scope at which to apply the formatting for this object.\nCan also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.",
                                "$ref": "../../formattingObjectDefinitions/1.0.0/schema.json#/definitions/Selector"
                            },
                            "properties": {
                                "$ref": "#/definitions/DropShadow",
                                "description": "Describes the properties of the object to apply formatting changes to."
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "properties"
                        ]
                    }
                },
                "visualLink": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "selector": {
                                "description": "Defines the scope at which to apply the formatting for this object.\nCan also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.",
                                "$ref": "../../formattingObjectDefinitions/1.0.0/schema.json#/definitions/Selector"
                            },
                            "properties": {
                                "$ref": "#/definitions/VisualLink",
                                "description": "Describes the properties of the object to apply formatting changes to."
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "properties"
                        ]
                    }
                },
                "visualTooltip": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "selector": {
                                "description": "Defines the scope at which to apply the formatting for this object.\nCan also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.",
                                "$ref": "../../formattingObjectDefinitions/1.0.0/schema.json#/definitions/Selector"
                            },
                            "properties": {
                                "$ref": "#/definitions/VisualTooltip",
                                "description": "Describes the properties of the object to apply formatting changes to."
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "properties"
                        ]
                    }
                },
                "stylePreset": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "selector": {
                                "description": "Defines the scope at which to apply the formatting for this object.\nCan also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.",
                                "$ref": "../../formattingObjectDefinitions/1.0.0/schema.json#/definitions/Selector"
                            },
                            "properties": {
                                "$ref": "#/definitions/StylePreset",
                                "description": "Describes the properties of the object to apply formatting changes to."
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "properties"
                        ]
                    }
                },
                "visualHeader": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "selector": {
                                "description": "Defines the scope at which to apply the formatting for this object.\nCan also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.",
                                "$ref": "../../formattingObjectDefinitions/1.0.0/schema.json#/definitions/Selector"
                            },
                            "properties": {
                                "$ref": "#/definitions/VisualHeader",
                                "description": "Describes the properties of the object to apply formatting changes to."
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "properties"
                        ]
                    }
                },
                "visualHeaderTooltip": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "selector": {
                                "description": "Defines the scope at which to apply the formatting for this object.\nCan also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.",
                                "$ref": "../../formattingObjectDefinitions/1.0.0/schema.json#/definitions/Selector"
                            },
                            "properties": {
                                "$ref": "#/definitions/VisualHeaderTooltip",
                                "description": "Describes the properties of the object to apply formatting changes to."
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "properties"
                        ]
                    }
                }
            },
            "additionalProperties": false
        },
        "Title": {
            "type": "object",
            "properties": {
                "show": {},
                "text": {},
                "heading": {},
                "titleWrap": {},
                "fontColor": {},
                "background": {},
                "alignment": {},
                "fontSize": {},
                "bold": {},
                "italic": {},
                "underline": {},
                "fontFamily": {}
            },
            "additionalProperties": false
        },
        "SubTitle": {
            "type": "object",
            "properties": {
                "show": {},
                "text": {},
                "heading": {},
                "titleWrap": {},
                "fontColor": {},
                "alignment": {},
                "fontSize": {},
                "bold": {},
                "italic": {},
                "underline": {},
                "fontFamily": {}
            },
            "additionalProperties": false
        },
        "Divider": {
            "type": "object",
            "properties": {
                "show": {},
                "ignorePadding": {},
                "color": {},
                "style": {},
                "width": {}
            },
            "additionalProperties": false
        },
        "Spacing": {
            "type": "object",
            "properties": {
                "customizeSpacing": {},
                "verticalSpacing": {},
                "spaceBelowTitle": {},
                "spaceBelowSubTitle": {},
                "spaceBelowTitleArea": {}
            },
            "additionalProperties": false
        },
        "Background": {
            "type": "object",
            "properties": {
                "show": {},
                "color": {},
                "transparency": {}
            },
            "additionalProperties": false
        },
        "Padding": {
            "type": "object",
            "properties": {
                "top": {},
                "bottom": {},
                "left": {},
                "right": {}
            },
            "additionalProperties": false
        },
        "LockAspect": {
            "type": "object",
            "properties": {
                "show": {}
            },
            "additionalProperties": false
        },
        "VisualContainerGeneralFormattingObjects": {
            "type": "object",
            "properties": {
                "x": {},
                "y": {},
                "width": {},
                "height": {},
                "altText": {},
                "allowBinnedLineSample": {},
                "allowOverlappingPointsSample": {},
                "keepLayerOrder": {}
            },
            "additionalProperties": false
        },
        "Border": {
            "type": "object",
            "properties": {
                "show": {},
                "color": {},
                "radius": {}
            },
            "additionalProperties": false
        },
        "DropShadow": {
            "type": "object",
            "properties": {
                "show": {},
                "preset": {},
                "position": {},
                "color": {},
                "transparency": {},
                "shadowSpread": {},
                "shadowBlur": {},
                "angle": {},
                "shadowDistance": {}
            },
            "additionalProperties": false
        },
        "VisualLink": {
            "type": "object",
            "properties": {
                "show": {},
                "type": {},
                "bookmark": {},
                "disabledTooltip": {},
                "drillthroughSection": {},
                "enabledTooltip": {},
                "qna": {},
                "suppressDefaultTooltip": {},
                "showDefaultTooltip": {},
                "navigationSection": {},
                "tooltip": {},
                "tooltipPlaceholderText": {},
                "webUrl": {}
            },
            "additionalProperties": false
        },
        "VisualTooltip": {
            "type": "object",
            "properties": {
                "show": {},
                "type": {},
                "section": {},
                "titleFontColor": {},
                "valueFontColor": {},
                "fontSize": {},
                "bold": {},
                "italic": {},
                "underline": {},
                "fontFamily": {},
                "background": {},
                "transparency": {},
                "actionFontColor": {},
                "themedTitleFontColor": {},
                "themedBackground": {},
                "themedValueFontColor": {}
            },
            "additionalProperties": false
        },
        "StylePreset": {
            "type": "object",
            "properties": {
                "name": {}
            },
            "additionalProperties": false
        },
        "VisualHeader": {
            "type": "object",
            "properties": {
                "show": {},
                "background": {},
                "border": {},
                "transparency": {},
                "foreground": {},
                "showVisualInformationButton": {},
                "showVisualWarningButton": {},
                "showVisualErrorButton": {},
                "showDrillRoleSelector": {},
                "showDrillUpButton": {},
                "showDrillToggleButton": {},
                "showDrillDownLevelButton": {},
                "showDrillDownExpandButton": {},
                "showPinButton": {},
                "showFilterRestatementButton": {},
                "showFocusModeButton": {},
                "showCopyVisualImageButton": {},
                "showSeeDataLayoutToggleButton": {},
                "showOptionsMenu": {},
                "showCommentButton": {},
                "showTooltipButton": {},
                "showPersonalizeVisualButton": {},
                "showSmartNarrativeButton": {}
            },
            "additionalProperties": false
        },
        "VisualHeaderTooltip": {
            "type": "object",
            "properties": {
                "type": {},
                "section": {},
                "text": {},
                "titleFontColor": {},
                "fontSize": {},
                "fontFamily": {},
                "bold": {},
                "italic": {},
                "underline": {},
                "background": {},
                "transparency": {},
                "themedTitleFontColor": {},
                "themedBackground": {}
            },
            "additionalProperties": false
        },
        "VisualSyncGroup": {
            "type": "object",
            "properties": {
                "groupName": {
                    "description": "Unique name for the sync group.",
                    "type": "string"
                },
                "fieldChanges": {
                    "description": "Should synced visuals update when fields change.",
                    "type": "boolean"
                },
                "filterChanges": {
                    "description": "Should synced visuals update when filters change.",
                    "type": "boolean"
                }
            },
            "additionalProperties": false,
            "required": [
                "groupName"
            ]
        },
        "VisualGroupConfig": {
            "type": "object",
            "properties": {
                "displayName": {
                    "description": "Display name for the group.",
                    "type": "string"
                },
                "groupMode": {
                    "$ref": "#/definitions/GroupLayoutMode",
                    "description": "Defines how the visuals are organized inside this group."
                },
                "objects": {
                    "description": "Specifies the formatting to be set for different \"objects\" of this group.",
                    "$ref": "#/definitions/VisualGroupFormattingObjects"
                }
            },
            "additionalProperties": false,
            "required": [
                "displayName",
                "groupMode"
            ]
        },
        "GroupLayoutMode": {
            "type": "string",
            "anyOf": [
                {
                    "const": "ScaleMode",
                    "description": "Visuals are scaled as group resizes to preserve the aspect ratio and avoid scrolling."
                },
                {
                    "const": "ScrollMode",
                    "description": "Visuals are not resized, if the containing box for group is smaller than the space\r\nneeded for visuals, then scrollbar is added."
                }
            ]
        },
        "VisualGroupFormattingObjects": {
            "type": "object",
            "properties": {
                "background": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "selector": {
                                "description": "Defines the scope at which to apply the formatting for this object.\nCan also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.",
                                "$ref": "../../formattingObjectDefinitions/1.0.0/schema.json#/definitions/Selector"
                            },
                            "properties": {
                                "$ref": "#/definitions/Background",
                                "description": "Describes the properties of the object to apply formatting changes to."
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "properties"
                        ]
                    }
                },
                "lockAspect": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "selector": {
                                "description": "Defines the scope at which to apply the formatting for this object.\nCan also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.",
                                "$ref": "../../formattingObjectDefinitions/1.0.0/schema.json#/definitions/Selector"
                            },
                            "properties": {
                                "$ref": "#/definitions/LockAspect",
                                "description": "Describes the properties of the object to apply formatting changes to."
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "properties"
                        ]
                    }
                },
                "general": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "selector": {
                                "description": "Defines the scope at which to apply the formatting for this object.\nCan also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.",
                                "$ref": "../../formattingObjectDefinitions/1.0.0/schema.json#/definitions/Selector"
                            },
                            "properties": {
                                "$ref": "#/definitions/VisualGroupGeneralFormattingObjects",
                                "description": "Describes the properties of the object to apply formatting changes to."
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "properties"
                        ]
                    }
                }
            },
            "additionalProperties": false
        },
        "VisualGroupGeneralFormattingObjects": {
            "type": "object",
            "properties": {
                "x": {},
                "y": {},
                "width": {},
                "height": {},
                "altText": {}
            },
            "additionalProperties": false
        },
        "FilterConfig": {
            "type": "object",
            "properties": {
                "filters": {
                    "description": "Defines the definitions and metadata for the filters.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FilterContainer"
                    }
                },
                "filterSortOrder": {
                    "description": "Defines how the filters sorted - by name or custom sorting\nIf custom sorting, then ordinal property of every filter is used as the sort order, \nfilters where ordinal is skipped will be shown at the end; ordering will fallback to display name of the field.",
                    "type": "string",
                    "anyOf": [
                        {
                            "const": "Ascending",
                            "description": "Sorted ascending by display name of the filter field."
                        },
                        {
                            "const": "Descending",
                            "description": "Sorted descending by display name of the filter field."
                        },
                        {
                            "const": "Custom",
                            "description": "Sorted ascending by ordinal property of filters."
                        }
                    ]
                }
            },
            "additionalProperties": false
        },
        "FilterContainer": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "A unique name (across the whole report definition) defined for this filter.",
                    "type": "string"
                },
                "displayName": {
                    "description": "An alternate name to use when displaying this filter - by default the display name of the field will be used, if there is no field or display name, \nthen restatement of the filter will be shown. Only applies to certain filter types.",
                    "type": "string"
                },
                "ordinal": {
                    "description": "Defines the ordering of this filter w.r.t. other filters - only applies when Custom sort order is set.",
                    "type": "number"
                },
                "field": {
                    "description": "Defines the field from your data that is filtered.",
                    "$ref": "../../semanticQuery/1.0.0/schema.json#/definitions/QueryExpressionContainer"
                },
                "type": {
                    "description": "The type of a filter.",
                    "type": "string",
                    "anyOf": [
                        {
                            "const": "Categorical"
                        },
                        {
                            "const": "Range"
                        },
                        {
                            "const": "Advanced"
                        },
                        {
                            "const": "Passthrough"
                        },
                        {
                            "const": "TopN"
                        },
                        {
                            "const": "Include"
                        },
                        {
                            "const": "Exclude"
                        },
                        {
                            "const": "RelativeDate"
                        },
                        {
                            "const": "Tuple"
                        },
                        {
                            "const": "RelativeTime"
                        }
                    ]
                },
                "filter": {
                    "description": "Defines the actual filter definition - it is dependent on the type of filter.",
                    "$ref": "../../semanticQuery/1.0.0/schema.json#/definitions/FilterDefinition"
                },
                "restatement": {
                    "description": "A custom restatement to show for the filter - only applies to Passthrough filter type. For all other filters, a restatement is generated based on the filter definition.",
                    "type": "string"
                },
                "howCreated": {
                    "description": "Specifies how this filter was first created.",
                    "type": "string",
                    "anyOf": [
                        {
                            "const": "Auto",
                            "description": "Created automatically when a field is used in the visual."
                        },
                        {
                            "const": "User",
                            "description": "Filters created from fields not used in a visual by the user."
                        },
                        {
                            "const": "Drill",
                            "description": "Created when drilling down on a data point in a visual."
                        },
                        {
                            "const": "Include",
                            "description": "Created by including a data point in a visual."
                        },
                        {
                            "const": "Exclude",
                            "description": "Created by excluding a data point from a visual."
                        },
                        {
                            "const": "Drillthrough",
                            "description": "Created by drill context that is applied to the page when using drill-through\r\naction from another page."
                        }
                    ]
                },
                "isHiddenInViewMode": {
                    "description": "Defines whether to hide this filter when viewing the report.",
                    "type": "boolean"
                },
                "isLockedInViewMode": {
                    "description": "Defines whether the filter value can be changed when viewing the report.",
                    "type": "boolean"
                },
                "objects": {
                    "description": "Formatting for different \"objects\" of a filter card",
                    "$ref": "#/definitions/FilterContainerFormattingObjects"
                }
            },
            "additionalProperties": false,
            "required": [
                "name"
            ]
        },
        "FilterContainerFormattingObjects": {
            "type": "object",
            "properties": {
                "general": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "selector": {
                                "description": "Defines the scope at which to apply the formatting for this object.\nCan also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.",
                                "$ref": "../../formattingObjectDefinitions/1.0.0/schema.json#/definitions/Selector"
                            },
                            "properties": {
                                "$ref": "#/definitions/FilterContainerFormattingObjectsProperties",
                                "description": "Describes the properties of the object to apply formatting changes to."
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "properties"
                        ]
                    }
                }
            },
            "additionalProperties": false
        },
        "FilterContainerFormattingObjectsProperties": {
            "type": "object",
            "properties": {
                "requireSingleSelect": {},
                "isInvertedSelectionMode": {}
            },
            "additionalProperties": false
        },
        "Annotation": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Unique name for the annotation.",
                    "type": "string"
                },
                "value": {
                    "description": "A value for this annotation.",
                    "type": "string"
                }
            },
            "additionalProperties": false,
            "required": [
                "name",
                "value"
            ]
        }
    },
    "oneOf": [
        {
            "required": [
                "visual"
            ]
        },
        {
            "required": [
                "visualGroup"
            ]
        }
    ]
}
